pages = [{"l":"index.html","n":"Scalqa","t":"Scalqa","d":""},
{"l":"Guide/index.html","n":"Guide","t":"Guide","d":""},
{"l":"Guide/Introduction/index.html","n":"Introduction","t":"Introduction","d":""},
{"l":"Guide/Introduction/About.html","n":"About","t":"About","d":""},
{"l":"Guide/Introduction/Download_and_Setup.html","n":"Download and Setup","t":"Download and Setup","d":""},
{"l":"Guide/Introduction/H2O_Structure.html","n":"H2O Structure","t":"H2O Structure","d":""},
{"l":"Guide/Introduction/Do_Not_Use_toString.html","n":"Do Not Use 'toString'","t":"Do Not Use 'toString'","d":""},
{"l":"Guide/Introduction/Samples.html","n":"Samples","t":"Samples","d":""},
{"l":"Guide/Features/index.html","n":"Features","t":"Features","d":""},
{"l":"Guide/Features/Containers.html","n":"Containers","t":"Containers","d":""},
{"l":"Guide/Features/Stream.html","n":"Stream","t":"Stream","d":""},
{"l":"Guide/Features/Option.html","n":"Option","t":"Option","d":""},
{"l":"Guide/Features/Pack.html","n":"Pack","t":"Pack","d":""},
{"l":"Guide/Features/Specialized.html","n":"Specialized","t":"Specialized","d":""},
{"l":"Guide/Features/Data.html","n":"Data","t":"Data","d":""},
{"l":"Guide/Features/For-Comprehensions.html","n":"For-Comprehensions ","t":"For-Comprehensions ","d":""},
{"l":"Guide/Internals/index.html","n":"Internals","t":"Internals","d":""},
{"l":"Guide/Internals/SLIM_Coding.html","n":"SLIM Coding","t":"SLIM Coding","d":""},
{"l":"Guide/Internals/Private_Packages.html","n":"Private Packages","t":"Private Packages","d":""},
{"l":"Guide/Blog/Index.html","n":"Blog","t":"Blog","d":""},
{"l":"api/index.html","n":"API","t":" API","d":"api"},
{"l":"api/scalqa.html","n":"scalqa","t":"package scalqa","d":"scalqa"},
{"l":"api/scalqa.html","n":"ALL","t":"type ALL >: ALL <: ALL","d":"scalqa"},
{"l":"api/scalqa.html","n":"BigDecimal","t":"type BigDecimal >: BigDecimal <: BigDecimal","d":"scalqa"},
{"l":"api/scalqa.html","n":"BigInteger","t":"type BigInteger >: BigInteger <: BigInteger","d":"scalqa"},
{"l":"api/scalqa.html","n":"BOTTOM","t":"type BOTTOM >: BOTTOM <: BOTTOM","d":"scalqa"},
{"l":"api/scalqa.html","n":"Buffer","t":"type Buffer[A] = Buffer[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Buffer","t":"val Buffer: Buffer","d":"scalqa"},
{"l":"api/scalqa.html","n":"ByteCount","t":"type ByteCount >: ByteCount <: ByteCount","d":"scalqa"},
{"l":"api/scalqa.html","n":"CENTER","t":"type CENTER >: CENTER <: CENTER","d":"scalqa"},
{"l":"api/scalqa.html","n":"Collection","t":"type Collection[+A] = Collection[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Collection","t":"val Collection: Collection","d":"scalqa"},
{"l":"api/scalqa.html","n":"CURRENT","t":"type CURRENT >: CURRENT <: CURRENT","d":"scalqa"},
{"l":"api/scalqa.html","n":"Day","t":"type Day >: Day <: Day","d":"scalqa"},
{"l":"api/scalqa.html","n":"DayTime","t":"type DayTime >: DayTime <: DayTime","d":"scalqa"},
{"l":"api/scalqa.html","n":"DEFAULT","t":"type DEFAULT >: DEFAULT <: DEFAULT","d":"scalqa"},
{"l":"api/scalqa.html","n":"Doc","t":"type Doc >: Doc <: Doc","d":"scalqa"},
{"l":"api/scalqa.html","n":"DOWN","t":"type DOWN >: DOWN <: DOWN","d":"scalqa"},
{"l":"api/scalqa.html","n":"EMPTY","t":"type EMPTY >: EMPTY <: EMPTY","d":"scalqa"},
{"l":"api/scalqa.html","n":"EnumCompanion","t":"type EnumCompanion >: ([A <: Enum] =>> EnumCompanion[A]) <: ([A <: Enum] =>> EnumCompanion[A])","d":"scalqa"},
{"l":"api/scalqa.html","n":"HORIZONTAL","t":"type HORIZONTAL >: HORIZONTAL <: HORIZONTAL","d":"scalqa"},
{"l":"api/scalqa.html","n":"Idx","t":"type Idx[+A] = Idx[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Idx","t":"val Idx: Idx","d":"scalqa"},
{"l":"api/scalqa.html","n":"LEFT","t":"type LEFT >: LEFT <: LEFT","d":"scalqa"},
{"l":"api/scalqa.html","n":"Lookup","t":"type Lookup[A, +B] = Lookup[A, B]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Lookup","t":"val Lookup: Lookup","d":"scalqa"},
{"l":"api/scalqa.html","n":"MAX","t":"type MAX >: MAX <: MAX","d":"scalqa"},
{"l":"api/scalqa.html","n":"MIN","t":"type MIN >: MIN <: MIN","d":"scalqa"},
{"l":"api/scalqa.html","n":"Month","t":"type Month >: Month <: Month","d":"scalqa"},
{"l":"api/scalqa.html","n":"NEW","t":"type NEW >: NEW <: NEW","d":"scalqa"},
{"l":"api/scalqa.html","n":"Observable","t":"type Observable >: Observable <: Observable","d":"scalqa"},
{"l":"api/scalqa.html","n":"Opt","t":"type Opt[+A] = DEF[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Opt","t":"val Opt: Opt","d":"scalqa"},
{"l":"api/scalqa.html","n":"Ordering","t":"type Ordering >: ([A] =>> Ordering[A]) <: ([A] =>> Ordering[A])","d":"scalqa"},
{"l":"api/scalqa.html","n":"Pack","t":"type Pack[A] = Pack[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Pack","t":"val Pack: Pack","d":"scalqa"},
{"l":"api/scalqa.html","n":"Percent","t":"type Percent >: Percent <: Percent","d":"scalqa"},
{"l":"api/scalqa.html","n":"Period","t":"type Period >: Period <: Period","d":"scalqa"},
{"l":"api/scalqa.html","n":"Pro","t":"type Pro[+A] = Pro[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Pro","t":"val Pro: Pro","d":"scalqa"},
{"l":"api/scalqa.html","n":"Promise","t":"type Promise[+A] = Promise[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Promise","t":"val Promise: Promise","d":"scalqa"},
{"l":"api/scalqa.html","n":"Range","t":"type Range[A] = Range[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Range","t":"val Range: Range","d":"scalqa"},
{"l":"api/scalqa.html","n":"Request","t":"type Request >: Request <: Request","d":"scalqa"},
{"l":"api/scalqa.html","n":"Result","t":"type Result[+A] = DEF[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Result","t":"val Result: Result","d":"scalqa"},
{"l":"api/scalqa.html","n":"RIGHT","t":"type RIGHT >: RIGHT <: RIGHT","d":"scalqa"},
{"l":"api/scalqa.html","n":"Rounding","t":"type Rounding >: Rounding <: Rounding","d":"scalqa"},
{"l":"api/scalqa.html","n":"SEPARATOR","t":"type SEPARATOR >: SEPARATOR <: SEPARATOR","d":"scalqa"},
{"l":"api/scalqa.html","n":"Set","t":"type Set[A] = Set[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Set","t":"val Set: Set","d":"scalqa"},
{"l":"api/scalqa.html","n":"Stream","t":"type Stream[+A] = Stream[A]","d":"scalqa"},
{"l":"api/scalqa.html","n":"Stream","t":"val Stream: Stream","d":"scalqa"},
{"l":"api/scalqa.html","n":"Time","t":"type Time >: Time <: Time","d":"scalqa"},
{"l":"api/scalqa.html","n":"TOP","t":"type TOP >: TOP <: TOP","d":"scalqa"},
{"l":"api/scalqa.html","n":"TwoWayFunction","t":"type TwoWayFunction >: ([A, B] =>> TwoWayFunction[A, B]) <: ([A, B] =>> TwoWayFunction[A, B])","d":"scalqa"},
{"l":"api/scalqa.html","n":"UP","t":"type UP >: UP <: UP","d":"scalqa"},
{"l":"api/scalqa.html","n":"VERTICAL","t":"type VERTICAL >: VERTICAL <: VERTICAL","d":"scalqa"},
{"l":"api/scalqa.html","n":"Void","t":"type Void >: Void <: Void","d":"scalqa"},
{"l":"api/scalqa.html","n":"VOID","t":"type VOID >: VOID <: VOID","d":"scalqa"},
{"l":"api/scalqa.html","n":"Week","t":"type Week >: Week <: Week","d":"scalqa"},
{"l":"api/scalqa.html","n":"Year","t":"type Year >: Year <: Year","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_ByteNumeric","t":"given z_ByteNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_ByteSum","t":"given z_ByteSum","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_CharOrdering","t":"given z_CharOrdering","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_DoubleAverage","t":"given z_DoubleAverage","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_DoubleNumeric","t":"given z_DoubleNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_DoubleSum","t":"given z_DoubleSum","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_FloatAverage","t":"given z_FloatAverage","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_FloatNumeric","t":"given z_FloatNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_FloatSum","t":"given z_FloatSum","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_GlobalExtensionLibrary","t":"given z_GlobalExtensionLibrary: GlobalExtensionLibrary","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_IntNumeric","t":"given z_IntNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_IntSum","t":"given z_IntSum","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_LongNumeric","t":"given z_LongNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_LongSum","t":"given z_LongSum","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_ShortNumeric","t":"given z_ShortNumeric","d":"scalqa"},
{"l":"api/scalqa.html","n":"z_ShortSum","t":"given z_ShortSum","d":"scalqa"},
{"l":"api/scalqa/Fx$.html","n":"Fx","t":"object Fx","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Control","t":"def Control: Control","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Control","t":"type Control = Control","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Button","t":"def Button: Button","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Button","t":"type Button = Button","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Cell","t":"def Cell: Cell","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Cell","t":"type Cell = Cell","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"CheckBox","t":"def CheckBox: CheckBox","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"CheckBox","t":"type CheckBox = CheckBox","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"ComboBox","t":"def ComboBox: ComboBox","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"ComboBox","t":"type ComboBox[A] = ComboBox[A]","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Label","t":"def Label: Label","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Label","t":"type Label = Label","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"List","t":"def List: List","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"List","t":"type List[A] = List[A]","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Menu","t":"def Menu: Menu","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Menu","t":"type Menu = Menu","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Popup","t":"def Popup: Popup","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Popup","t":"type Popup = Popup","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Table","t":"def Table: Table","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Table","t":"type Table[A] = Table[A]","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Text","t":"def Text: Text","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Text","t":"type Text = Text","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Tooltip","t":"def Tooltip: Tooltip","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Tooltip","t":"type Tooltip = Tooltip","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Toggle","t":"def Toggle: Toggle","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Toggle","t":"type Toggle = Toggle","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Scene","t":"def Scene: Scene","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Scene","t":"type Scene = Scene","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Application","t":"def Application: Application","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Application","t":"type Application = Application","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Chart","t":"def Chart: Chart","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Chart","t":"type Chart = Chart","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Image","t":"def Image: Image","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Image","t":"type Image = DEF","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Paint","t":"def Paint: Paint","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Paint","t":"type Paint = DEF","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Pane","t":"def Pane: Pane","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Pane","t":"type Pane = Pane","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Shape","t":"def Shape: Shape","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Shape","t":"type Shape = Shape","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Stage","t":"def Stage: Stage","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Stage","t":"type Stage = Stage","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Window","t":"def Window: Window","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Window","t":"type Window = Window","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Base","t":"def Base: Base","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Abstract","t":"def Abstract: Abstract","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Action","t":"def Action: Action","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Action","t":"type Action = Action","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Orientation","t":"def Orientation: Orientation","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Orientation","t":"type Orientation = Orientation","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Insets","t":"def Insets: Insets","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Insets","t":"type Insets = DEF","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Side","t":"def Side: Side","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Side","t":"type Side = Side","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Pos","t":"def Pos: Pos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Pos","t":"type Pos = Pos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"VPos","t":"def VPos: VPos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"VPos","t":"type VPos = VPos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"HPos","t":"def HPos: HPos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"HPos","t":"type HPos = HPos","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Style","t":"def Style: Style","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Style","t":"type Style = DEF","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"JavaFx","t":"def JavaFx: JavaFx","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Selection","t":"def Selection: Selection","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Selection","t":"type Selection[A] = Selection[A]","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Event","t":"def Event: Event","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Event","t":"type Event = Event","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Node","t":"def Node: Node","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Node","t":"type Node = Node","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Color","t":"def Color: Color","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Color","t":"type Color = Color","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Font","t":"def Font: Font","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Font","t":"type Font = Font","d":"scalqa/Fx$"},
{"l":"api/scalqa/Fx$.html","n":"Thread","t":"def Thread: Thread","d":"scalqa/Fx$"},
{"l":"api/scalqa/Gen$.html","n":"Gen","t":"object Gen","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Able","t":"def Able: Able","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Calendar","t":"def Calendar: Calendar","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Day","t":"def Day: Day","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Day","t":"type Day = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Week","t":"def Week: Week","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Week","t":"type Week = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Month","t":"def Month: Month","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Month","t":"type Month = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Year","t":"def Year: Year","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Year","t":"type Year = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Doc","t":"def Doc: Doc","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Doc","t":"type Doc = Doc","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Event","t":"def Event: Event","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Observable","t":"def Observable: Observable","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Observable","t":"type Observable = Observable","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Math","t":"def Math: Math","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Ordering","t":"def Ordering: Ordering","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Ordering","t":"type Ordering[A] = Ordering[A]","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Rounding","t":"def Rounding: Rounding","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Rounding","t":"type Rounding = Rounding","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"BigDecimal","t":"def BigDecimal: BigDecimal","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"BigDecimal","t":"type BigDecimal = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"BigInteger","t":"def BigInteger: BigInteger","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"BigInteger","t":"type BigInteger = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Request","t":"def Request: Request","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Request","t":"type Request = Request","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Time","t":"def Time: Time","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Time","t":"type Time = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"DayTime","t":"def DayTime: DayTime","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"DayTime","t":"type DayTime = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Period","t":"def Period: Period","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Period","t":"type Period = Period","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Util","t":"def Util: Util","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"ByteCount","t":"def ByteCount: ByteCount","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"ByteCount","t":"type ByteCount = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Percent","t":"type Percent = DEF","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"TwoWayFunction","t":"def TwoWayFunction: TwoWayFunction","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"TwoWayFunction","t":"type TwoWayFunction[A, B] = TwoWayFunction[A, B]","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"EnumCompanion","t":"type EnumCompanion[A <: Enum] = EnumCompanion[A]","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Void","t":"def Void: Void","d":"scalqa/Gen$"},
{"l":"api/scalqa/Gen$.html","n":"Void","t":"type Void = Void","d":"scalqa/Gen$"},
{"l":"api/scalqa/J$.html","n":"J","t":"object J","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"scheduleEvery","t":"def scheduleEvery[U](period: Length, f: => U): Control","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"scheduleEveryIn","t":"def scheduleEveryIn[U](period: Length, initDelay: Length, f: => U): Control","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"scheduleIn","t":"def scheduleIn[U](delay: Length, job: => U): Control","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"schedule","t":"def schedule[U](f: => U): Unit","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"sleep","t":"def sleep(tl: Length): Unit","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"initSize","t":"def initSize: Int","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"toDo","t":"def toDo(inline message: String): Nothing","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"unsupportedOperation","t":"def unsupportedOperation(inline message: String): Nothing","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"illegalState","t":"def illegalState(inline message: String): Nothing","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"illegalArgument","t":"def illegalArgument(inline message: String): Nothing","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"printStack","t":"def printStack(sizeLimit: Opt, label: DEF[String]): Unit","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"File","t":"def File: File","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"File","t":"type File = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Path","t":"def Path: Path","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Path","t":"type Path = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Url","t":"def Url: Url","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Url","t":"type Url = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Printer","t":"type Printer = PrintStream","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Io","t":"def Io: Io","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Input","t":"def Input: Input","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Input","t":"type Input = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Output","t":"def Output: Output","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Output","t":"type Output = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Json","t":"def Json: Json","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Object","t":"def Object: Object","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Object","t":"type Object = Object","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Array","t":"def Array: Array","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Array","t":"type Array = Array","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Zip","t":"def Zip: Zip","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Util","t":"def Util: Util","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Benchmark","t":"def Benchmark: Benchmark","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Random","t":"def Random: Random","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Test","t":"type Test = Test","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Concurrent","t":"def Concurrent: Concurrent","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"WeakRef","t":"def WeakRef: WeakRef","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"WeakRef","t":"type WeakRef[A] = DEF[A]","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Vm","t":"def Vm: Vm","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Priority","t":"def Priority: Priority","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Priority","t":"type Priority = DEF","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Setup","t":"def Setup: Setup","d":"scalqa/J$"},
{"l":"api/scalqa/J$.html","n":"Memory","t":"def Memory: Memory","d":"scalqa/J$"},
{"l":"api/scalqa/Lang$.html","n":"Lang","t":"object Lang","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Any","t":"def Any: Any","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"AnyRef","t":"def AnyRef: AnyRef","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Array","t":"def Array: Array","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Boolean","t":"def Boolean: Boolean","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Byte","t":"def Byte: Byte","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Char","t":"def Char: Char","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Short","t":"def Short: Short","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Int","t":"def Int: Int","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Long","t":"def Long: Long","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Float","t":"def Float: Float","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"Double","t":"def Double: Double","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"String","t":"def String: String","d":"scalqa/Lang$"},
{"l":"api/scalqa/Lang$.html","n":"More","t":"def More: More","d":"scalqa/Lang$"},
{"l":"api/scalqa/Val$.html","n":"Val","t":"object Val","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Stream","t":"type Stream[+A] = Stream[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Range","t":"type Range[A] = Range[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Range","t":"def Range: Range","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Pack","t":"type Pack[A] = Pack[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Buffer","t":"type Buffer[A] = Buffer[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Collection","t":"type Collection[+A] = Collection[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Idx","t":"type Idx[+A] = Idx[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Lookup","t":"type Lookup[A, +B] = Lookup[A, B]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Opt","t":"type Opt[+A] = DEF[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Pro","t":"type Pro[+A] = Pro[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Promise","t":"type Promise[+A] = Promise[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Promise","t":"def Promise: Promise","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Result","t":"type Result[+A] = DEF[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Result","t":"def Result: Result","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Set","t":"type Set[A] = Set[A]","d":"scalqa/Val$"},
{"l":"api/scalqa/Val$.html","n":"Set","t":"def Set: Set","d":"scalqa/Val$"},
{"l":"api/scalqa/fx.html","n":"scalqa.fx","t":"package scalqa.fx","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Action","t":"type Action >: Action <: Action","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Application","t":"type Application >: Application <: Application","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Button","t":"type Button >: Button <: Button","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Cell","t":"type Cell >: Cell <: Cell","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Chart","t":"type Chart >: Chart <: Chart","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"CheckBox","t":"type CheckBox >: CheckBox <: CheckBox","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"ComboBox","t":"type ComboBox >: ([A] =>> ComboBox[A]) <: ([A] =>> ComboBox[A])","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Event","t":"type Event >: Event <: Event","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"HPos","t":"type HPos >: HPos <: HPos","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Image","t":"type Image >: Image <: Image","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"implicitStringToLabel","t":"def implicitStringToLabel(v: String): Label","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Insets","t":"type Insets >: Insets <: Insets","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Label","t":"type Label >: Label <: Label","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"List","t":"type List >: ([A] =>> List[A]) <: ([A] =>> List[A])","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Menu","t":"type Menu >: Menu <: Menu","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Orientation","t":"type Orientation >: Orientation <: Orientation","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Paint","t":"type Paint >: Paint <: Paint","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Pane","t":"type Pane >: Pane <: Pane","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Popup","t":"type Popup >: Popup <: Popup","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Pos","t":"type Pos >: Pos <: Pos","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Selection","t":"type Selection >: ([A] =>> Selection[A]) <: ([A] =>> Selection[A])","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Shape","t":"type Shape >: Shape <: Shape","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Side","t":"type Side >: Side <: Side","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Stage","t":"type Stage >: Stage <: Stage","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Style","t":"type Style >: Style <: Style","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Table","t":"type Table >: ([A] =>> Table[A]) <: ([A] =>> Table[A])","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Text","t":"type Text >: Text <: Text","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Toggle","t":"type Toggle >: Toggle <: Toggle","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Tooltip","t":"type Tooltip >: Tooltip <: Tooltip","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"VPos","t":"type VPos >: VPos <: VPos","d":"scalqa/fx"},
{"l":"api/scalqa/fx.html","n":"Window","t":"type Window >: Window <: Window","d":"scalqa/fx"},
{"l":"api/scalqa/fx/Base$.html","n":"Base","t":"object Base","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"JavaFx","t":"def JavaFx: JavaFx","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Abstract","t":"def Abstract: Abstract","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Action","t":"def Action: Action","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Action","t":"type Action = Action","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"HPos","t":"def HPos: HPos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"HPos","t":"type HPos = HPos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Insets","t":"def Insets: Insets","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Insets","t":"type Insets = DEF","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Orientation","t":"def Orientation: Orientation","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Orientation","t":"type Orientation = Orientation","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Pos","t":"def Pos: Pos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Pos","t":"type Pos = Pos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Side","t":"def Side: Side","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Side","t":"type Side = Side","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"VPos","t":"def VPos: VPos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"VPos","t":"type VPos = VPos","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Style","t":"def Style: Style","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Style","t":"type Style = DEF","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Selection","t":"def Selection: Selection","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Selection","t":"type Selection[A] = Selection[A]","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Event","t":"def Event: Event","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Base$.html","n":"Event","t":"type Event = Event","d":"scalqa/fx/Base$"},
{"l":"api/scalqa/fx/Control.html","n":"Control","t":"trait Control extends Region","d":"scalqa/fx/Control"},
{"l":"api/scalqa/fx/Control.html","n":"tooltipPro","t":"def tooltipPro: ObservableMutable[Tooltip]","d":"scalqa/fx/Control"},
{"l":"api/scalqa/fx/Control.html","n":"tooltip","t":"def tooltip: Tooltip","d":"scalqa/fx/Control"},
{"l":"api/scalqa/fx/Control.html","n":"tooltip_=","t":"def tooltip_=(t: Tooltip): Unit","d":"scalqa/fx/Control"},
{"l":"api/scalqa/fx/Control.html","n":"tooltip_=","t":"def tooltip_=(s: String): Unit","d":"scalqa/fx/Control"},
{"l":"api/scalqa/fx/Control$.html","n":"Control","t":"object Control","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Button","t":"def Button: Button","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Button","t":"type Button = Button","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Cell","t":"def Cell: Cell","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Cell","t":"type Cell = Cell","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"CheckBox","t":"def CheckBox: CheckBox","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"CheckBox","t":"type CheckBox = CheckBox","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"ComboBox","t":"def ComboBox: ComboBox","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"ComboBox","t":"type ComboBox[A] = ComboBox[A]","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Label","t":"def Label: Label","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Label","t":"type Label = Label","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"List","t":"def List: List","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"List","t":"type List[A] = List[A]","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Menu","t":"def Menu: Menu","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Menu","t":"type Menu = Menu","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Popup","t":"def Popup: Popup","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Popup","t":"type Popup = Popup","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Table","t":"def Table: Table","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Table","t":"type Table[A] = Table[A]","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Text","t":"def Text: Text","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Text","t":"type Text = Text","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Tooltip","t":"def Tooltip: Tooltip","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Tooltip","t":"type Tooltip = Tooltip","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Toggle","t":"def Toggle: Toggle","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Control$.html","n":"Toggle","t":"type Toggle = Toggle","d":"scalqa/fx/Control$"},
{"l":"api/scalqa/fx/Scene.html","n":"Scene","t":"class Scene(width: Opt, height: Opt, e: DEF[Like]) extends Gui","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"window","t":"def window: Window","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"root","t":"def root: Parent","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"root_=","t":"def root_=(p: Parent): Unit","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"onKeyPressed","t":"def onKeyPressed[U](l: Key => U): Unit","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"onKeyReleased","t":"def onKeyReleased[U](l: Key => U): Unit","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"onKeyTyped","t":"def onKeyTyped[U](l: Key => U): Unit","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene.html","n":"styleSheets","t":"val styleSheets: ObservableMutable[Url]","d":"scalqa/fx/Scene"},
{"l":"api/scalqa/fx/Scene$.html","n":"Scene","t":"object Scene extends Setup[Scene]","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"apply","t":"def apply(r: Scene): Scene","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"apply","t":"def apply(width: Opt, height: Opt, e: DEF[Like]): Scene","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"apply","t":"def apply(e: DEF[Like]): Scene","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Application","t":"def Application: Application","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Application","t":"type Application = Application","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Chart","t":"def Chart: Chart","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Chart","t":"type Chart = Chart","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Image","t":"def Image: Image","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Image","t":"type Image = DEF","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Paint","t":"def Paint: Paint","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Paint","t":"type Paint = DEF","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Pane","t":"def Pane: Pane","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Pane","t":"type Pane = Pane","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Shape","t":"def Shape: Shape","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Shape","t":"type Shape = Shape","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Stage","t":"def Stage: Stage","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Stage","t":"type Stage = Stage","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Window","t":"def Window: Window","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/Scene$.html","n":"Window","t":"type Window = Window","d":"scalqa/fx/Scene$"},
{"l":"api/scalqa/fx/base.html","n":"scalqa.fx.base","t":"package scalqa.fx.base","d":"scalqa/fx/base"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Abstract","t":"object Abstract","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Delegate","t":"type Delegate = Delegate","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Delegate","t":"def Delegate: Delegate","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Group","t":"type Group = Group","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Group","t":"def Group: Group","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Module","t":"type Module = Module","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Module","t":"def Module: Module","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Node","t":"type Node = Node","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Node","t":"def Node: Node","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Parent","t":"type Parent = Parent","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Region","t":"type Region = Region","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Abstract$.html","n":"Region","t":"def Region: Region","d":"scalqa/fx/base/Abstract$"},
{"l":"api/scalqa/fx/base/Action.html","n":"Action","t":"class Action(label: String) extends Gui","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"onAction","t":"def onAction[U](l: Event => U): Control","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"onActionRun","t":"def onActionRun[U](run: => U): Control","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"toMenuItem","t":"def toMenuItem: Item","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"visible","t":"def visible: Boolean","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"visible_=","t":"def visible_=(b: Boolean): Unit","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"visiblePro","t":"def visiblePro: OM","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"text","t":"def text: String","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"textPro","t":"def textPro: ObservableMutable[String]","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"enable","t":"def enable: Boolean","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"enable_=","t":"def enable_=(b: Boolean): Unit","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"enablePro","t":"def enablePro: ObservableMutable[Boolean]","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/base/Action"},
{"l":"api/scalqa/fx/base/Action$.html","n":"Action","t":"object Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(mi: MenuItem): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(n: Node): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(s: SEPARATOR): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(n: Like): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(n1: Like, n2: Like): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply[U](label: String, enabled: Boolean, l: () => U): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply[U](label: String, l: () => U): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"apply","t":"def apply(label: String): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"implicitFrom","t":"def implicitFrom(v: Node): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"implicitFrom","t":"def implicitFrom(v: SEPARATOR): Action","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"Event","t":"type Event = Event","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"Event","t":"def Event: Event","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Action$.html","n":"Provider","t":"type Provider = Provider","d":"scalqa/fx/base/Action$"},
{"l":"api/scalqa/fx/base/Event.html","n":"Event","t":"class Event(fxEvent: Event)","d":"scalqa/fx/base/Event"},
{"l":"api/scalqa/fx/base/Event.html","n":"real","t":"def real: REAL","d":"scalqa/fx/base/Event"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Event","t":"object Event","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Mouse","t":"type Mouse = Mouse","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Mouse","t":"def Mouse: Mouse","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"ContextMenu","t":"type ContextMenu = ContextMenu","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"ContextMenu","t":"def ContextMenu: ContextMenu","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Key","t":"type Key = Key","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Key","t":"def Key: Key","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Drag","t":"type Drag = Drag","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Gesture","t":"type Gesture = Gesture","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Input","t":"type Input = Input","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"MouseDrag","t":"type MouseDrag = MouseDrag","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Rotate","t":"type Rotate = Rotate","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Scroll","t":"type Scroll = Scroll","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Swipe","t":"type Swipe = Swipe","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Touch","t":"type Touch = Touch","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/Event$.html","n":"Zoom","t":"type Zoom = Zoom","d":"scalqa/fx/base/Event$"},
{"l":"api/scalqa/fx/base/HPos.html","n":"HPos","t":"enum HPos(val real: HPos) extends Enum[HPos]","d":"scalqa/fx/base/HPos"},
{"l":"api/scalqa/fx/base/HPos.html","n":"Left","t":"case Left extends HPos","d":"scalqa/fx/base/HPos"},
{"l":"api/scalqa/fx/base/HPos.html","n":"Center","t":"case Center extends HPos","d":"scalqa/fx/base/HPos"},
{"l":"api/scalqa/fx/base/HPos.html","n":"Right","t":"case Right extends HPos","d":"scalqa/fx/base/HPos"},
{"l":"api/scalqa/fx/base/HPos$.html","n":"HPos","t":"object HPos extends Companion[HPos, HPos]","d":"scalqa/fx/base/HPos$"},
{"l":"api/scalqa/fx/base/HPos$.html","n":"implicitFrom","t":"def implicitFrom(v: CENTER): HPos","d":"scalqa/fx/base/HPos$"},
{"l":"api/scalqa/fx/base/HPos$.html","n":"implicitFrom","t":"def implicitFrom(v: LEFT): HPos","d":"scalqa/fx/base/HPos$"},
{"l":"api/scalqa/fx/base/HPos$.html","n":"implicitFrom","t":"def implicitFrom(v: RIGHT): HPos","d":"scalqa/fx/base/HPos$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"Insets","t":"object Insets extends Opaque[Insets, Insets]","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"apply","t":"def apply(inline top: Double, inline right: Double, inline bottom: Double, inline left: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"apply","t":"def apply(all: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"top","t":"def top: Double","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"bottom","t":"def bottom: Double","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"right","t":"def right: Double","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"left","t":"def left: Double","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"newTop","t":"def newTop(v: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"newBottom","t":"def newBottom(v: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"newRight","t":"def newRight(v: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets$.html","n":"newLeft","t":"def newLeft(v: Double): Insets","d":"scalqa/fx/base/Insets$"},
{"l":"api/scalqa/fx/base/Insets.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/Insets$$TYPE$"},
{"l":"api/scalqa/fx/base/Insets.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/Insets$$TYPE$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"JavaFx","t":"object JavaFx","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"list","t":"def list[A](v: Observable[A]): ObservableList[A]","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"list","t":"def list[A](v: ObservableMutable[A]): ObservableList[A]","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"observableValue","t":"def observableValue[A](p: Observable[A]): ObservableValue[A]","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"booleanPropertry","t":"def booleanPropertry(p: OM): BooleanProperty","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"stringConverter","t":"def stringConverter[A](bm: TwoWayFunction[A, String]): StringConverter[A]","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"To","t":"def To: To","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"Enum","t":"def Enum: Enum","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/JavaFx$.html","n":"Enum","t":"type Enum[A <: Enum[A]] = Enum[A]","d":"scalqa/fx/base/JavaFx$"},
{"l":"api/scalqa/fx/base/Orientation.html","n":"Orientation","t":"enum Orientation(val real: Orientation) extends Enum[Orientation]","d":"scalqa/fx/base/Orientation"},
{"l":"api/scalqa/fx/base/Orientation.html","n":"Horizontal","t":"case Horizontal extends Orientation","d":"scalqa/fx/base/Orientation"},
{"l":"api/scalqa/fx/base/Orientation.html","n":"Vertical","t":"case Vertical extends Orientation","d":"scalqa/fx/base/Orientation"},
{"l":"api/scalqa/fx/base/Orientation$.html","n":"Orientation","t":"object Orientation extends Companion[Orientation, Orientation]","d":"scalqa/fx/base/Orientation$"},
{"l":"api/scalqa/fx/base/Orientation$.html","n":"implicitFrom","t":"def implicitFrom(v: HORIZONTAL): Orientation","d":"scalqa/fx/base/Orientation$"},
{"l":"api/scalqa/fx/base/Orientation$.html","n":"implicitFrom","t":"def implicitFrom(v: VERTICAL): Orientation","d":"scalqa/fx/base/Orientation$"},
{"l":"api/scalqa/fx/base/Pos.html","n":"Pos","t":"enum Pos(val real: Pos) extends Enum[Pos]","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"Void","t":"case Void extends Pos with Void","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"TopLeft","t":"case TopLeft extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"TopCenter","t":"case TopCenter extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"TopRight","t":"case TopRight extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"CenterLeft","t":"case CenterLeft extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"Center","t":"case Center extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"CenterRight","t":"case CenterRight extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BottomLeft","t":"case BottomLeft extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BottomCenter","t":"case BottomCenter extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BottomRight","t":"case BottomRight extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BaselineLeft","t":"case BaselineLeft extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BaselineCenter","t":"case BaselineCenter extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos.html","n":"BaselineRight","t":"case BaselineRight extends Pos","d":"scalqa/fx/base/Pos"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"Pos","t":"object Pos extends Companion[Pos, Pos]","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: VOID): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: CENTER): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: TOP): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: BOTTOM): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: LEFT): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: RIGHT): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: HPos): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Pos$.html","n":"implicitFrom","t":"def implicitFrom(v: VPos): Pos","d":"scalqa/fx/base/Pos$"},
{"l":"api/scalqa/fx/base/Selection.html","n":"Selection","t":"class Selection[A](val target: Idx[A], val real: SelectionModel[_]) extends Observable[A]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"target","t":"val target: Idx[A]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"real","t":"val real: SelectionModel[_]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"THIS_TYPE","t":"type THIS_TYPE = Selection[A]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"indexes","t":"val indexes: Idx[Int]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"mode","t":"def mode: Mode","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"mode_=","t":"def mode_=(v: Mode): Unit","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"onChange","t":"def onChange[U](f: THIS_TYPE => U): Control","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"clear","t":"def clear: Unit","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"selectAt","t":"def selectAt(i: Int): Unit","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"select","t":"def select(a: A): Unit","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection.html","n":"mapView","t":"def mapView[B](f: A => B): Selection[B]","d":"scalqa/fx/base/Selection"},
{"l":"api/scalqa/fx/base/Selection$.html","n":"Selection","t":"object Selection","d":"scalqa/fx/base/Selection$"},
{"l":"api/scalqa/fx/base/Selection$.html","n":"apply","t":"def apply[A](x: Idx[A], m: SelectionModel[_]): Selection[A]","d":"scalqa/fx/base/Selection$"},
{"l":"api/scalqa/fx/base/Selection$.html","n":"Mode","t":"type Mode = Mode","d":"scalqa/fx/base/Selection$"},
{"l":"api/scalqa/fx/base/Selection$.html","n":"Mode","t":"def Mode: Mode","d":"scalqa/fx/base/Selection$"},
{"l":"api/scalqa/fx/base/Side.html","n":"Side","t":"enum Side(val real: Side) extends Enum[Side]","d":"scalqa/fx/base/Side"},
{"l":"api/scalqa/fx/base/Side.html","n":"Bottom","t":"case Bottom extends Side","d":"scalqa/fx/base/Side"},
{"l":"api/scalqa/fx/base/Side.html","n":"Left","t":"case Left extends Side","d":"scalqa/fx/base/Side"},
{"l":"api/scalqa/fx/base/Side.html","n":"Right","t":"case Right extends Side","d":"scalqa/fx/base/Side"},
{"l":"api/scalqa/fx/base/Side.html","n":"Top","t":"case Top extends Side","d":"scalqa/fx/base/Side"},
{"l":"api/scalqa/fx/base/Side$.html","n":"Side","t":"object Side extends Companion[Side, Side]","d":"scalqa/fx/base/Side$"},
{"l":"api/scalqa/fx/base/Side$.html","n":"implicitFrom","t":"def implicitFrom(v: LEFT): Side","d":"scalqa/fx/base/Side$"},
{"l":"api/scalqa/fx/base/Side$.html","n":"implicitFrom","t":"def implicitFrom(v: RIGHT): Side","d":"scalqa/fx/base/Side$"},
{"l":"api/scalqa/fx/base/Side$.html","n":"implicitFrom","t":"def implicitFrom(v: TOP): Side","d":"scalqa/fx/base/Side$"},
{"l":"api/scalqa/fx/base/Side$.html","n":"implicitFrom","t":"def implicitFrom(v: BOTTOM): Side","d":"scalqa/fx/base/Side$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"Style","t":"object Style extends Data[Style]","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"apply","t":"def apply(inline v: String): Style","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"implicitFrom","t":"def implicitFrom(inline v: String): Style","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[String, Style]","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"+","t":"def +(v: Style | String): Style","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"Class","t":"def Class: Class","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"Class","t":"type Class = DEF","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"PseudoClass","t":"def PseudoClass: PseudoClass","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"PseudoClass","t":"type PseudoClass = DEF","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"PseudoGroup","t":"def PseudoGroup: PseudoGroup","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style$.html","n":"PseudoGroup","t":"type PseudoGroup = PseudoGroup","d":"scalqa/fx/base/Style$"},
{"l":"api/scalqa/fx/base/Style.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/Style$$TYPE$"},
{"l":"api/scalqa/fx/base/Style.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/Style$$TYPE$"},
{"l":"api/scalqa/fx/base/VPos.html","n":"VPos","t":"enum VPos(val real: VPos) extends Enum[VPos]","d":"scalqa/fx/base/VPos"},
{"l":"api/scalqa/fx/base/VPos.html","n":"Top","t":"case Top extends VPos","d":"scalqa/fx/base/VPos"},
{"l":"api/scalqa/fx/base/VPos.html","n":"Center","t":"case Center extends VPos","d":"scalqa/fx/base/VPos"},
{"l":"api/scalqa/fx/base/VPos.html","n":"Baseline","t":"case Baseline extends VPos","d":"scalqa/fx/base/VPos"},
{"l":"api/scalqa/fx/base/VPos.html","n":"Bottom","t":"case Bottom extends VPos","d":"scalqa/fx/base/VPos"},
{"l":"api/scalqa/fx/base/VPos$.html","n":"VPos","t":"object VPos extends Companion[VPos, VPos]","d":"scalqa/fx/base/VPos$"},
{"l":"api/scalqa/fx/base/VPos$.html","n":"implicitFrom","t":"def implicitFrom(v: CENTER): VPos","d":"scalqa/fx/base/VPos$"},
{"l":"api/scalqa/fx/base/VPos$.html","n":"implicitFrom","t":"def implicitFrom(v: TOP): VPos","d":"scalqa/fx/base/VPos$"},
{"l":"api/scalqa/fx/base/VPos$.html","n":"implicitFrom","t":"def implicitFrom(v: BOTTOM): VPos","d":"scalqa/fx/base/VPos$"},
{"l":"api/scalqa/fx/base/abstract.html","n":"scalqa.fx.base.abstract","t":"package scalqa.fx.base.abstract","d":"scalqa/fx/base/abstract"},
{"l":"api/scalqa/fx/base/abstract/Delegate.html","n":"Delegate","t":"trait Delegate","d":"scalqa/fx/base/abstract/Delegate"},
{"l":"api/scalqa/fx/base/abstract/Delegate.html","n":"real","t":"def real: REAL","d":"scalqa/fx/base/abstract/Delegate"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Delegate","t":"object Delegate","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Opaque","t":"type Opaque[A <: Opaque, B <: AnyRef] = Opaque[A, B]","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Gui","t":"type Gui = Gui","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Gui","t":"def Gui: Gui","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Value","t":"type Value[A <: Value[A, B], B] = Value[A, B]","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Delegate$.html","n":"Value","t":"def Value: Value","d":"scalqa/fx/base/abstract/Delegate$"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"Group","t":"class Group extends Parent","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"children","t":"val children: Mutable[Like]","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"+=","t":"def +=(e: Like): Group","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"autoSizeChildrenPro","t":"def autoSizeChildrenPro: OM","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"autoSizeChildren","t":"def autoSizeChildren: Boolean","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group.html","n":"autoSizeChildren_=","t":"def autoSizeChildren_=(v: Boolean): Unit","d":"scalqa/fx/base/abstract/Group"},
{"l":"api/scalqa/fx/base/abstract/Group$.html","n":"Group","t":"object Group","d":"scalqa/fx/base/abstract/Group$"},
{"l":"api/scalqa/fx/base/abstract/Group$.html","n":"apply","t":"def apply(): Group","d":"scalqa/fx/base/abstract/Group$"},
{"l":"api/scalqa/fx/base/abstract/Module.html","n":"Module","t":"class Module extends Like","d":"scalqa/fx/base/abstract/Module"},
{"l":"api/scalqa/fx/base/abstract/Module$.html","n":"Module","t":"object Module","d":"scalqa/fx/base/abstract/Module$"},
{"l":"api/scalqa/fx/base/abstract/Module$.html","n":"apply","t":"def apply[T <: Module](r: Node): T","d":"scalqa/fx/base/abstract/Module$"},
{"l":"api/scalqa/fx/base/abstract/Module$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[Node, Module]","d":"scalqa/fx/base/abstract/Module$"},
{"l":"api/scalqa/fx/base/abstract/Node.html","n":"Node","t":"trait Node extends Like with _properties with _Events with _methods","d":"scalqa/fx/base/abstract/Node"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"Node","t":"object Node","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"apply","t":"def apply(v: Node): Node","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[Node, Node]","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"Like","t":"type Like = Like","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"Like","t":"def Like: Like","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"_events","t":"type _events = _Events","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Node$.html","n":"_properties","t":"type _properties = _properties","d":"scalqa/fx/base/abstract/Node$"},
{"l":"api/scalqa/fx/base/abstract/Parent.html","n":"Parent","t":"trait Parent extends Node","d":"scalqa/fx/base/abstract/Parent"},
{"l":"api/scalqa/fx/base/abstract/Parent.html","n":"REAL","t":"type REAL <: Parent","d":"scalqa/fx/base/abstract/Parent"},
{"l":"api/scalqa/fx/base/abstract/Parent.html","n":"needsLayoutPro","t":"def needsLayoutPro: O","d":"scalqa/fx/base/abstract/Parent"},
{"l":"api/scalqa/fx/base/abstract/Parent.html","n":"needsLayout","t":"def needsLayout: Boolean","d":"scalqa/fx/base/abstract/Parent"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"Region","t":"class Region extends Parent","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxWidthPro","t":"def maxWidthPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxWidth","t":"def maxWidth: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxWidth_=","t":"def maxWidth_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minWidthPro","t":"def minWidthPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minWidth","t":"def minWidth: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minWidth_=","t":"def minWidth_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefWidthPro","t":"def prefWidthPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefWidth","t":"def prefWidth: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefWidth_=","t":"def prefWidth_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minHeightPro","t":"def minHeightPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minHeight","t":"def minHeight: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"minHeight_=","t":"def minHeight_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxHeightPro","t":"def maxHeightPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxHeight","t":"def maxHeight: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"maxHeight_=","t":"def maxHeight_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefHeightPro","t":"def prefHeightPro: OM","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefHeight","t":"def prefHeight: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"prefHeight_=","t":"def prefHeight_=(b: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"widthPro","t":"def widthPro: O","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"width","t":"def width: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"width_=","t":"def width_=(v: Double): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"heightPro","t":"def heightPro: O","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"height","t":"def height: Double","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"paddingPro","t":"def paddingPro: ObservableMutable[Insets]","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"padding","t":"def padding: Insets","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"padding_=","t":"def padding_=(v: Insets): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"backgroundPro","t":"def backgroundPro: ObservableMutable[Background]","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"background","t":"def background: Background","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region.html","n":"background_=","t":"def background_=(b: Background): Unit","d":"scalqa/fx/base/abstract/Region"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"Region","t":"object Region","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"apply","t":"def apply(): Region","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"UseComputedSize","t":"def UseComputedSize: Double","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"UsePrefSize","t":"def UsePrefSize: Double","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"Background","t":"type Background = DEF","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/Region$.html","n":"Background","t":"def Background: Background","d":"scalqa/fx/base/abstract/Region$"},
{"l":"api/scalqa/fx/base/abstract/delegate.html","n":"scalqa.fx.base.abstract.delegate","t":"package scalqa.fx.base.abstract.delegate","d":"scalqa/fx/base/abstract/delegate"},
{"l":"api/scalqa/fx/base/abstract/delegate/Gui.html","n":"Gui","t":"trait Gui extends Provider","d":"scalqa/fx/base/abstract/delegate/Gui"},
{"l":"api/scalqa/fx/base/abstract/delegate/Gui.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/base/abstract/delegate/Gui"},
{"l":"api/scalqa/fx/base/abstract/delegate/Gui.html","n":"real","t":"def real: REAL","d":"scalqa/fx/base/abstract/delegate/Gui"},
{"l":"api/scalqa/fx/base/abstract/delegate/Gui$.html","n":"Gui","t":"object Gui","d":"scalqa/fx/base/abstract/delegate/Gui$"},
{"l":"api/scalqa/fx/base/abstract/delegate/Gui$.html","n":"apply","t":"def apply[A <: Gui](p: ObjectProperty[_ <: EventHandler[_]]): A","d":"scalqa/fx/base/abstract/delegate/Gui$"},
{"l":"api/scalqa/fx/base/abstract/delegate/Opaque.html","n":"Opaque","t":"class Opaque[TYPE <: Opaque, REAL <: AnyRef](name: String)(`evidence$1`: ClassTag[REAL]) extends Base[TYPE, REAL]","d":"scalqa/fx/base/abstract/delegate/Opaque"},
{"l":"api/scalqa/fx/base/abstract/delegate/Opaque.html","n":"apply","t":"def apply(v: REAL): TYPE","d":"scalqa/fx/base/abstract/delegate/Opaque"},
{"l":"api/scalqa/fx/base/abstract/delegate/Opaque.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[REAL, TYPE]","d":"scalqa/fx/base/abstract/delegate/Opaque"},
{"l":"api/scalqa/fx/base/abstract/delegate/Opaque.html","n":"implicitBaseToType","t":"def implicitBaseToType(v: REAL): TYPE","d":"scalqa/fx/base/abstract/delegate/Opaque"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value.html","n":"Value","t":"trait Value[TYPE <: Value[TYPE, BASE], BASE] extends Delegate","d":"scalqa/fx/base/abstract/delegate/Value"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value.html","n":"real","t":"def real: BASE","d":"scalqa/fx/base/abstract/delegate/Value"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value$.html","n":"Value","t":"object Value","d":"scalqa/fx/base/abstract/delegate/Value$"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value$$Setup.html","n":"Setup","t":"class Setup[TYPE <: Value[TYPE, BASE], BASE]()","d":"scalqa/fx/base/abstract/delegate/Value$$Setup"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value$$Setup.html","n":"apply","t":"def apply(v: BASE): TYPE","d":"scalqa/fx/base/abstract/delegate/Value$$Setup"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value$$Setup.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[BASE, TYPE]","d":"scalqa/fx/base/abstract/delegate/Value$$Setup"},
{"l":"api/scalqa/fx/base/abstract/delegate/Value$$Setup.html","n":"implicitFromBase","t":"def implicitFromBase(v: BASE): TYPE","d":"scalqa/fx/base/abstract/delegate/Value$$Setup"},
{"l":"api/scalqa/fx/base/abstract/node.html","n":"scalqa.fx.base.abstract.node","t":"package scalqa.fx.base.abstract.node","d":"scalqa/fx/base/abstract/node"},
{"l":"api/scalqa/fx/base/abstract/node/_Events.html","n":"_Events","t":"trait _Events extends Like with _onMouseAndDrag with _onKey with _onRotate with _onScroll with _onSwipe with _onTouch with _onZoom with _onContextMenu","d":"scalqa/fx/base/abstract/node/_Events"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"parentOpt","t":"def parentOpt: DEF[Parent]","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"scene","t":"def scene: Scene","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"styleClasses","t":"def styleClasses: Mutable[Class]","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"psedoClasses","t":"def psedoClasses: Mutable[PseudoClass]","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_methods.html","n":"resizeRelocate","t":"def resizeRelocate(x: Double, y: Double, width: Double, height: Double): Unit","d":"scalqa/fx/base/abstract/node/_methods"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"_properties","t":"trait _properties","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"cachePro","t":"def cachePro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"cache","t":"def cache: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"cache_=","t":"def cache_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"focusedPro","t":"def focusedPro: O","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"focused","t":"def focused: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"focusTraversablePro","t":"def focusTraversablePro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"focusTraversable","t":"def focusTraversable: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"focusTraversable_=","t":"def focusTraversable_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"hoverPro","t":"def hoverPro: O","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"hover","t":"def hover: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"disabledPro","t":"def disabledPro: O","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"disabled","t":"def disabled: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"disablePro","t":"def disablePro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"disable","t":"def disable: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"disable_=","t":"def disable_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"idPro","t":"def idPro: ObservableMutable[String]","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"id","t":"def id: String","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"id_=","t":"def id_=(b: String): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutXPro","t":"def layoutXPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutX","t":"def layoutX: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutX_=","t":"def layoutX_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutYPro","t":"def layoutYPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutY","t":"def layoutY: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"layoutY_=","t":"def layoutY_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"managedPro","t":"def managedPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"managed","t":"def managed: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"managed_=","t":"def managed_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"mouseTransparentPro","t":"def mouseTransparentPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"mouseTransparent","t":"def mouseTransparent: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"mouseTransparent_=","t":"def mouseTransparent_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"opacityPro","t":"def opacityPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"opacity","t":"def opacity: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"opacity_=","t":"def opacity_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"pressedPro","t":"def pressedPro: O","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"pressed","t":"def pressed: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"rotatePro","t":"def rotatePro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"rotate","t":"def rotate: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"rotate_=","t":"def rotate_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleXPro","t":"def scaleXPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleX","t":"def scaleX: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleX_=","t":"def scaleX_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleYPro","t":"def scaleYPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleY","t":"def scaleY: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleY_=","t":"def scaleY_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleZPro","t":"def scaleZPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleZ","t":"def scaleZ: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"scaleZ_=","t":"def scaleZ_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateXPro","t":"def translateXPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateX","t":"def translateX: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateX_=","t":"def translateX_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateYPro","t":"def translateYPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateY","t":"def translateY: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateY_=","t":"def translateY_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateZPro","t":"def translateZPro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateZ","t":"def translateZ: Double","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"translateZ_=","t":"def translateZ_=(b: Double): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"visiblePro","t":"def visiblePro: OM","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"visible","t":"def visible: Boolean","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"visible_=","t":"def visible_=(b: Boolean): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"stylePro","t":"def stylePro: ObservableMutable[Style]","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"style","t":"def style: Style","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/_properties.html","n":"style_=","t":"def style_=(s: Style): Unit","d":"scalqa/fx/base/abstract/node/_properties"},
{"l":"api/scalqa/fx/base/abstract/node/Like.html","n":"Like","t":"class Like extends Gui","d":"scalqa/fx/base/abstract/node/Like"},
{"l":"api/scalqa/fx/base/abstract/node/Like.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/base/abstract/node/Like"},
{"l":"api/scalqa/fx/base/abstract/node/Like$.html","n":"Like","t":"object Like","d":"scalqa/fx/base/abstract/node/Like$"},
{"l":"api/scalqa/fx/base/abstract/node/Like$.html","n":"apply","t":"def apply(real: Node): Like","d":"scalqa/fx/base/abstract/node/Like$"},
{"l":"api/scalqa/fx/base/abstract/node/Like$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[Node, Like]","d":"scalqa/fx/base/abstract/node/Like$"},
{"l":"api/scalqa/fx/base/abstract/node/Like$.html","n":"implicitToNode","t":"def implicitToNode(v: Like): Node","d":"scalqa/fx/base/abstract/node/Like$"},
{"l":"api/scalqa/fx/base/abstract/node/_events.html","n":"scalqa.fx.base.abstract.node._events","t":"package scalqa.fx.base.abstract.node._events","d":"scalqa/fx/base/abstract/node/_events"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onContextMenu.html","n":"_onContextMenu","t":"trait _onContextMenu","d":"scalqa/fx/base/abstract/node/_events/_onContextMenu"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onContextMenu.html","n":"useContextMenu","t":"def useContextMenu[U](l: ContextMenu => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onContextMenu"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onKey.html","n":"_onKey","t":"trait _onKey","d":"scalqa/fx/base/abstract/node/_events/_onKey"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onKey.html","n":"onKeyPressed","t":"def onKeyPressed[U](l: Key => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onKey"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onKey.html","n":"onKeyReleased","t":"def onKeyReleased[U](l: Key => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onKey"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onKey.html","n":"onKeyTyped","t":"def onKeyTyped[U](l: Key => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onKey"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"_onMouseAndDrag","t":"trait _onMouseAndDrag","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseClicked","t":"def onMouseClicked[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseLeftClicked","t":"def onMouseLeftClicked[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseRightClicked","t":"def onMouseRightClicked[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseEntered","t":"def onMouseEntered[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseExited","t":"def onMouseExited[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseMoved","t":"def onMouseMoved[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMousePressed","t":"def onMousePressed[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseReleased","t":"def onMouseReleased[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseDragged","t":"def onMouseDragged[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseDragEntered","t":"def onMouseDragEntered[U](l: MouseDrag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseDragExited","t":"def onMouseDragExited[U](l: MouseDrag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseDragOver","t":"def onMouseDragOver[U](l: MouseDrag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onMouseDragReleased","t":"def onMouseDragReleased[U](l: MouseDrag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragDetected","t":"def onDragDetected[U](l: Mouse => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragDone","t":"def onDragDone[U](l: Drag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragDropped","t":"def onDragDropped[U](l: Drag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragEntered","t":"def onDragEntered[U](l: Drag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragExited","t":"def onDragExited[U](l: Drag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onMouseAndDrag.html","n":"onDragOver","t":"def onDragOver[U](l: Drag => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onMouseAndDrag"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onRotate.html","n":"_onRotate","t":"trait _onRotate","d":"scalqa/fx/base/abstract/node/_events/_onRotate"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onRotate.html","n":"onRotate","t":"def onRotate[U](l: Rotate => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onRotate"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onRotate.html","n":"onRotationFinished","t":"def onRotationFinished[U](l: Rotate => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onRotate"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onRotate.html","n":"onRotationStarted","t":"def onRotationStarted[U](l: Rotate => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onRotate"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onScroll.html","n":"_onScroll","t":"trait _onScroll","d":"scalqa/fx/base/abstract/node/_events/_onScroll"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onScroll.html","n":"onScroll","t":"def onScroll[U](l: Scroll => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onScroll"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onScroll.html","n":"onScrollFinished","t":"def onScrollFinished[U](l: Scroll => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onScroll"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onScroll.html","n":"onScrollStarted","t":"def onScrollStarted[U](l: Scroll => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onScroll"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onSwipe.html","n":"_onSwipe","t":"trait _onSwipe","d":"scalqa/fx/base/abstract/node/_events/_onSwipe"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onSwipe.html","n":"onSwipeDown","t":"def onSwipeDown[U](l: Swipe => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onSwipe"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onSwipe.html","n":"onSwipeLeft","t":"def onSwipeLeft[U](l: Swipe => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onSwipe"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onSwipe.html","n":"onSwipeRight","t":"def onSwipeRight[U](l: Swipe => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onSwipe"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onSwipe.html","n":"onSwipeUp","t":"def onSwipeUp[U](l: Swipe => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onSwipe"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onTouch.html","n":"_onTouch","t":"trait _onTouch","d":"scalqa/fx/base/abstract/node/_events/_onTouch"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onTouch.html","n":"onTouchPressed","t":"def onTouchPressed[U](l: Touch => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onTouch"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onTouch.html","n":"onTouchReleased","t":"def onTouchReleased[U](l: Touch => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onTouch"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onTouch.html","n":"onTouchMoved","t":"def onTouchMoved[U](l: Touch => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onTouch"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onTouch.html","n":"onTouchStationary","t":"def onTouchStationary[U](l: Touch => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onTouch"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onZoom.html","n":"_onZoom","t":"trait _onZoom","d":"scalqa/fx/base/abstract/node/_events/_onZoom"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onZoom.html","n":"onZoom","t":"def onZoom[U](l: Zoom => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onZoom"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onZoom.html","n":"onZoomStarted","t":"def onZoomStarted[U](l: Zoom => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onZoom"},
{"l":"api/scalqa/fx/base/abstract/node/_events/_onZoom.html","n":"onZoomFinished","t":"def onZoomFinished[U](l: Zoom => U): Control","d":"scalqa/fx/base/abstract/node/_events/_onZoom"},
{"l":"api/scalqa/fx/base/abstract/region.html","n":"scalqa.fx.base.abstract.region","t":"package scalqa.fx.base.abstract.region","d":"scalqa/fx/base/abstract/region"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"Background","t":"object Background extends Opaque[Background, Background]","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"implicitFrom","t":"def implicitFrom(v: Background): Background","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"implicitTo","t":"def implicitTo(v: Background): Background","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"images","t":"def images: Idx[Image]","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"fills","t":"def fills: Idx[Fill]","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"Fill","t":"type Fill = DEF","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$.html","n":"Image","t":"type Image = DEF","d":"scalqa/fx/base/abstract/region/Background$"},
{"l":"api/scalqa/fx/base/abstract/region/Background.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/abstract/region/Background$$TYPE$"},
{"l":"api/scalqa/fx/base/abstract/region/Background.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/abstract/region/Background$$TYPE$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Fill$.html","n":"Fill","t":"object Fill extends Opaque[Fill, BackgroundFill]","d":"scalqa/fx/base/abstract/region/Background$$Fill$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Fill.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/abstract/region/Background$$Fill$$TYPE$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Fill.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/abstract/region/Background$$Fill$$TYPE$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Image$.html","n":"Image","t":"object Image extends Opaque[Image, BackgroundImage]","d":"scalqa/fx/base/abstract/region/Background$$Image$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Image.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/abstract/region/Background$$Image$$TYPE$"},
{"l":"api/scalqa/fx/base/abstract/region/Background$$Image.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/abstract/region/Background$$Image$$TYPE$"},
{"l":"api/scalqa/fx/base/action.html","n":"scalqa.fx.base.action","t":"package scalqa.fx.base.action","d":"scalqa/fx/base/action"},
{"l":"api/scalqa/fx/base/action/Event.html","n":"Event","t":"class Event extends Event","d":"scalqa/fx/base/action/Event"},
{"l":"api/scalqa/fx/base/action/Event$.html","n":"Event","t":"object Event","d":"scalqa/fx/base/action/Event$"},
{"l":"api/scalqa/fx/base/action/Event$.html","n":"apply","t":"def apply(e: ActionEvent): Event","d":"scalqa/fx/base/action/Event$"},
{"l":"api/scalqa/fx/base/action/Provider.html","n":"Provider","t":"trait Provider","d":"scalqa/fx/base/action/Provider"},
{"l":"api/scalqa/fx/base/action/Provider.html","n":"actionStream","t":"def actionStream: Stream[Action]","d":"scalqa/fx/base/action/Provider"},
{"l":"api/scalqa/fx/base/event.html","n":"scalqa.fx.base.event","t":"package scalqa.fx.base.event","d":"scalqa/fx/base/event"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"ContextMenu","t":"class ContextMenu(e: ContextMenuEvent, node: Node) extends Input","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"actions","t":"val actions: Mutable[Action]","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"x","t":"def x: Double","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"y","t":"def y: Double","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"screenX","t":"def screenX: Double","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"screenY","t":"def screenY: Double","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"showMenu","t":"def showMenu: Unit","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu.html","n":"onMenuClosedRun","t":"def onMenuClosedRun(l: => Unit): Unit","d":"scalqa/fx/base/event/ContextMenu"},
{"l":"api/scalqa/fx/base/event/ContextMenu$.html","n":"ContextMenu","t":"object ContextMenu","d":"scalqa/fx/base/event/ContextMenu$"},
{"l":"api/scalqa/fx/base/event/ContextMenu$.html","n":"show","t":"def show(e: ContextMenu): Unit","d":"scalqa/fx/base/event/ContextMenu$"},
{"l":"api/scalqa/fx/base/event/Drag.html","n":"Drag","t":"class Drag(real: DragEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Drag"},
{"l":"api/scalqa/fx/base/event/Gesture.html","n":"Gesture","t":"class Gesture(real: GestureEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Gesture"},
{"l":"api/scalqa/fx/base/event/Input.html","n":"Input","t":"class Input(real: InputEvent, val node: Gui) extends Event","d":"scalqa/fx/base/event/Input"},
{"l":"api/scalqa/fx/base/event/Input.html","n":"node","t":"val node: Gui","d":"scalqa/fx/base/event/Input"},
{"l":"api/scalqa/fx/base/event/Key.html","n":"Key","t":"class Key(e: KeyEvent, node: Gui) extends Input","d":"scalqa/fx/base/event/Key"},
{"l":"api/scalqa/fx/base/event/Key.html","n":"text","t":"def text: String","d":"scalqa/fx/base/event/Key"},
{"l":"api/scalqa/fx/base/event/Key.html","n":"isAltDown","t":"def isAltDown: Boolean","d":"scalqa/fx/base/event/Key"},
{"l":"api/scalqa/fx/base/event/Key.html","n":"isControlDown","t":"def isControlDown: Boolean","d":"scalqa/fx/base/event/Key"},
{"l":"api/scalqa/fx/base/event/Key.html","n":"isShiftDown","t":"def isShiftDown: Boolean","d":"scalqa/fx/base/event/Key"},
{"l":"api/scalqa/fx/base/event/Key$.html","n":"Key","t":"object Key","d":"scalqa/fx/base/event/Key$"},
{"l":"api/scalqa/fx/base/event/Key$.html","n":"subscribe","t":"def subscribe[U](node: Gui, l: Key => U, op: ObjectProperty[EventHandler[_ >: KeyEvent]]): Control","d":"scalqa/fx/base/event/Key$"},
{"l":"api/scalqa/fx/base/event/Mouse.html","n":"Mouse","t":"class Mouse(e: MouseEvent, node: Node) extends Input with Doc","d":"scalqa/fx/base/event/Mouse"},
{"l":"api/scalqa/fx/base/event/Mouse.html","n":"clickCount","t":"def clickCount: Int","d":"scalqa/fx/base/event/Mouse"},
{"l":"api/scalqa/fx/base/event/Mouse.html","n":"button","t":"def button: Button","d":"scalqa/fx/base/event/Mouse"},
{"l":"api/scalqa/fx/base/event/Mouse.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/base/event/Mouse"},
{"l":"api/scalqa/fx/base/event/Mouse$.html","n":"Mouse","t":"object Mouse","d":"scalqa/fx/base/event/Mouse$"},
{"l":"api/scalqa/fx/base/event/Mouse$.html","n":"Button","t":"type Button = Button","d":"scalqa/fx/base/event/Mouse$"},
{"l":"api/scalqa/fx/base/event/Mouse$.html","n":"Button","t":"def Button: Button","d":"scalqa/fx/base/event/Mouse$"},
{"l":"api/scalqa/fx/base/event/MouseDrag.html","n":"MouseDrag","t":"class MouseDrag(real: MouseDragEvent, node: Node) extends Mouse","d":"scalqa/fx/base/event/MouseDrag"},
{"l":"api/scalqa/fx/base/event/Rotate.html","n":"Rotate","t":"class Rotate(real: RotateEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Rotate"},
{"l":"api/scalqa/fx/base/event/Scroll.html","n":"Scroll","t":"class Scroll(real: ScrollEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Scroll"},
{"l":"api/scalqa/fx/base/event/Swipe.html","n":"Swipe","t":"class Swipe(real: SwipeEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Swipe"},
{"l":"api/scalqa/fx/base/event/Touch.html","n":"Touch","t":"class Touch(real: TouchEvent, node: Node) extends Input","d":"scalqa/fx/base/event/Touch"},
{"l":"api/scalqa/fx/base/event/Zoom.html","n":"Zoom","t":"class Zoom(real: ZoomEvent, node: Node) extends Gesture","d":"scalqa/fx/base/event/Zoom"},
{"l":"api/scalqa/fx/base/event/mouse.html","n":"scalqa.fx.base.event.mouse","t":"package scalqa.fx.base.event.mouse","d":"scalqa/fx/base/event/mouse"},
{"l":"api/scalqa/fx/base/event/mouse/Button.html","n":"Button","t":"enum Button(val real: MouseButton) extends Enum[MouseButton]","d":"scalqa/fx/base/event/mouse/Button"},
{"l":"api/scalqa/fx/base/event/mouse/Button.html","n":"None","t":"case None extends Button","d":"scalqa/fx/base/event/mouse/Button"},
{"l":"api/scalqa/fx/base/event/mouse/Button.html","n":"Left","t":"case Left extends Button","d":"scalqa/fx/base/event/mouse/Button"},
{"l":"api/scalqa/fx/base/event/mouse/Button.html","n":"Middle","t":"case Middle extends Button","d":"scalqa/fx/base/event/mouse/Button"},
{"l":"api/scalqa/fx/base/event/mouse/Button.html","n":"Right","t":"case Right extends Button","d":"scalqa/fx/base/event/mouse/Button"},
{"l":"api/scalqa/fx/base/event/mouse/Button$.html","n":"Button","t":"object Button extends Companion[Button, MouseButton]","d":"scalqa/fx/base/event/mouse/Button$"},
{"l":"api/scalqa/fx/base/javaFx.html","n":"scalqa.fx.base.javaFx","t":"package scalqa.fx.base.javaFx","d":"scalqa/fx/base/javaFx"},
{"l":"api/scalqa/fx/base/javaFx/Enum.html","n":"Enum","t":"class Enum[J_ENUM <: Enum[J_ENUM]] extends Enum","d":"scalqa/fx/base/javaFx/Enum"},
{"l":"api/scalqa/fx/base/javaFx/Enum.html","n":"real","t":"def real: J_ENUM","d":"scalqa/fx/base/javaFx/Enum"},
{"l":"api/scalqa/fx/base/javaFx/Enum$.html","n":"Enum","t":"object Enum","d":"scalqa/fx/base/javaFx/Enum$"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"Companion","t":"class Companion[ENUM <: Enum[J_ENUM], J_ENUM <: Enum[J_ENUM]] extends EnumCompanion[ENUM] with TwoWayFunction[J_ENUM, ENUM]","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"apply","t":"def apply(v: J_ENUM): ENUM","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"undo","t":"def undo(v: ENUM): J_ENUM","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"implicitFromJava","t":"def implicitFromJava(v: J_ENUM): ENUM","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"implicitToJava","t":"def implicitToJava(v: ENUM): J_ENUM","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/Enum$$Companion.html","n":"FxConverter","t":"given FxConverter: TwoWayFunction[J_ENUM, ENUM]","d":"scalqa/fx/base/javaFx/Enum$$Companion"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"To","t":"object To","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"idx_O","t":"def idx_O[A](v: ObservableList[A]): Observable[A]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"idx_OM","t":"def idx_OM[A](v: ObservableList[A]): ObservableMutable[A]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"parseChanges","t":"def parseChanges[A](v: Change[_ <: A]): Pack[Event[A]]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O[A](v: ObservableObjectValue[A]): Observable[A]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O(v: ObservableBooleanValue): O","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O(v: ObservableDoubleValue): O","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O(v: ObservableLongValue): O","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O(v: ObservableIntegerValue): O","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_O","t":"def pro_O(v: ObservableStringValue): Observable[String]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM[A](v: ObjectProperty[A]): ObservableMutable[A]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM(v: BooleanProperty): OM","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM(v: DoubleProperty): OM","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM(v: LongProperty): OM","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM(v: IntegerProperty): OM","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/javaFx/To$.html","n":"pro_OM","t":"def pro_OM(v: StringProperty): ObservableMutable[String]","d":"scalqa/fx/base/javaFx/To$"},
{"l":"api/scalqa/fx/base/selection.html","n":"scalqa.fx.base.selection","t":"package scalqa.fx.base.selection","d":"scalqa/fx/base/selection"},
{"l":"api/scalqa/fx/base/selection/Mode.html","n":"Mode","t":"enum Mode(val real: SelectionMode) extends Enum[SelectionMode]","d":"scalqa/fx/base/selection/Mode"},
{"l":"api/scalqa/fx/base/selection/Mode.html","n":"Single","t":"case Single extends Mode","d":"scalqa/fx/base/selection/Mode"},
{"l":"api/scalqa/fx/base/selection/Mode.html","n":"Multiple","t":"case Multiple extends Mode","d":"scalqa/fx/base/selection/Mode"},
{"l":"api/scalqa/fx/base/selection/Mode$.html","n":"Mode","t":"object Mode extends Companion[Mode, SelectionMode]","d":"scalqa/fx/base/selection/Mode$"},
{"l":"api/scalqa/fx/base/style.html","n":"scalqa.fx.base.style","t":"package scalqa.fx.base.style","d":"scalqa/fx/base/style"},
{"l":"api/scalqa/fx/base/style/Class$.html","n":"Class","t":"object Class extends Data[Class]","d":"scalqa/fx/base/style/Class$"},
{"l":"api/scalqa/fx/base/style/Class$.html","n":"apply","t":"def apply(inline v: String): Class","d":"scalqa/fx/base/style/Class$"},
{"l":"api/scalqa/fx/base/style/Class$.html","n":"implicitFrom","t":"def implicitFrom(inline v: String): Class","d":"scalqa/fx/base/style/Class$"},
{"l":"api/scalqa/fx/base/style/Class$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[String, Class]","d":"scalqa/fx/base/style/Class$"},
{"l":"api/scalqa/fx/base/style/Class$.html","n":"+","t":"def +(v: Style | String): Class","d":"scalqa/fx/base/style/Class$"},
{"l":"api/scalqa/fx/base/style/Class.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/style/Class$$TYPE$"},
{"l":"api/scalqa/fx/base/style/Class.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/style/Class$$TYPE$"},
{"l":"api/scalqa/fx/base/style/PseudoClass$.html","n":"PseudoClass","t":"object PseudoClass extends Opaque[PseudoClass, PseudoClass]","d":"scalqa/fx/base/style/PseudoClass$"},
{"l":"api/scalqa/fx/base/style/PseudoClass$.html","n":"apply","t":"def apply(s: String): PseudoClass","d":"scalqa/fx/base/style/PseudoClass$"},
{"l":"api/scalqa/fx/base/style/PseudoClass$.html","n":"implicitFrom","t":"def implicitFrom(inline v: String): PseudoClass","d":"scalqa/fx/base/style/PseudoClass$"},
{"l":"api/scalqa/fx/base/style/PseudoClass$.html","n":"name","t":"def name: String","d":"scalqa/fx/base/style/PseudoClass$"},
{"l":"api/scalqa/fx/base/style/PseudoClass.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/base/style/PseudoClass$$TYPE$"},
{"l":"api/scalqa/fx/base/style/PseudoClass.html","n":"DEF","t":"type DEF","d":"scalqa/fx/base/style/PseudoClass$$TYPE$"},
{"l":"api/scalqa/fx/base/style/PseudoGroup.html","n":"PseudoGroup","t":"class PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup"},
{"l":"api/scalqa/fx/base/style/PseudoGroup.html","n":"classes","t":"val classes: Pack[PseudoClass]","d":"scalqa/fx/base/style/PseudoGroup"},
{"l":"api/scalqa/fx/base/style/PseudoGroup.html","n":"apply","t":"def apply(n: Node, activeIndex: Int): Unit","d":"scalqa/fx/base/style/PseudoGroup"},
{"l":"api/scalqa/fx/base/style/PseudoGroup.html","n":"apply","t":"def apply(n: Node, ba: Boolean*): Unit","d":"scalqa/fx/base/style/PseudoGroup"},
{"l":"api/scalqa/fx/base/style/PseudoGroup.html","n":"apply","t":"def apply(nodes: Node*)(ba: Boolean*): Unit","d":"scalqa/fx/base/style/PseudoGroup"},
{"l":"api/scalqa/fx/base/style/PseudoGroup$.html","n":"PseudoGroup","t":"object PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup$"},
{"l":"api/scalqa/fx/base/style/PseudoGroup$.html","n":"PositiveNegative","t":"val PositiveNegative: PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup$"},
{"l":"api/scalqa/fx/base/style/PseudoGroup$.html","n":"SmallMediumLarge","t":"val SmallMediumLarge: PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup$"},
{"l":"api/scalqa/fx/base/style/PseudoGroup$.html","n":"apply","t":"def apply(p: Stream[PseudoClass]): PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup$"},
{"l":"api/scalqa/fx/base/style/PseudoGroup$.html","n":"apply","t":"def apply(p: PseudoClass*): PseudoGroup","d":"scalqa/fx/base/style/PseudoGroup$"},
{"l":"api/scalqa/fx/control.html","n":"scalqa.fx.control","t":"package scalqa.fx.control","d":"scalqa/fx/control"},
{"l":"api/scalqa/fx/control/Button.html","n":"Button","t":"class Button extends Base","d":"scalqa/fx/control/Button"},
{"l":"api/scalqa/fx/control/Button$.html","n":"Button","t":"object Button","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Button$.html","n":"apply","t":"def apply(s: String): Button","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Button$.html","n":"apply","t":"def apply(s: String, action: => Unit): Button","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Button$.html","n":"Base","t":"type Base = Base","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Button$.html","n":"Type","t":"type Type = DEF","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Button$.html","n":"Type","t":"def Type: Type","d":"scalqa/fx/control/Button$"},
{"l":"api/scalqa/fx/control/Cell.html","n":"Cell","t":"class Cell extends Like","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"item","t":"def item: ITEM","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"itemOpt","t":"def itemOpt: DEF[ITEM]","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"emptyPro","t":"def emptyPro: O","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"empty","t":"def empty: Boolean","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"editingPro","t":"def editingPro: O","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"editing","t":"def editing: Boolean","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"editablePro","t":"def editablePro: OM","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"editable","t":"def editable: Boolean","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"editable_=","t":"def editable_=(b: Boolean): Unit","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"styleClass","t":"def styleClass: Class","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell.html","n":"styleClass_=","t":"def styleClass_=(sc: Class): Unit","d":"scalqa/fx/control/Cell"},
{"l":"api/scalqa/fx/control/Cell$.html","n":"Cell","t":"object Cell","d":"scalqa/fx/control/Cell$"},
{"l":"api/scalqa/fx/control/Cell$.html","n":"Indexed","t":"type Indexed = Indexed","d":"scalqa/fx/control/Cell$"},
{"l":"api/scalqa/fx/control/Cell$.html","n":"Setup","t":"type Setup[A <: Cell] = Setup[A]","d":"scalqa/fx/control/Cell$"},
{"l":"api/scalqa/fx/control/Cell$.html","n":"Setup","t":"def Setup: Setup","d":"scalqa/fx/control/Cell$"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"CheckBox","t":"class CheckBox extends Base","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"selectedPro","t":"def selectedPro: OM","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"selected","t":"def selected: Boolean","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"selected_=","t":"def selected_=(b: Boolean): Unit","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"onActionSelectedRun","t":"def onActionSelectedRun(f: => Unit): Control","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"onActionUnselectedRun","t":"def onActionUnselectedRun(f: => Unit): Control","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox.html","n":"bind","t":"def bind(p: Mutable[Boolean]): Unit","d":"scalqa/fx/control/CheckBox"},
{"l":"api/scalqa/fx/control/CheckBox$.html","n":"CheckBox","t":"object CheckBox","d":"scalqa/fx/control/CheckBox$"},
{"l":"api/scalqa/fx/control/CheckBox$.html","n":"apply","t":"def apply(s: String, p: Mutable[Boolean]): CheckBox","d":"scalqa/fx/control/CheckBox$"},
{"l":"api/scalqa/fx/control/CheckBox$.html","n":"apply","t":"def apply(): CheckBox","d":"scalqa/fx/control/CheckBox$"},
{"l":"api/scalqa/fx/control/CheckBox$.html","n":"apply","t":"def apply[U](text: DEF[String], checked: DEF[Boolean], action: CheckBox => U): CheckBox","d":"scalqa/fx/control/CheckBox$"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"ComboBox","t":"class ComboBox[A](using val docDef: Doc[A]) extends Base[A]","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"docDef","t":"val docDef: Doc[A]","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"items","t":"val items: Mutable[A]","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"selection","t":"val selection: Selection[A]","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"visibleRowCountPro","t":"def visibleRowCountPro: OM","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"visibleRowCount","t":"def visibleRowCount: Int","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"visibleRowCount_=","t":"def visibleRowCount_=(v: Int): Unit","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox.html","n":"useFormat","t":"def useFormat(f: A => String): Unit","d":"scalqa/fx/control/ComboBox"},
{"l":"api/scalqa/fx/control/ComboBox$.html","n":"ComboBox","t":"object ComboBox","d":"scalqa/fx/control/ComboBox$"},
{"l":"api/scalqa/fx/control/ComboBox$.html","n":"apply","t":"def apply[A](using t: Doc[A]): ComboBox[A]","d":"scalqa/fx/control/ComboBox$"},
{"l":"api/scalqa/fx/control/ComboBox$.html","n":"apply","t":"def apply[A](v: Stream[A])(using t: Doc[A]): ComboBox[A]","d":"scalqa/fx/control/ComboBox$"},
{"l":"api/scalqa/fx/control/ComboBox$.html","n":"apply","t":"def apply[A](v: Stream[A], selected: DEF[A])(using t: Doc[A]): ComboBox[A]","d":"scalqa/fx/control/ComboBox$"},
{"l":"api/scalqa/fx/control/ComboBox$.html","n":"Base","t":"type Base[A] = Base[A]","d":"scalqa/fx/control/ComboBox$"},
{"l":"api/scalqa/fx/control/Label.html","n":"Label","t":"class Label extends Like","d":"scalqa/fx/control/Label"},
{"l":"api/scalqa/fx/control/Label$.html","n":"Label","t":"object Label","d":"scalqa/fx/control/Label$"},
{"l":"api/scalqa/fx/control/Label$.html","n":"apply","t":"def apply(): Label","d":"scalqa/fx/control/Label$"},
{"l":"api/scalqa/fx/control/Label$.html","n":"apply","t":"def apply[A](txt: String): Label","d":"scalqa/fx/control/Label$"},
{"l":"api/scalqa/fx/control/Label$.html","n":"Like","t":"type Like = Like","d":"scalqa/fx/control/Label$"},
{"l":"api/scalqa/fx/control/List.html","n":"List","t":"class List[A] extends Control","d":"scalqa/fx/control/List"},
{"l":"api/scalqa/fx/control/List.html","n":"items","t":"val items: Mutable[A]","d":"scalqa/fx/control/List"},
{"l":"api/scalqa/fx/control/List.html","n":"selection","t":"val selection: Selection[A]","d":"scalqa/fx/control/List"},
{"l":"api/scalqa/fx/control/List$.html","n":"List","t":"object List","d":"scalqa/fx/control/List$"},
{"l":"api/scalqa/fx/control/List$.html","n":"apply","t":"def apply[A](): List[A]","d":"scalqa/fx/control/List$"},
{"l":"api/scalqa/fx/control/Menu.html","n":"Menu","t":"class Menu extends Item with Add[Action]","d":"scalqa/fx/control/Menu"},
{"l":"api/scalqa/fx/control/Menu.html","n":"this","t":"def this(text: String, enabled: Boolean)","d":"scalqa/fx/control/Menu"},
{"l":"api/scalqa/fx/control/Menu.html","n":"items","t":"val items: Mutable[Item]","d":"scalqa/fx/control/Menu"},
{"l":"api/scalqa/fx/control/Menu.html","n":"add","t":"def add(a: Action): Unit","d":"scalqa/fx/control/Menu"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Menu","t":"object Menu","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"apply","t":"def apply(): Menu","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"apply","t":"def apply(text: String, enabled: Boolean): Menu","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"apply","t":"def apply(text: String, n: Like): Menu","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"apply","t":"def apply(text: String, n: Like, its: Stream[Item]): Menu","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Item","t":"type Item = Item","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Item","t":"def Item: Item","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Bar","t":"type Bar = Bar","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Bar","t":"def Bar: Bar","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Button","t":"type Button = Button","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Menu$.html","n":"Button","t":"def Button: Button","d":"scalqa/fx/control/Menu$"},
{"l":"api/scalqa/fx/control/Popup.html","n":"Popup","t":"class Popup extends Window","d":"scalqa/fx/control/Popup"},
{"l":"api/scalqa/fx/control/Popup.html","n":"children","t":"val children: Mutable[Like]","d":"scalqa/fx/control/Popup"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"Popup","t":"object Popup","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"promise","t":"def promise(promise: Promise[Any], message: Any, delay: Length, target: Window): Unit","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"Control","t":"type Control = Control","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"Menu","t":"type Menu = Menu","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"Menu","t":"def Menu: Menu","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Popup$.html","n":"Window","t":"type Window = Window","d":"scalqa/fx/control/Popup$"},
{"l":"api/scalqa/fx/control/Table.html","n":"Table","t":"class Table[ROW] extends Control with _properties[ROW] with _Column[ROW] with _customRow[ROW]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"columns","t":"def columns: Idx[Column[ROW, _, _]]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"rows","t":"def rows: ObservableMutable[ROW]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"selection","t":"val selection: Selection[ROW]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"sortOrder","t":"def sortOrder: Pack[Column[_]]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"sortOrder_=","t":"def sortOrder_=(a: Stream[Column[_]]): Unit","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"scrollTo","t":"def scrollTo(i: Int): Unit","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"orderingPro","t":"val orderingPro: ObservableMutable[Ordering[ROW]]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table.html","n":"sortingBasePro","t":"val sortingBasePro: ObservableMutable[Ordering[ROW]]","d":"scalqa/fx/control/Table"},
{"l":"api/scalqa/fx/control/Table$.html","n":"Table","t":"object Table","d":"scalqa/fx/control/Table$"},
{"l":"api/scalqa/fx/control/Table$.html","n":"Cell","t":"type Cell[ROW, V, A] = Cell[ROW, V, A]","d":"scalqa/fx/control/Table$"},
{"l":"api/scalqa/fx/control/Table$.html","n":"Cell","t":"def Cell: Cell","d":"scalqa/fx/control/Table$"},
{"l":"api/scalqa/fx/control/Table$.html","n":"SortMode","t":"type SortMode = SortMode","d":"scalqa/fx/control/Table$"},
{"l":"api/scalqa/fx/control/Table$.html","n":"SortMode","t":"def SortMode: SortMode","d":"scalqa/fx/control/Table$"},
{"l":"api/scalqa/fx/control/Text.html","n":"Text","t":"class Text(s: DEF[String]) extends Shape","d":"scalqa/fx/control/Text"},
{"l":"api/scalqa/fx/control/Text.html","n":"textPro","t":"def textPro: ObservableMutable[String]","d":"scalqa/fx/control/Text"},
{"l":"api/scalqa/fx/control/Text.html","n":"text","t":"def text: String","d":"scalqa/fx/control/Text"},
{"l":"api/scalqa/fx/control/Text.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/control/Text"},
{"l":"api/scalqa/fx/control/Text.html","n":"fontPro","t":"def fontPro: ObservableMutable[Font]","d":"scalqa/fx/control/Text"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Text","t":"object Text","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"apply","t":"def apply(): Text","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"apply","t":"def apply(v: String): Text","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"InputControl","t":"type InputControl = InputControl","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"InputControl","t":"def InputControl: InputControl","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Field","t":"type Field = Field","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Field","t":"def Field: Field","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Area","t":"type Area = Area","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Area","t":"def Area: Area","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Font","t":"type Font = DEF","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Text$.html","n":"Font","t":"def Font: Font","d":"scalqa/fx/control/Text$"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"Toggle","t":"trait Toggle","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"real","t":"def real: Toggle","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"selectedPro","t":"def selectedPro: OM","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"selected","t":"def selected: Boolean","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"selected_=","t":"def selected_=(b: Boolean): Unit","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"toggleGroupPro","t":"def toggleGroupPro: ObservableMutable[Group]","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"toggleGroup","t":"def toggleGroup: Group","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle.html","n":"toggleGroup_=","t":"def toggleGroup_=(v: Group): Unit","d":"scalqa/fx/control/Toggle"},
{"l":"api/scalqa/fx/control/Toggle$.html","n":"Toggle","t":"object Toggle","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"FxConverter","t":"given FxConverter: TwoWayFunction[Toggle, Toggle]","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"apply","t":"def apply(v: Toggle): Toggle","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"undo","t":"def undo(v: Toggle): Toggle","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$.html","n":"Button","t":"type Button = Button","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$.html","n":"Button","t":"def Button: Button","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$.html","n":"Group","t":"type Group = Group","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$.html","n":"Group","t":"def Group: Group","d":"scalqa/fx/control/Toggle$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"FxConverter","t":"given FxConverter: TwoWayFunction[Toggle, Toggle]","d":"scalqa/fx/control/Toggle$$FxConverter$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"apply","t":"def apply(v: Toggle): Toggle","d":"scalqa/fx/control/Toggle$$FxConverter$"},
{"l":"api/scalqa/fx/control/Toggle$$FxConverter$.html","n":"undo","t":"def undo(v: Toggle): Toggle","d":"scalqa/fx/control/Toggle$$FxConverter$"},
{"l":"api/scalqa/fx/control/Tooltip.html","n":"Tooltip","t":"class Tooltip(so: DEF[String]) extends Control","d":"scalqa/fx/control/Tooltip"},
{"l":"api/scalqa/fx/control/Tooltip.html","n":"graphicPro","t":"def graphicPro: ObservableMutable[Node]","d":"scalqa/fx/control/Tooltip"},
{"l":"api/scalqa/fx/control/Tooltip.html","n":"graphic","t":"def graphic: Node","d":"scalqa/fx/control/Tooltip"},
{"l":"api/scalqa/fx/control/Tooltip.html","n":"graphic_=","t":"def graphic_=(n: Node): Unit","d":"scalqa/fx/control/Tooltip"},
{"l":"api/scalqa/fx/control/Tooltip.html","n":"attachTo","t":"def attachTo(n: Node): Unit","d":"scalqa/fx/control/Tooltip"},
{"l":"api/scalqa/fx/control/Tooltip$.html","n":"Tooltip","t":"object Tooltip extends Setup[Tooltip]","d":"scalqa/fx/control/Tooltip$"},
{"l":"api/scalqa/fx/control/Tooltip$.html","n":"apply","t":"def apply(s: DEF[String]): Tooltip","d":"scalqa/fx/control/Tooltip$"},
{"l":"api/scalqa/fx/control/Tooltip$.html","n":"apply","t":"def apply(t: Tooltip): Tooltip","d":"scalqa/fx/control/Tooltip$"},
{"l":"api/scalqa/fx/control/Tooltip$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[Tooltip, Tooltip]","d":"scalqa/fx/control/Tooltip$"},
{"l":"api/scalqa/fx/control/button.html","n":"scalqa.fx.control.button","t":"package scalqa.fx.control.button","d":"scalqa/fx/control/button"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"Base","t":"class Base extends Like","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"REAL","t":"type REAL <: ButtonBase","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"arm","t":"def arm: Unit","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"disarm","t":"def disarm: Unit","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"armedPro","t":"def armedPro: O","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"armed","t":"def armed: Unit","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"onAction","t":"def onAction[U](l: Event => U): Control","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Base.html","n":"onActionRun","t":"def onActionRun[U](run: => U): Control","d":"scalqa/fx/control/button/Base"},
{"l":"api/scalqa/fx/control/button/Type$.html","n":"Type","t":"object Type extends Opaque[Type, ButtonType]","d":"scalqa/fx/control/button/Type$"},
{"l":"api/scalqa/fx/control/button/Type.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/control/button/Type$$TYPE$"},
{"l":"api/scalqa/fx/control/button/Type.html","n":"DEF","t":"type DEF","d":"scalqa/fx/control/button/Type$$TYPE$"},
{"l":"api/scalqa/fx/control/cell.html","n":"scalqa.fx.control.cell","t":"package scalqa.fx.control.cell","d":"scalqa/fx/control/cell"},
{"l":"api/scalqa/fx/control/cell/Indexed.html","n":"Indexed","t":"class Indexed extends Cell","d":"scalqa/fx/control/cell/Indexed"},
{"l":"api/scalqa/fx/control/cell/Indexed.html","n":"ITEM","t":"type ITEM","d":"scalqa/fx/control/cell/Indexed"},
{"l":"api/scalqa/fx/control/cell/Indexed.html","n":"REAL","t":"type REAL <: IndexedCell[ITEM]","d":"scalqa/fx/control/cell/Indexed"},
{"l":"api/scalqa/fx/control/cell/Indexed.html","n":"indexPro","t":"def indexPro: O","d":"scalqa/fx/control/cell/Indexed"},
{"l":"api/scalqa/fx/control/cell/Indexed.html","n":"index","t":"def index: Int","d":"scalqa/fx/control/cell/Indexed"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"Setup","t":"trait Setup[CELL <: Cell] extends Doc","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useCellSetup","t":"def useCellSetup(f: CELL => Unit): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useMouseClicked","t":"def useMouseClicked(f: (Mouse, CELL) => Unit): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useContextMenu","t":"def useContextMenu(f: (ContextMenu, CELL) => Unit): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useAlignment","t":"def useAlignment(f: CELL => Pos): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useAlignmentOpt","t":"def useAlignmentOpt(f: CELL => DEF[Pos]): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useStyle","t":"def useStyle(f: CELL => Style): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useStyleOpt","t":"def useStyleOpt(f: CELL => DEF[Style]): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useStyleClass","t":"def useStyleClass(f: CELL => Class): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"useStyleClassOpt","t":"def useStyleClassOpt(f: CELL => DEF[Class]): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"style","t":"def style: Style","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"styleClass","t":"def styleClass: Class","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"alignment_=","t":"def alignment_=(s: Pos): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"style_=","t":"def style_=(s: Style): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"styleClass_=","t":"def styleClass_=(s: Class): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"apply","t":"def apply(c: CELL): Unit","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/control/cell/Setup"},
{"l":"api/scalqa/fx/control/cell/Setup$.html","n":"Setup","t":"object Setup","d":"scalqa/fx/control/cell/Setup$"},
{"l":"api/scalqa/fx/control/cell/Setup$.html","n":"implicitFrom","t":"def implicitFrom[CELL <: Cell](v: VOID): Setup[CELL]","d":"scalqa/fx/control/cell/Setup$"},
{"l":"api/scalqa/fx/control/comboBox.html","n":"scalqa.fx.control.comboBox","t":"package scalqa.fx.control.comboBox","d":"scalqa/fx/control/comboBox"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"Base","t":"class Base[A] extends Control","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"REAL","t":"type REAL <: ComboBoxBase[A]","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"valuePro","t":"def valuePro: ObservableMutable[A]","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"value","t":"def value: A","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"value_=","t":"def value_=(v: A): Unit","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"onAction","t":"def onAction[U](l: Event => U): Control","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/comboBox/Base.html","n":"onActionRun","t":"def onActionRun[U](l: => U): Control","d":"scalqa/fx/control/comboBox/Base"},
{"l":"api/scalqa/fx/control/label.html","n":"scalqa.fx.control.label","t":"package scalqa.fx.control.label","d":"scalqa/fx/control/label"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"Like","t":"class Like extends Control","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"REAL","t":"type REAL <: Labeled","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"textPro","t":"def textPro: ObservableMutable[String]","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"text","t":"def text: String","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"alignmentPro","t":"def alignmentPro: ObservableMutable[Pos]","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"alignment_=","t":"def alignment_=(v: Pos): Unit","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"fontPro","t":"def fontPro: ObservableMutable[Font]","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"font","t":"def font: Font","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"font_=","t":"def font_=(v: Font): Unit","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"textFillPro","t":"def textFillPro: ObservableMutable[Paint]","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"textFill","t":"def textFill: Paint","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/label/Like.html","n":"textFill_=","t":"def textFill_=(v: Paint): Unit","d":"scalqa/fx/control/label/Like"},
{"l":"api/scalqa/fx/control/menu.html","n":"scalqa.fx.control.menu","t":"package scalqa.fx.control.menu","d":"scalqa/fx/control/menu"},
{"l":"api/scalqa/fx/control/menu/Bar.html","n":"Bar","t":"class Bar extends Control","d":"scalqa/fx/control/menu/Bar"},
{"l":"api/scalqa/fx/control/menu/Bar$.html","n":"Bar","t":"object Bar","d":"scalqa/fx/control/menu/Bar$"},
{"l":"api/scalqa/fx/control/menu/Bar$.html","n":"apply","t":"def apply(): Bar","d":"scalqa/fx/control/menu/Bar$"},
{"l":"api/scalqa/fx/control/menu/Bar$.html","n":"apply","t":"def apply(s: Stream[Menu]): Bar","d":"scalqa/fx/control/menu/Bar$"},
{"l":"api/scalqa/fx/control/menu/Button.html","n":"Button","t":"class Button extends Base","d":"scalqa/fx/control/menu/Button"},
{"l":"api/scalqa/fx/control/menu/Button.html","n":"items","t":"def items: Mutable[Item]","d":"scalqa/fx/control/menu/Button"},
{"l":"api/scalqa/fx/control/menu/Button$.html","n":"Button","t":"object Button","d":"scalqa/fx/control/menu/Button$"},
{"l":"api/scalqa/fx/control/menu/Button$.html","n":"apply","t":"def apply(): Button","d":"scalqa/fx/control/menu/Button$"},
{"l":"api/scalqa/fx/control/menu/Button$.html","n":"apply","t":"def apply(text: String, n: Like): Button","d":"scalqa/fx/control/menu/Button$"},
{"l":"api/scalqa/fx/control/menu/Button$.html","n":"apply","t":"def apply(text: String, n: Like, it: Stream[Item]): Button","d":"scalqa/fx/control/menu/Button$"},
{"l":"api/scalqa/fx/control/menu/Button$.html","n":"apply","t":"def apply(text: String): Button","d":"scalqa/fx/control/menu/Button$"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"Item","t":"class Item extends Action","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"graphicPro","t":"def graphicPro: ObservableMutable[Like]","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"graphic","t":"def graphic: Like","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"graphic_=","t":"def graphic_=(g: Like): Unit","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"idPro","t":"def idPro: ObservableMutable[String]","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"id","t":"def id: String","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item.html","n":"id_=","t":"def id_=(v: String): Unit","d":"scalqa/fx/control/menu/Item"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"Item","t":"object Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"Custom","t":"type Custom = Custom","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply(a: Action): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply(text: String): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply(text: String, n: Like): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply[U](text: String, l: Event => U): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply[U](text: String, enabled: Boolean, l: Event => U): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"apply","t":"def apply(real: MenuItem): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"separator","t":"def separator: Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[MenuItem, Item]","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/Item$.html","n":"implicitFrom","t":"def implicitFrom(v: SEPARATOR): Item","d":"scalqa/fx/control/menu/Item$"},
{"l":"api/scalqa/fx/control/menu/item.html","n":"scalqa.fx.control.menu.item","t":"package scalqa.fx.control.menu.item","d":"scalqa/fx/control/menu/item"},
{"l":"api/scalqa/fx/control/menu/item/Custom.html","n":"Custom","t":"class Custom extends Item","d":"scalqa/fx/control/menu/item/Custom"},
{"l":"api/scalqa/fx/control/menu/item/Custom.html","n":"this","t":"def this(n: Like, hideOnClick: Boolean)","d":"scalqa/fx/control/menu/item/Custom"},
{"l":"api/scalqa/fx/control/popup.html","n":"scalqa.fx.control.popup","t":"package scalqa.fx.control.popup","d":"scalqa/fx/control/popup"},
{"l":"api/scalqa/fx/control/popup/Control.html","n":"Control","t":"class Control extends Window","d":"scalqa/fx/control/popup/Control"},
{"l":"api/scalqa/fx/control/popup/Menu.html","n":"Menu","t":"class Menu extends Control","d":"scalqa/fx/control/popup/Menu"},
{"l":"api/scalqa/fx/control/popup/Menu.html","n":"items","t":"val items: Mutable[Item]","d":"scalqa/fx/control/popup/Menu"},
{"l":"api/scalqa/fx/control/popup/Menu.html","n":"show","t":"def show(n: Node, s: Side, x: Double, y: Double): Unit","d":"scalqa/fx/control/popup/Menu"},
{"l":"api/scalqa/fx/control/popup/Menu.html","n":"show","t":"def show(n: Node): Unit","d":"scalqa/fx/control/popup/Menu"},
{"l":"api/scalqa/fx/control/popup/Menu$.html","n":"Menu","t":"object Menu","d":"scalqa/fx/control/popup/Menu$"},
{"l":"api/scalqa/fx/control/popup/Menu$.html","n":"apply","t":"def apply(): Menu","d":"scalqa/fx/control/popup/Menu$"},
{"l":"api/scalqa/fx/control/popup/Menu$.html","n":"apply","t":"def apply(p: Stream[Action]): Menu","d":"scalqa/fx/control/popup/Menu$"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"Window","t":"class Window extends Window","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"REAL","t":"type REAL <: PopupWindow","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"scene","t":"val scene: Scene","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"show","t":"def show(n: Parent, x: Double, y: Double): Unit","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"show","t":"def show(w: Window, x: Double, y: Double): Unit","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/popup/Window.html","n":"show","t":"def show(w: Window): Unit","d":"scalqa/fx/control/popup/Window"},
{"l":"api/scalqa/fx/control/table.html","n":"scalqa.fx.control.table","t":"package scalqa.fx.control.table","d":"scalqa/fx/control/table"},
{"l":"api/scalqa/fx/control/table/_Column.html","n":"_Column","t":"trait _Column[ROW]","d":"scalqa/fx/control/table/_Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"Column","t":"class Column[A] extends Column[ROW, VIEW, A]","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(using oo: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(label: String, widthOpt: Opt, f: ROW => A)(using o: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(label: String, f: ROW => A)(using o: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(label: String, width: Int)(using o: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(label: String)(using o: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"this","t":"def this(f: ROW => A)(using o: DEF[Ordering[A]])(using t: Void[A], d: Doc[A])","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_Column$Column.html","n":"table","t":"def table: Table[ROW]","d":"scalqa/fx/control/table/_Column$Column"},
{"l":"api/scalqa/fx/control/table/_customRow.html","n":"_customRow","t":"trait _customRow[ROW]","d":"scalqa/fx/control/table/_customRow"},
{"l":"api/scalqa/fx/control/table/_customRow$CustomRow.html","n":"CustomRow","t":"class CustomRow extends Setup[RowCell[ROW, VIEW]]","d":"scalqa/fx/control/table/_customRow$CustomRow"},
{"l":"api/scalqa/fx/control/table/_customRow$CustomRow.html","n":"this","t":"def this(filter: RowCell[ROW, VIEW] => Boolean)","d":"scalqa/fx/control/table/_customRow$CustomRow"},
{"l":"api/scalqa/fx/control/table/_customRow$CustomRow.html","n":"this","t":"def this(v: EMPTY)","d":"scalqa/fx/control/table/_customRow$CustomRow"},
{"l":"api/scalqa/fx/control/table/_customRow$CustomRow.html","n":"refreshOn","t":"def refreshOn(f: ROW => Observable): Unit","d":"scalqa/fx/control/table/_customRow$CustomRow"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"_properties","t":"trait _properties[ROW]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"itemsPro","t":"def itemsPro: ObservableMutable[ObservableMutable[ROW]]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"items","t":"def items: ObservableMutable[ROW]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"items_=","t":"def items_=(l: Idx[ROW]): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortModePro","t":"def sortModePro: ObservableMutable[SortMode]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortMode","t":"def sortMode: SortMode","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortMode_=","t":"def sortMode_=(v: SortMode): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"orderingPro","t":"val orderingPro: ObservableMutable[Ordering[ROW]]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"ordering","t":"def ordering: Ordering[ROW]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"ordering_=","t":"def ordering_=(v: Ordering[ROW]): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortingBasePro","t":"val sortingBasePro: ObservableMutable[Ordering[ROW]]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortingBase","t":"def sortingBase: Ordering[ROW]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"sortingBase_=","t":"def sortingBase_=(v: Ordering[ROW]): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"headerFooterPro","t":"def headerFooterPro: ObservableMutable[(Pack[ROW], Pack[ROW])]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"headerFooter","t":"def headerFooter: (Pack[ROW], Pack[ROW])","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"headerFooter_=","t":"def headerFooter_=(hf: (Stream[ROW], Stream[ROW])): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"editablePro","t":"def editablePro: OM","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"editable","t":"def editable: Boolean","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"editable_=","t":"def editable_=(b: Boolean): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"placeholderPro","t":"def placeholderPro: ObservableMutable[Node]","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"placeholder","t":"def placeholder: Node","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/_properties.html","n":"placeholder_=","t":"def placeholder_=(v: Node): Unit","d":"scalqa/fx/control/table/_properties"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"Cell","t":"class Cell[ROW, V, A](val column: Column[ROW, V, _]) extends Indexed","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"column","t":"val column: Column[ROW, V, _]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"table","t":"def table: Table[ROW]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"row","t":"def row: ROW","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"view","t":"def view: V","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"value","t":"def value: A","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"rowOpt","t":"def rowOpt: DEF[ROW]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"viewOpt","t":"def viewOpt: DEF[V]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"valueOpt","t":"def valueOpt: DEF[A]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell.html","n":"textOpt","t":"def textOpt: DEF[String]","d":"scalqa/fx/control/table/Cell"},
{"l":"api/scalqa/fx/control/table/Cell$.html","n":"Cell","t":"object Cell","d":"scalqa/fx/control/table/Cell$"},
{"l":"api/scalqa/fx/control/table/Cell$.html","n":"X","t":"def X: X","d":"scalqa/fx/control/table/Cell$"},
{"l":"api/scalqa/fx/control/table/Cell$.html","n":"Setup","t":"type Setup[ROW, V, A] = Setup[ROW, V, A]","d":"scalqa/fx/control/table/Cell$"},
{"l":"api/scalqa/fx/control/table/Cell$.html","n":"Item","t":"type Item[ROW, V, A] = Item[ROW, V, A]","d":"scalqa/fx/control/table/Cell$"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"Column","t":"class Column[ROW, V, A] extends Setup[ROW, V, A] with _value[ROW, V, A] with _edit[ROW, V, A] with _properties[ROW, V, A] with _customCell[ROW, V, A]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"voidDef","t":"val voidDef: Void[A]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"docDef","t":"val docDef: Doc[A]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"REAL","t":"type REAL = TableColumn[ROW, Item[ROW, V, A]]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"real","t":"val real: TableColumn[ROW, Item[ROW, V, A]]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"table","t":"def table: Table[ROW]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"useCell","t":"def useCell(f: => Cell[ROW, V, A]): Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"reposition","t":"def reposition(index: Int): Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"refreshColumn","t":"def refreshColumn: Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"refreshRow","t":"def refreshRow(c: Cell[ROW, V, A]): Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"refreshAt","t":"def refreshAt(i: Int): Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"refreshRange","t":"def refreshRange(r: Range): Unit","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"orderingPro","t":"val orderingPro: ObservableMutable[Ordering[A]]","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/Column.html","n":"sortablePro","t":"val sortablePro: OM","d":"scalqa/fx/control/table/Column"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"RowCell","t":"class RowCell[ROW, VIEW](val table: Table[ROW]) extends Indexed","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"table","t":"val table: Table[ROW]","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"ITEM","t":"type ITEM = ROW","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"rowOpt","t":"def rowOpt: DEF[ROW]","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"row","t":"def row: ROW","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"viewOpt","t":"def viewOpt: DEF[VIEW]","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/RowCell.html","n":"view","t":"def view: VIEW","d":"scalqa/fx/control/table/RowCell"},
{"l":"api/scalqa/fx/control/table/SortMode.html","n":"SortMode","t":"enum SortMode","d":"scalqa/fx/control/table/SortMode"},
{"l":"api/scalqa/fx/control/table/SortMode.html","n":"Void","t":"case Void extends SortMode with Void","d":"scalqa/fx/control/table/SortMode"},
{"l":"api/scalqa/fx/control/table/SortMode.html","n":"Direct","t":"case Direct extends SortMode","d":"scalqa/fx/control/table/SortMode"},
{"l":"api/scalqa/fx/control/table/SortMode.html","n":"ProxyWithUnsorted","t":"case ProxyWithUnsorted extends SortMode","d":"scalqa/fx/control/table/SortMode"},
{"l":"api/scalqa/fx/control/table/SortMode.html","n":"ProxyNoUnsorted","t":"case ProxyNoUnsorted extends SortMode","d":"scalqa/fx/control/table/SortMode"},
{"l":"api/scalqa/fx/control/table/SortMode$.html","n":"SortMode","t":"object SortMode extends EnumCompanion[SortMode]","d":"scalqa/fx/control/table/SortMode$"},
{"l":"api/scalqa/fx/control/table/SortMode$.html","n":"implicitFrom","t":"def implicitFrom(v: VOID): SortMode","d":"scalqa/fx/control/table/SortMode$"},
{"l":"api/scalqa/fx/control/table/cell.html","n":"scalqa.fx.control.table.cell","t":"package scalqa.fx.control.table.cell","d":"scalqa/fx/control/table/cell"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"Item","t":"class Item[ROW, V, A](val row: ROW, val setup: Setup[ROW, V, A], val valueOpt: DEF[A]) extends Doc","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"row","t":"val row: ROW","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"setup","t":"val setup: Setup[ROW, V, A]","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"valueOpt","t":"val valueOpt: DEF[A]","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"value","t":"def value: A","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"textOpt","t":"def textOpt: DEF[String]","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"make","t":"def make(v: DEF[A]): Item[ROW, V, A]","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Item.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/control/table/cell/Item"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"Setup","t":"trait Setup[ROW, V, A] extends Setup[Cell[ROW, V, A]] with _value[ROW, V, A] with Provider","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"voidDef","t":"def voidDef: Void[A]","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"docDef","t":"def docDef: Doc[A]","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"onCellChange","t":"def onCellChange[U](l: Cell[ROW, V, A] => U): Unit","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"refreshOn","t":"def refreshOn(d1: ROW => Observable): Unit","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"refreshOn","t":"def refreshOn(d1: ROW => Observable, d2: ROW => Observable): Unit","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/Setup.html","n":"refreshEvery","t":"def refreshEvery(tl: Length): Unit","d":"scalqa/fx/control/table/cell/Setup"},
{"l":"api/scalqa/fx/control/table/cell/X$.html","n":"X","t":"object X","d":"scalqa/fx/control/table/cell/X$"},
{"l":"api/scalqa/fx/control/table/cell/X$.html","n":"CheckBox","t":"type CheckBox[A, B, C] = CheckBox[A, B, C]","d":"scalqa/fx/control/table/cell/X$"},
{"l":"api/scalqa/fx/control/table/cell/X$.html","n":"ComboBox","t":"type ComboBox[A, B, C] = ComboBox[A, B, C]","d":"scalqa/fx/control/table/cell/X$"},
{"l":"api/scalqa/fx/control/table/cell/X$.html","n":"Label","t":"type Label[A, B, C] = Label[A, B, C]","d":"scalqa/fx/control/table/cell/X$"},
{"l":"api/scalqa/fx/control/table/cell/X$.html","n":"TextField","t":"type TextField[A, B, C] = TextField[A, B, C]","d":"scalqa/fx/control/table/cell/X$"},
{"l":"api/scalqa/fx/control/table/cell/setup.html","n":"scalqa.fx.control.table.cell.setup","t":"package scalqa.fx.control.table.cell.setup","d":"scalqa/fx/control/table/cell/setup"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"_value","t":"trait _value[ROW, VIEW, A]","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"voidDef","t":"def voidDef: Void[A]","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"docDef","t":"def docDef: Doc[A]","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValue","t":"def useValue(f: ROW => A): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueOpt","t":"def useValueOpt(f: ROW => DEF[A]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValuePro","t":"def useValuePro(f: ROW => Observable[A]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueOptPro","t":"def useValueOptPro(f: ROW => DEF[Observable[A]]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueProOpt","t":"def useValueProOpt(f: ROW => Observable[DEF[A]]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueFromView","t":"def useValueFromView(f: VIEW => A): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueFromViewOpt","t":"def useValueFromViewOpt(f: VIEW => DEF[A]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueFromViewPro","t":"def useValueFromViewPro(f: VIEW => Observable[A]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueFromViewOptPro","t":"def useValueFromViewOptPro(f: VIEW => DEF[Observable[A]]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useValueFromViewProOpt","t":"def useValueFromViewProOpt(f: VIEW => Observable[DEF[A]]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useProUpgrade","t":"def useProUpgrade(f: (ROW, Observable[DEF[A]]) => Observable[DEF[A]]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useFormat","t":"def useFormat(f: A => DEF[String]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useFormat","t":"def useFormat(f: A => DEF[String], voidVal: ROW => DEF[String]): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/setup/_value.html","n":"useTooltip","t":"def useTooltip(f: DEF[A] => Any): Unit","d":"scalqa/fx/control/table/cell/setup/_value"},
{"l":"api/scalqa/fx/control/table/cell/x.html","n":"scalqa.fx.control.table.cell.x","t":"package scalqa.fx.control.table.cell.x","d":"scalqa/fx/control/table/cell/x"},
{"l":"api/scalqa/fx/control/table/cell/x/CheckBox.html","n":"CheckBox","t":"class CheckBox[ROW, V, A](c: Column[ROW, V, A]) extends Cell[ROW, V, A]","d":"scalqa/fx/control/table/cell/x/CheckBox"},
{"l":"api/scalqa/fx/control/table/cell/x/CheckBox.html","n":"twoWay","t":"var twoWay: TwoWayFunction[A, Boolean]","d":"scalqa/fx/control/table/cell/x/CheckBox"},
{"l":"api/scalqa/fx/control/table/cell/x/ComboBox.html","n":"ComboBox","t":"class ComboBox[ROW, V, A](c: Column[ROW, V, A]) extends Cell[ROW, V, A]","d":"scalqa/fx/control/table/cell/x/ComboBox"},
{"l":"api/scalqa/fx/control/table/cell/x/ComboBox.html","n":"REAL","t":"type REAL = ComboBoxTableCell[ROW, ITEM]","d":"scalqa/fx/control/table/cell/x/ComboBox"},
{"l":"api/scalqa/fx/control/table/cell/x/ComboBox.html","n":"items","t":"val items: Mutable[A]","d":"scalqa/fx/control/table/cell/x/ComboBox"},
{"l":"api/scalqa/fx/control/table/cell/x/Label.html","n":"Label","t":"class Label[ROW, V, A](c: Column[ROW, V, A]) extends Cell[ROW, V, A]","d":"scalqa/fx/control/table/cell/x/Label"},
{"l":"api/scalqa/fx/control/table/cell/x/TextField.html","n":"TextField","t":"class TextField[ROW, V, A](c: Column[ROW, V, A], parser: String => DEF[A]) extends Cell[ROW, V, A]","d":"scalqa/fx/control/table/cell/x/TextField"},
{"l":"api/scalqa/fx/control/table/cell/x/TextField.html","n":"errorPro","t":"val errorPro: ObservableMutable[String]","d":"scalqa/fx/control/table/cell/x/TextField"},
{"l":"api/scalqa/fx/control/table/column.html","n":"scalqa.fx.control.table.column","t":"package scalqa.fx.control.table.column","d":"scalqa/fx/control/table/column"},
{"l":"api/scalqa/fx/control/table/column/_customCell.html","n":"_customCell","t":"trait _customCell[ROW, V, A]","d":"scalqa/fx/control/table/column/_customCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"CustomCell","t":"class CustomCell[T] extends Setup[ROW, V, T]","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"rowFilter","t":"val rowFilter: ROW => Boolean","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"voidDef","t":"val voidDef: Void[T]","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"docDef","t":"val docDef: Doc[T]","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"this","t":"def this(rowFilter: ROW => Boolean)(using voidDef: Void[T], docDef: Doc[T])","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_customCell$CustomCell.html","n":"this","t":"def this(v: EMPTY)","d":"scalqa/fx/control/table/column/_customCell$CustomCell"},
{"l":"api/scalqa/fx/control/table/column/_edit.html","n":"_edit","t":"trait _edit[ROW, V, A]","d":"scalqa/fx/control/table/column/_edit"},
{"l":"api/scalqa/fx/control/table/column/_edit.html","n":"useEditor","t":"def useEditor(e: => Editor, commit: (ROW, A) => Unit, enabled: ROW => Boolean): Unit","d":"scalqa/fx/control/table/column/_edit"},
{"l":"api/scalqa/fx/control/table/column/_edit$Editor.html","n":"Editor","t":"trait Editor extends Cell[ROW, V, A]","d":"scalqa/fx/control/table/column/_edit$Editor"},
{"l":"api/scalqa/fx/control/table/column/_edit$CheckBox.html","n":"CheckBox","t":"class CheckBox extends CheckBox[ROW, V, A] with Editor","d":"scalqa/fx/control/table/column/_edit$CheckBox"},
{"l":"api/scalqa/fx/control/table/column/_edit$ComboBox.html","n":"ComboBox","t":"class ComboBox extends ComboBox[ROW, V, A] with Editor","d":"scalqa/fx/control/table/column/_edit$ComboBox"},
{"l":"api/scalqa/fx/control/table/column/_edit$ComboBox.html","n":"this","t":"def this(initItems: Stream[A])","d":"scalqa/fx/control/table/column/_edit$ComboBox"},
{"l":"api/scalqa/fx/control/table/column/_edit$TextField.html","n":"TextField","t":"class TextField(parser: String => DEF[A]) extends TextField[ROW, V, A] with Editor","d":"scalqa/fx/control/table/column/_edit$TextField"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"_properties","t":"trait _properties[ROW, V, A]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"idPro","t":"def idPro: ObservableMutable[String]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"id","t":"def id: String","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"id_=","t":"def id_=(v: String): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"visiblePro","t":"def visiblePro: OM","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"visible","t":"def visible: Boolean","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"visible_=","t":"def visible_=(b: Boolean): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"labelPro","t":"def labelPro: ObservableMutable[String]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"label","t":"def label: String","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"label_=","t":"def label_=(v: String): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"maxWidthPro","t":"def maxWidthPro: OM","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"maxWidth","t":"def maxWidth: Double","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"maxWidth_=","t":"def maxWidth_=(v: Double): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"minWidthPro","t":"def minWidthPro: OM","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"minWidth","t":"def minWidth: Double","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"minWidth_=","t":"def minWidth_=(v: Double): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"prefWidthPro","t":"def prefWidthPro: OM","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"prefWidth","t":"def prefWidth: Double","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"prefWidth_=","t":"def prefWidth_=(v: Double): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"widthPro","t":"def widthPro: O","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"width","t":"def width: Double","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"width_=","t":"def width_=(v: Double): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"graphicPro","t":"def graphicPro: ObservableMutable[Like]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"graphic","t":"def graphic: Like","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"graphic_=","t":"def graphic_=(g: Like): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"orderingPro","t":"val orderingPro: ObservableMutable[Ordering[A]]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"ordering_=","t":"def ordering_=(o: Ordering[A]): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"sortablePro","t":"val sortablePro: OM","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"sortable","t":"def sortable: Boolean","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_properties.html","n":"sortable_=","t":"def sortable_=(b: Boolean): Unit","d":"scalqa/fx/control/table/column/_properties"},
{"l":"api/scalqa/fx/control/table/column/_value.html","n":"_value","t":"trait _value[ROW, V, A] extends _value[ROW, V, A]","d":"scalqa/fx/control/table/column/_value"},
{"l":"api/scalqa/fx/control/text.html","n":"scalqa.fx.control.text","t":"package scalqa.fx.control.text","d":"scalqa/fx/control/text"},
{"l":"api/scalqa/fx/control/text/Area.html","n":"Area","t":"class Area extends InputControl","d":"scalqa/fx/control/text/Area"},
{"l":"api/scalqa/fx/control/text/Area$.html","n":"Area","t":"object Area","d":"scalqa/fx/control/text/Area$"},
{"l":"api/scalqa/fx/control/text/Area$.html","n":"apply","t":"def apply(): Area","d":"scalqa/fx/control/text/Area$"},
{"l":"api/scalqa/fx/control/text/Area$.html","n":"apply","t":"def apply(v: String): Area","d":"scalqa/fx/control/text/Area$"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"Field","t":"class Field(columnsO: DEF[Int], value: DEF[String]) extends InputControl","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"onAction","t":"def onAction[U](l: () => U): Control","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"onActionRun","t":"def onActionRun[U](l: => U): Control","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"columnCountPro","t":"def columnCountPro: OM","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"columnCount","t":"def columnCount: Int","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field.html","n":"columnCount_=","t":"def columnCount_=(b: Int): Unit","d":"scalqa/fx/control/text/Field"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"Field","t":"object Field","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"apply","t":"def apply(value: String): Field","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"apply","t":"def apply(columns: DEF[Int], value: DEF[String]): Field","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"Number","t":"type Number = Number","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"Number","t":"def Number: Number","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"Password","t":"type Password = Password","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Field$.html","n":"Password","t":"def Password: Password","d":"scalqa/fx/control/text/Field$"},
{"l":"api/scalqa/fx/control/text/Font$.html","n":"Font","t":"object Font extends Opaque[Font, Font]","d":"scalqa/fx/control/text/Font$"},
{"l":"api/scalqa/fx/control/text/Font$.html","n":"apply","t":"def apply(family: String, size: Double): Font","d":"scalqa/fx/control/text/Font$"},
{"l":"api/scalqa/fx/control/text/Font.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/control/text/Font$$TYPE$"},
{"l":"api/scalqa/fx/control/text/Font.html","n":"DEF","t":"type DEF","d":"scalqa/fx/control/text/Font$$TYPE$"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"InputControl","t":"class InputControl(initialTextO: DEF[String]) extends Control","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"size","t":"def size: Int","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"end","t":"def end: Unit","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"+=","t":"def +=(s: String): Unit","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"onChange","t":"def onChange[U](l: Change => U): Unit","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"editablePro","t":"def editablePro: OM","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"editable","t":"def editable: Boolean","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"editable_=","t":"def editable_=(b: Boolean): Unit","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"caretPositionPro","t":"def caretPositionPro: O","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"caretPosition","t":"def caretPosition: Int","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"textPro","t":"def textPro: ObservableMutable[String]","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"text","t":"def text: String","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/control/text/InputControl"},
{"l":"api/scalqa/fx/control/text/InputControl$.html","n":"InputControl","t":"object InputControl","d":"scalqa/fx/control/text/InputControl$"},
{"l":"api/scalqa/fx/control/text/InputControl$.html","n":"Change","t":"type Change = DEF","d":"scalqa/fx/control/text/InputControl$"},
{"l":"api/scalqa/fx/control/text/InputControl$.html","n":"Change","t":"def Change: Change","d":"scalqa/fx/control/text/InputControl$"},
{"l":"api/scalqa/fx/control/text/field.html","n":"scalqa.fx.control.text.field","t":"package scalqa.fx.control.text.field","d":"scalqa/fx/control/text/field"},
{"l":"api/scalqa/fx/control/text/field/Number.html","n":"Number","t":"class Number extends Field","d":"scalqa/fx/control/text/field/Number"},
{"l":"api/scalqa/fx/control/text/field/Number.html","n":"negativeAllowed","t":"var negativeAllowed: Boolean","d":"scalqa/fx/control/text/field/Number"},
{"l":"api/scalqa/fx/control/text/field/Number.html","n":"intResult","t":"def intResult: DEF[Int]","d":"scalqa/fx/control/text/field/Number"},
{"l":"api/scalqa/fx/control/text/field/Number.html","n":"doubleResult","t":"def doubleResult: DEF[Double]","d":"scalqa/fx/control/text/field/Number"},
{"l":"api/scalqa/fx/control/text/field/Number$.html","n":"Number","t":"object Number","d":"scalqa/fx/control/text/field/Number$"},
{"l":"api/scalqa/fx/control/text/field/Number$.html","n":"apply","t":"def apply(value: String): Number","d":"scalqa/fx/control/text/field/Number$"},
{"l":"api/scalqa/fx/control/text/field/Number$.html","n":"apply","t":"def apply(columns: DEF[Int], value: DEF[String]): Number","d":"scalqa/fx/control/text/field/Number$"},
{"l":"api/scalqa/fx/control/text/field/Password.html","n":"Password","t":"class Password extends Field","d":"scalqa/fx/control/text/field/Password"},
{"l":"api/scalqa/fx/control/text/field/Password$.html","n":"Password","t":"object Password","d":"scalqa/fx/control/text/field/Password$"},
{"l":"api/scalqa/fx/control/text/field/Password$.html","n":"apply","t":"def apply(columns: DEF[Int]): Password","d":"scalqa/fx/control/text/field/Password$"},
{"l":"api/scalqa/fx/control/text/inputControl.html","n":"scalqa.fx.control.text.inputControl","t":"package scalqa.fx.control.text.inputControl","d":"scalqa/fx/control/text/inputControl"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"Change","t":"object Change extends Opaque[Change, Change]","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"anchor","t":"def anchor: Int","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"anchor_=","t":"def anchor_=(v: Int): Unit","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"text","t":"def text: String","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"textBefore","t":"def textBefore: String","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"textAfter","t":"def textAfter: String","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"range","t":"def range: Range","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"range_=","t":"def range_=(v: Range): Unit","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"selection","t":"def selection: Range","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"selection_=","t":"def selection_=(v: Range): Unit","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"caret","t":"def caret: Int","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"caret_=","t":"def caret_=(v: Int): Unit","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"isAdd","t":"def isAdd: Boolean","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"isReplace","t":"def isReplace: Boolean","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"isDelete","t":"def isDelete: Boolean","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change$.html","n":"isTextChange","t":"def isTextChange: Boolean","d":"scalqa/fx/control/text/inputControl/Change$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/control/text/inputControl/Change$$TYPE$"},
{"l":"api/scalqa/fx/control/text/inputControl/Change.html","n":"DEF","t":"type DEF","d":"scalqa/fx/control/text/inputControl/Change$$TYPE$"},
{"l":"api/scalqa/fx/control/toggle.html","n":"scalqa.fx.control.toggle","t":"package scalqa.fx.control.toggle","d":"scalqa/fx/control/toggle"},
{"l":"api/scalqa/fx/control/toggle/Button.html","n":"Button","t":"class Button extends Base with Toggle","d":"scalqa/fx/control/toggle/Button"},
{"l":"api/scalqa/fx/control/toggle/Button$.html","n":"Button","t":"object Button","d":"scalqa/fx/control/toggle/Button$"},
{"l":"api/scalqa/fx/control/toggle/Button$.html","n":"apply","t":"def apply(s: String): Button","d":"scalqa/fx/control/toggle/Button$"},
{"l":"api/scalqa/fx/control/toggle/Button$.html","n":"apply","t":"def apply(s: String, action: => Unit): Button","d":"scalqa/fx/control/toggle/Button$"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"Group","t":"class Group","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"items","t":"val items: Mutable[Toggle]","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"add","t":"def add(v: Toggle): Unit","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"select","t":"def select(v: Toggle): Unit","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"selectedPro","t":"def selectedPro: Observable[Toggle]","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group.html","n":"selected","t":"def selected: Toggle","d":"scalqa/fx/control/toggle/Group"},
{"l":"api/scalqa/fx/control/toggle/Group$real$.html","n":"real","t":"object real extends ToggleGroup","d":"scalqa/fx/control/toggle/Group$real$"},
{"l":"api/scalqa/fx/control/toggle/Group$.html","n":"Group","t":"object Group","d":"scalqa/fx/control/toggle/Group$"},
{"l":"api/scalqa/fx/control/toggle/Group$.html","n":"apply","t":"def apply(): Group","d":"scalqa/fx/control/toggle/Group$"},
{"l":"api/scalqa/fx/control/toggle/Group$.html","n":"apply","t":"def apply(b: Button*): Group","d":"scalqa/fx/control/toggle/Group$"},
{"l":"api/scalqa/fx/control/toggle/Group$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[ToggleGroup, Group]","d":"scalqa/fx/control/toggle/Group$"},
{"l":"api/scalqa/fx/scene.html","n":"scalqa.fx.scene","t":"package scalqa.fx.scene","d":"scalqa/fx/scene"},
{"l":"api/scalqa/fx/scene/Application.html","n":"Application","t":"class Application(width: Opt, height: Opt, title: String, show: Boolean, verbose: Boolean)","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"this","t":"def this(title: String, show: Boolean, verbose: Boolean)","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"this","t":"def this(title: String, show: Boolean)","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"this","t":"def this(title: String)","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"this","t":"def this()","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"isStopped","t":"def isStopped: Boolean","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"stage","t":"val stage: Stage","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"scene","t":"val scene: Scene","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application.html","n":"main","t":"def main(sa: Array[String]): Unit","d":"scalqa/fx/scene/Application"},
{"l":"api/scalqa/fx/scene/Application$.html","n":"Application","t":"object Application","d":"scalqa/fx/scene/Application$"},
{"l":"api/scalqa/fx/scene/Application$.html","n":"Thread","t":"def Thread: Thread","d":"scalqa/fx/scene/Application$"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"Chart","t":"class Chart extends Region","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"animatedPro","t":"def animatedPro: OM","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"animated","t":"def animated: Boolean","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"animated_=","t":"def animated_=(v: Boolean): Unit","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"legendVisiblePro","t":"def legendVisiblePro: OM","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"legendVisible","t":"def legendVisible: Boolean","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"legendVisible_=","t":"def legendVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"titlePro","t":"def titlePro: ObservableMutable[String]","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"title","t":"def title: String","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart.html","n":"title_=","t":"def title_=(v: String): Unit","d":"scalqa/fx/scene/Chart"},
{"l":"api/scalqa/fx/scene/Chart$.html","n":"Chart","t":"object Chart","d":"scalqa/fx/scene/Chart$"},
{"l":"api/scalqa/fx/scene/Chart$.html","n":"Axis","t":"type Axis[A] = Axis[A]","d":"scalqa/fx/scene/Chart$"},
{"l":"api/scalqa/fx/scene/Chart$.html","n":"Axis","t":"def Axis: Axis","d":"scalqa/fx/scene/Chart$"},
{"l":"api/scalqa/fx/scene/Chart$.html","n":"XY","t":"type XY[X, Z] = XY[X, Z]","d":"scalqa/fx/scene/Chart$"},
{"l":"api/scalqa/fx/scene/Chart$.html","n":"XY","t":"def XY: XY","d":"scalqa/fx/scene/Chart$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"Image","t":"object Image extends Opaque[Image, Image]","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"apply","t":"def apply(v: Url): Image","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"implicitFromJava","t":"def implicitFromJava(v: Image): Image","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"widthPro","t":"def widthPro: O","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"width","t":"def width: Double","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"heightPro","t":"def heightPro: O","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"height","t":"def height: Double","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image$.html","n":"isError","t":"def isError: Boolean","d":"scalqa/fx/scene/Image$"},
{"l":"api/scalqa/fx/scene/Image.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/scene/Image$$TYPE$"},
{"l":"api/scalqa/fx/scene/Image.html","n":"DEF","t":"type DEF","d":"scalqa/fx/scene/Image$$TYPE$"},
{"l":"api/scalqa/fx/scene/Paint$.html","n":"Paint","t":"object Paint extends Opaque[Paint, Paint]","d":"scalqa/fx/scene/Paint$"},
{"l":"api/scalqa/fx/scene/Paint$.html","n":"Color","t":"type Color = DEF","d":"scalqa/fx/scene/Paint$"},
{"l":"api/scalqa/fx/scene/Paint$.html","n":"Color","t":"def Color: Color","d":"scalqa/fx/scene/Paint$"},
{"l":"api/scalqa/fx/scene/Paint.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/scene/Paint$$TYPE$"},
{"l":"api/scalqa/fx/scene/Paint.html","n":"DEF","t":"type DEF","d":"scalqa/fx/scene/Paint$$TYPE$"},
{"l":"api/scalqa/fx/scene/Pane.html","n":"Pane","t":"class Pane extends Region","d":"scalqa/fx/scene/Pane"},
{"l":"api/scalqa/fx/scene/Pane.html","n":"children","t":"val children: Mutable[Like]","d":"scalqa/fx/scene/Pane"},
{"l":"api/scalqa/fx/scene/Pane.html","n":"add","t":"def add(n: Like): Unit","d":"scalqa/fx/scene/Pane"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Pane","t":"object Pane","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"apply","t":"def apply(e1: String, e2: Like): Pane","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"apply","t":"def apply(e1: Like, e2: Like): Pane","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Split","t":"type Split = Split","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Split","t":"def Split: Split","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Tab","t":"type Tab = Tab","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Tab","t":"def Tab: Tab","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Border","t":"type Border = Border","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Border","t":"def Border: Border","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Flow","t":"type Flow = Flow","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Flow","t":"def Flow: Flow","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Grid","t":"type Grid = Grid","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Grid","t":"def Grid: Grid","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"HorizontalBox","t":"type HorizontalBox = HorizontalBox","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"HorizontalBox","t":"def HorizontalBox: HorizontalBox","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"Stack","t":"type Stack = Stack","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"VerticalBox","t":"type VerticalBox = VerticalBox","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Pane$.html","n":"VerticalBox","t":"def VerticalBox: VerticalBox","d":"scalqa/fx/scene/Pane$"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"Shape","t":"class Shape extends Node","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"fillPro","t":"def fillPro: ObservableMutable[Paint]","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"fill","t":"def fill: Paint","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"fill_=","t":"def fill_=(p: Paint): Unit","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"strokePro","t":"def strokePro: ObservableMutable[Paint]","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"stroke","t":"def stroke: Paint","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape.html","n":"stroke_=","t":"def stroke_=(p: Paint): Unit","d":"scalqa/fx/scene/Shape"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Shape","t":"object Shape","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Path","t":"type Path = Path","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Path","t":"def Path: Path","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Circle","t":"type Circle = Circle","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Circle","t":"def Circle: Circle","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Line","t":"type Line = Line","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Shape$.html","n":"Line","t":"def Line: Line","d":"scalqa/fx/scene/Shape$"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"Stage","t":"class Stage(stage: DEF[Stage]) extends Window","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"icons","t":"val icons: Mutable[Image]","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"show","t":"def show: Unit","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"titlePro","t":"def titlePro: ObservableMutable[String]","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"title","t":"def title: String","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage.html","n":"title_=","t":"def title_=(v: String): Unit","d":"scalqa/fx/scene/Stage"},
{"l":"api/scalqa/fx/scene/Stage$.html","n":"Stage","t":"object Stage","d":"scalqa/fx/scene/Stage$"},
{"l":"api/scalqa/fx/scene/Stage$.html","n":"apply","t":"def apply(titleOpt: DEF[String], w: Int, h: Int, e: Like): Stage","d":"scalqa/fx/scene/Stage$"},
{"l":"api/scalqa/fx/scene/Window.html","n":"Window","t":"class Window extends Gui","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"scene","t":"def scene: Scene","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"hide","t":"def hide: Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"centerOnScreen","t":"def centerOnScreen: Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"widthPro","t":"val widthPro: O","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"width","t":"def width: Double","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"width_=","t":"def width_=(b: Double): Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"heightPro","t":"val heightPro: O","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"height","t":"def height: Double","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"height_=","t":"def height_=(b: Double): Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"xPro","t":"val xPro: O","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"x_=","t":"def x_=(b: Double): Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"yPro","t":"val yPro: O","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"y_=","t":"def y_=(b: Double): Unit","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"onHiding","t":"def onHiding[U](l: () => U): Control","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"onHidden","t":"def onHidden[U](l: () => U): Control","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"onShowing","t":"def onShowing[U](l: () => U): Control","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window.html","n":"onShown","t":"def onShown[U](l: () => U): Control","d":"scalqa/fx/scene/Window"},
{"l":"api/scalqa/fx/scene/Window$.html","n":"Window","t":"object Window","d":"scalqa/fx/scene/Window$"},
{"l":"api/scalqa/fx/scene/Window$.html","n":"apply","t":"def apply(r: Window): Window","d":"scalqa/fx/scene/Window$"},
{"l":"api/scalqa/fx/scene/application.html","n":"scalqa.fx.scene.application","t":"package scalqa.fx.scene.application","d":"scalqa/fx/scene/application"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"Thread","t":"object Thread extends ExecutionContext","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"is","t":"def is: Boolean","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"apply","t":"def apply(fun: => Unit): Unit","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"execute","t":"def execute(v: Runnable): Unit","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"reportFailure","t":"def reportFailure(cause: Throwable): Unit","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"scheduleIn","t":"def scheduleIn(delay: Length, f: => Unit): Control","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"scheduleEvery","t":"def scheduleEvery(period: Length, f: => Unit): Control","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/application/Thread$.html","n":"scheduleEveryIn","t":"def scheduleEveryIn(delay: Length, period: Length, f: => Unit): Control","d":"scalqa/fx/scene/application/Thread$"},
{"l":"api/scalqa/fx/scene/chart.html","n":"scalqa.fx.scene.chart","t":"package scalqa.fx.scene.chart","d":"scalqa/fx/scene/chart"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"Axis","t":"class Axis[A] extends Region with _properties","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"VALUE","t":"type VALUE","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"valueMap","t":"def valueMap: TwoWayFunction[A, VALUE]","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"apply","t":"def apply(v: A): Double","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis.html","n":"ticks","t":"def ticks: Idx[Tick[A]]","d":"scalqa/fx/scene/chart/Axis"},
{"l":"api/scalqa/fx/scene/chart/Axis$.html","n":"Axis","t":"object Axis","d":"scalqa/fx/scene/chart/Axis$"},
{"l":"api/scalqa/fx/scene/chart/Axis$.html","n":"X","t":"def X: X","d":"scalqa/fx/scene/chart/Axis$"},
{"l":"api/scalqa/fx/scene/chart/Axis$.html","n":"Tick","t":"type Tick[A] = Tick[A]","d":"scalqa/fx/scene/chart/Axis$"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"XY","t":"class XY[X, Y] extends Chart with _properties[X, Y]","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"axisX","t":"val axisX: Axis[X]","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"axisY","t":"val axisY: Axis[Y]","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"SERIES","t":"type SERIES <: SeriesBase","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"ITEM","t":"type ITEM <: ItemBase","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY.html","n":"data","t":"val data: Mutable[SERIES]","d":"scalqa/fx/scene/chart/XY"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"SeriesBase","t":"class SeriesBase","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"chart","t":"def chart: XY[X, Y]","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"name","t":"def name: String","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"name_=","t":"def name_=(v: String): Unit","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"items","t":"def items: Observable[ITEM]","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase.html","n":"items_=","t":"def items_=(l: Observable[ITEM]): Unit","d":"scalqa/fx/scene/chart/XY$SeriesBase"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase$.html","n":"SeriesBase","t":"object SeriesBase","d":"scalqa/fx/scene/chart/XY$SeriesBase$"},
{"l":"api/scalqa/fx/scene/chart/XY$SeriesBase$.html","n":"apply","t":"def apply(s: Series[_, _]): SERIES","d":"scalqa/fx/scene/chart/XY$SeriesBase$"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"ItemBase","t":"class ItemBase extends Doc","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"this","t":"def this(xPar: X, yPar: Y)","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"this","t":"def this(p: (X, Y))","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"chart","t":"def chart: XY[X, Y]","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"x","t":"def x: X","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"x_=","t":"def x_=(v: X): Unit","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"y","t":"def y: Y","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"y_=","t":"def y_=(v: Y): Unit","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"xPos","t":"def xPos: Double","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"yPos","t":"def yPos: Double","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/scene/chart/XY$ItemBase"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase$.html","n":"ItemBase","t":"object ItemBase","d":"scalqa/fx/scene/chart/XY$ItemBase$"},
{"l":"api/scalqa/fx/scene/chart/XY$ItemBase$.html","n":"apply","t":"def apply(d: Data[_, _]): ITEM","d":"scalqa/fx/scene/chart/XY$ItemBase$"},
{"l":"api/scalqa/fx/scene/chart/XY$.html","n":"XY","t":"object XY","d":"scalqa/fx/scene/chart/XY$"},
{"l":"api/scalqa/fx/scene/chart/XY$.html","n":"X","t":"val X: X","d":"scalqa/fx/scene/chart/XY$"},
{"l":"api/scalqa/fx/scene/chart/axis.html","n":"scalqa.fx.scene.chart.axis","t":"package scalqa.fx.scene.chart.axis","d":"scalqa/fx/scene/chart/axis"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"_properties","t":"trait _properties","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"animatedPro","t":"def animatedPro: OM","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"animated","t":"def animated: Boolean","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"animated_=","t":"def animated_=(b: Boolean): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"labelPro","t":"def labelPro: ObservableMutable[String]","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"label","t":"def label: String","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"label_=","t":"def label_=(v: String): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksGapPro","t":"def ticksGapPro: OM","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksGap","t":"def ticksGap: Double","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksGap_=","t":"def ticksGap_=(v: Double): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksRotationPro","t":"def ticksRotationPro: OM","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksRotation","t":"def ticksRotation: Double","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksRotation_=","t":"def ticksRotation_=(v: Double): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksVisiblePro","t":"def ticksVisiblePro: OM","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksVisible","t":"def ticksVisible: Boolean","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksVisible_=","t":"def ticksVisible_=(b: Boolean): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksMarkVisiblePro","t":"def ticksMarkVisiblePro: OM","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksMarkVisible","t":"def ticksMarkVisible: Boolean","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksMarkVisible_=","t":"def ticksMarkVisible_=(b: Boolean): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFillPro","t":"def ticksFillPro: ObservableMutable[Paint]","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFill","t":"def ticksFill: Paint","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFill_=","t":"def ticksFill_=(v: Paint): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFontPro","t":"def ticksFontPro: ObservableMutable[Font]","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFont","t":"def ticksFont: Font","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/_properties.html","n":"ticksFont_=","t":"def ticksFont_=(v: Font): Unit","d":"scalqa/fx/scene/chart/axis/_properties"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"Tick","t":"class Tick[A] extends Doc","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"label","t":"def label: String","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"position","t":"def position: Double","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"visible","t":"def visible: Boolean","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"value","t":"def value: A","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/Tick.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/scene/chart/axis/Tick"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"X","t":"object X","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Custom","t":"type Custom[A] = Custom[A]","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Custom","t":"def Custom: Custom","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Category","t":"type Category = Category","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Doubles","t":"type Doubles = Doubles","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Ints","t":"type Ints = Ints","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Numbers","t":"type Numbers[A] = Numbers[A]","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Value","t":"type Value[A] = Value[A]","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Time","t":"type Time = Time","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/X$.html","n":"Time","t":"def Time: Time","d":"scalqa/fx/scene/chart/axis/X$"},
{"l":"api/scalqa/fx/scene/chart/axis/x.html","n":"scalqa.fx.scene.chart.axis.x","t":"package scalqa.fx.scene.chart.axis.x","d":"scalqa/fx/scene/chart/axis/x"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"Category","t":"class Category extends Axis[String]","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"this","t":"def this(name: String)","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"VALUE","t":"type VALUE = String","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"list","t":"val list: Mutable[String]","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"valueMap","t":"def valueMap: TwoWayFunction[String, VALUE]","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Category.html","n":"ordering","t":"val ordering: Ordering[String]","d":"scalqa/fx/scene/chart/axis/x/Category"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom.html","n":"Custom","t":"class Custom[A](m: TwoWayFunction[A, Double]) extends Value[A]","d":"scalqa/fx/scene/chart/axis/x/Custom"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom.html","n":"this","t":"def this(name: String, m: TwoWayFunction[A, Double])","d":"scalqa/fx/scene/chart/axis/x/Custom"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom.html","n":"setup","t":"val setup: Setup","d":"scalqa/fx/scene/chart/axis/x/Custom"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"Setup","t":"class Setup","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"unit","t":"var unit: Double","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"forceZeroInRange","t":"var forceZeroInRange: Boolean","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"formatPattern","t":"var formatPattern: String","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"label","t":"def label(v: A): String","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"tickStream","t":"def tickStream(r: Range[A]): Stream[A]","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"minorTickStream","t":"def minorTickStream(r: Range[A], minorTickCount: Int): Stream[A]","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"scope","t":"def scope(r: Range[A], totalSize: Double, labelSize: Double): Range[A]","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"labelSize","t":"def labelSize(labelText: String, rotation: Double): Dimension2D","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$Setup.html","n":"side","t":"def side: Side","d":"scalqa/fx/scene/chart/axis/x/Custom$Setup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$.html","n":"Custom","t":"object Custom","d":"scalqa/fx/scene/chart/axis/x/Custom$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Custom$.html","n":"Range","t":"type Range[A] = Range[A]","d":"scalqa/fx/scene/chart/axis/x/Custom$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Doubles.html","n":"Doubles","t":"class Doubles extends Numbers[Double]","d":"scalqa/fx/scene/chart/axis/x/Doubles"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Doubles.html","n":"this","t":"def this(name: String)","d":"scalqa/fx/scene/chart/axis/x/Doubles"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Ints.html","n":"Ints","t":"class Ints extends Numbers[Int]","d":"scalqa/fx/scene/chart/axis/x/Ints"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Ints.html","n":"this","t":"def this(name: String)","d":"scalqa/fx/scene/chart/axis/x/Ints"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"Numbers","t":"class Numbers[A](m: TwoWayFunction[A, Double]) extends Value[A]","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"this","t":"def this(name: String, m: TwoWayFunction[A, Double])","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"forceZeroInRangePro","t":"def forceZeroInRangePro: OM","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"forceZeroInRange","t":"def forceZeroInRange: Boolean","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"forceZeroInRange_=","t":"def forceZeroInRange_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"tickUnitPro","t":"def tickUnitPro: OM","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"tickUnit","t":"def tickUnit: Double","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Numbers.html","n":"tickUnit_=","t":"def tickUnit_=(v: Double): Unit","d":"scalqa/fx/scene/chart/axis/x/Numbers"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time.html","n":"Time","t":"class Time extends Custom[Time]","d":"scalqa/fx/scene/chart/axis/x/Time"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time.html","n":"this","t":"def this(name: String)","d":"scalqa/fx/scene/chart/axis/x/Time"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time.html","n":"setup","t":"val setup: TimeSetup","d":"scalqa/fx/scene/chart/axis/x/Time"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time$TimeSetup.html","n":"TimeSetup","t":"class TimeSetup extends Setup","d":"scalqa/fx/scene/chart/axis/x/Time$TimeSetup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time$TimeSetup.html","n":"timeGauge","t":"var timeGauge: Gauge","d":"scalqa/fx/scene/chart/axis/x/Time$TimeSetup"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time$.html","n":"Time","t":"object Time","d":"scalqa/fx/scene/chart/axis/x/Time$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time$.html","n":"Gauge","t":"type Gauge = Gauge","d":"scalqa/fx/scene/chart/axis/x/Time$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Time$.html","n":"Gauge","t":"def Gauge: Gauge","d":"scalqa/fx/scene/chart/axis/x/Time$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"Value","t":"class Value[A](val map: TwoWayFunction[A, Double]) extends Axis[A]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"map","t":"val map: TwoWayFunction[A, Double]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"VALUE","t":"type VALUE = Number","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"REAL","t":"type REAL <: ValueAxis[Number]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"valueMap","t":"val valueMap: TwoWayFunction[A, Number]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"lowerBoundPro","t":"def lowerBoundPro: ObservableMutable[A]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"lowerBound","t":"def lowerBound: A","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"lowerBound_=","t":"def lowerBound_=(v: A): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"upperBoundPro","t":"def upperBoundPro: ObservableMutable[A]","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"upperBound","t":"def upperBound: A","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"upperBound_=","t":"def upperBound_=(v: A): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickCountPro","t":"def minorTickCountPro: OM","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickCount","t":"def minorTickCount: Int","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickCount_=","t":"def minorTickCount_=(v: Int): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickLengthPro","t":"def minorTickLengthPro: OM","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickLength","t":"def minorTickLength: Double","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickLength_=","t":"def minorTickLength_=(v: Double): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickVisiblePro","t":"def minorTickVisiblePro: OM","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickVisible","t":"def minorTickVisible: Boolean","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"minorTickVisible_=","t":"def minorTickVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"scalePro","t":"def scalePro: O","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"scale","t":"def scale: Double","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/Value.html","n":"scale_=","t":"def scale_=(v: Double): Unit","d":"scalqa/fx/scene/chart/axis/x/Value"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom.html","n":"scalqa.fx.scene.chart.axis.x.custom","t":"package scalqa.fx.scene.chart.axis.x.custom","d":"scalqa/fx/scene/chart/axis/x/custom"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"Range","t":"class Range[A](val start: A, val end: A, val unit: Double, val format: String, val scale: Double) extends Doc","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"start","t":"val start: A","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"end","t":"val end: A","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"unit","t":"val unit: Double","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"format","t":"val format: String","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"transform","t":"def transform[B](m: A => B): Range[B]","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"isSingularity","t":"def isSingularity: Boolean","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/custom/Range.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/scene/chart/axis/x/custom/Range"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time.html","n":"scalqa.fx.scene.chart.axis.x.time","t":"package scalqa.fx.scene.chart.axis.x.time","d":"scalqa/fx/scene/chart/axis/x/time"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"Gauge","t":"class Gauge(val length: Length, val minorCount: Int) extends Tag","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"length","t":"val length: Length","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"minorCount","t":"val minorCount: Int","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"roundPeriod","t":"def roundPeriod(p: Period): Period","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"label","t":"def label(t: Time, first: Boolean): String","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge.html","n":"labelSize","t":"def labelSize: Int","d":"scalqa/fx/scene/chart/axis/x/time/Gauge"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge$.html","n":"Gauge","t":"object Gauge extends Setup[Gauge]","d":"scalqa/fx/scene/chart/axis/x/time/Gauge$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge$.html","n":"apply","t":"def apply(tl: Length, minorCount: Int): Gauge","d":"scalqa/fx/scene/chart/axis/x/time/Gauge$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge$.html","n":"months","t":"def months(months: Int, minorCount: Int): Gauge","d":"scalqa/fx/scene/chart/axis/x/time/Gauge$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge$.html","n":"years","t":"def years(years: Int, minorCount: Int): Gauge","d":"scalqa/fx/scene/chart/axis/x/time/Gauge$"},
{"l":"api/scalqa/fx/scene/chart/axis/x/time/Gauge$.html","n":"standardStream","t":"def standardStream: Stream[Gauge]","d":"scalqa/fx/scene/chart/axis/x/time/Gauge$"},
{"l":"api/scalqa/fx/scene/chart/xy.html","n":"scalqa.fx.scene.chart.xy","t":"package scalqa.fx.scene.chart.xy","d":"scalqa/fx/scene/chart/xy"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"_properties","t":"trait _properties[X, Y]","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeColumnFillVisiblePro","t":"def alternativeColumnFillVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeColumnFillVisible","t":"def alternativeColumnFillVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeColumnFillVisible_=","t":"def alternativeColumnFillVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeRowFillVisiblePro","t":"def alternativeRowFillVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeRowFillVisible","t":"def alternativeRowFillVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"alternativeRowFillVisible_=","t":"def alternativeRowFillVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalGridLinesVisiblePro","t":"def horizontalGridLinesVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalGridLinesVisible","t":"def horizontalGridLinesVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalGridLinesVisible_=","t":"def horizontalGridLinesVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalZeroLineVisiblePro","t":"def horizontalZeroLineVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalZeroLineVisible","t":"def horizontalZeroLineVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"horizontalZeroLineVisible_=","t":"def horizontalZeroLineVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalGridLinesVisiblePro","t":"def verticalGridLinesVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalGridLinesVisible","t":"def verticalGridLinesVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalGridLinesVisible_=","t":"def verticalGridLinesVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalZeroLineVisiblePro","t":"def verticalZeroLineVisiblePro: OM","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalZeroLineVisible","t":"def verticalZeroLineVisible: Boolean","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/_properties.html","n":"verticalZeroLineVisible_=","t":"def verticalZeroLineVisible_=(v: Boolean): Unit","d":"scalqa/fx/scene/chart/xy/_properties"},
{"l":"api/scalqa/fx/scene/chart/xy/X$.html","n":"X","t":"object X","d":"scalqa/fx/scene/chart/xy/X$"},
{"l":"api/scalqa/fx/scene/chart/xy/X$.html","n":"Basic","t":"type Basic[X, Y, XA <: Axis[X], YA <: Axis[Y]] = Basic[X, Y, XA, YA]","d":"scalqa/fx/scene/chart/xy/X$"},
{"l":"api/scalqa/fx/scene/chart/xy/X$.html","n":"Lines","t":"type Lines[X, Y] = Lines[X, Y]","d":"scalqa/fx/scene/chart/xy/X$"},
{"l":"api/scalqa/fx/scene/chart/xy/x.html","n":"scalqa.fx.scene.chart.xy.x","t":"package scalqa.fx.scene.chart.xy.x","d":"scalqa/fx/scene/chart/xy/x"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"Basic","t":"class Basic[X, Y, XA <: Axis[X], YA <: Axis[Y]](val axisX: XA, val axisY: YA) extends XY[X, Y]","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"axisX","t":"val axisX: XA","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"axisY","t":"val axisY: YA","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"ITEM","t":"type ITEM <: Item","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"SERIES","t":"type SERIES <: Series","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic.html","n":"itemStream","t":"def itemStream: Stream[ITEM]","d":"scalqa/fx/scene/chart/xy/x/Basic"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Item.html","n":"Item","t":"class Item(xPar: X, yPar: Y) extends ItemBase","d":"scalqa/fx/scene/chart/xy/x/Basic$Item"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Item.html","n":"this","t":"def this(p: (X, Y))","d":"scalqa/fx/scene/chart/xy/x/Basic$Item"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Item.html","n":"node","t":"val node: Node","d":"scalqa/fx/scene/chart/xy/x/Basic$Item"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Item.html","n":"isVisible","t":"def isVisible: Boolean","d":"scalqa/fx/scene/chart/xy/x/Basic$Item"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Series.html","n":"Series","t":"class Series(name: String, l: Observable[ITEM]) extends SeriesBase","d":"scalqa/fx/scene/chart/xy/x/Basic$Series"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Series.html","n":"this","t":"def this()","d":"scalqa/fx/scene/chart/xy/x/Basic$Series"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Basic$Series.html","n":"node","t":"val node: Node","d":"scalqa/fx/scene/chart/xy/x/Basic$Series"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines.html","n":"Lines","t":"class Lines[X, Y](xParam: Axis[X], yParam: Axis[Y]) extends XY[X, Y]","d":"scalqa/fx/scene/chart/xy/x/Lines"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines.html","n":"ITEM","t":"type ITEM = ItemBase","d":"scalqa/fx/scene/chart/xy/x/Lines"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines.html","n":"SERIES","t":"type SERIES = Line","d":"scalqa/fx/scene/chart/xy/x/Lines"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines$Line.html","n":"Line","t":"class Line(nameO: DEF[String], val items: ObservableMutable[ITEM]) extends SeriesBase with Add[(X, Y)]","d":"scalqa/fx/scene/chart/xy/x/Lines$Line"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines$Line.html","n":"items","t":"val items: ObservableMutable[ITEM]","d":"scalqa/fx/scene/chart/xy/x/Lines$Line"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines$Line.html","n":"this","t":"def this(name: String, s: Stream[(X, Y)])","d":"scalqa/fx/scene/chart/xy/x/Lines$Line"},
{"l":"api/scalqa/fx/scene/chart/xy/x/Lines$Line.html","n":"add","t":"def add(t: (X, Y)): Unit","d":"scalqa/fx/scene/chart/xy/x/Lines$Line"},
{"l":"api/scalqa/fx/scene/paint.html","n":"scalqa.fx.scene.paint","t":"package scalqa.fx.scene.paint","d":"scalqa/fx/scene/paint"},
{"l":"api/scalqa/fx/scene/paint/Color$.html","n":"Color","t":"object Color extends Opaque[Color, Color]","d":"scalqa/fx/scene/paint/Color$"},
{"l":"api/scalqa/fx/scene/paint/Color$.html","n":"apply","t":"def apply(red: Int, green: Int, blue: Int): Color","d":"scalqa/fx/scene/paint/Color$"},
{"l":"api/scalqa/fx/scene/paint/Color.html","n":"TYPE","t":"object TYPE","d":"scalqa/fx/scene/paint/Color$$TYPE$"},
{"l":"api/scalqa/fx/scene/paint/Color.html","n":"DEF","t":"type DEF","d":"scalqa/fx/scene/paint/Color$$TYPE$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Named","t":"object Named","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"AliceBlue","t":"def AliceBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"AntiqueWhite","t":"def AntiqueWhite: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Aqua","t":"def Aqua: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"AquaMarine","t":"def AquaMarine: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Azure","t":"def Azure: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Beige","t":"def Beige: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Bisque","t":"def Bisque: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Black","t":"def Black: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"BlanchedAlmond","t":"def BlanchedAlmond: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Blue","t":"def Blue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"BlueViolet","t":"def BlueViolet: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Brown","t":"def Brown: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"BurlyWood","t":"def BurlyWood: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"CadetBlue","t":"def CadetBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"ChartReuse","t":"def ChartReuse: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Chocolate","t":"def Chocolate: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Coral","t":"def Coral: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"CornFlowerBlue","t":"def CornFlowerBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"CornSilk","t":"def CornSilk: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Crimson","t":"def Crimson: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Cyan","t":"def Cyan: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkBlue","t":"def DarkBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkCyan","t":"def DarkCyan: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkGoldenRod","t":"def DarkGoldenRod: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkGrey","t":"def DarkGrey: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkGreen","t":"def DarkGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkKhaki","t":"def DarkKhaki: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkMagenta","t":"def DarkMagenta: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkOliveGreen","t":"def DarkOliveGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkOrange","t":"def DarkOrange: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkOrchid","t":"def DarkOrchid: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkRed","t":"def DarkRed: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkSalmon","t":"def DarkSalmon: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkSeaGreen","t":"def DarkSeaGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkSlateBlue","t":"def DarkSlateBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkSlateGrey","t":"def DarkSlateGrey: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkTurquoise","t":"def DarkTurquoise: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DarkViolet","t":"def DarkViolet: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DeepPink","t":"def DeepPink: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DeepSkyBlue","t":"def DeepSkyBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DimGrey","t":"def DimGrey: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"DodgeBlue","t":"def DodgeBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"FireBrick","t":"def FireBrick: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"FloralWhite","t":"def FloralWhite: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"ForestGreen","t":"def ForestGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Fuchsia","t":"def Fuchsia: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Gainsboro","t":"def Gainsboro: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"GhostWhite","t":"def GhostWhite: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Gold","t":"def Gold: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"GoldenRod","t":"def GoldenRod: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Gray","t":"def Gray: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Green","t":"def Green: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"GreenYellow","t":"def GreenYellow: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"HoneyDew","t":"def HoneyDew: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"HotPink","t":"def HotPink: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"IndianRed","t":"def IndianRed: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Indigo","t":"def Indigo: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Ivory","t":"def Ivory: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Khaki","t":"def Khaki: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Lavender","t":"def Lavender: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LavenderBlush","t":"def LavenderBlush: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LawnGreen","t":"def LawnGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LemonChiffon","t":"def LemonChiffon: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightBlue","t":"def LightBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightCoral","t":"def LightCoral: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightCyan","t":"def LightCyan: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightGoldenYellow","t":"def LightGoldenYellow: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightGray","t":"def LightGray: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightGreen","t":"def LightGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightPink","t":"def LightPink: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightSalmon","t":"def LightSalmon: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightSeaGreen","t":"def LightSeaGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightSkyBlue","t":"def LightSkyBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightSlateGray","t":"def LightSlateGray: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightSteelBlue","t":"def LightSteelBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LightYellow","t":"def LightYellow: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Lime","t":"def Lime: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"LimeGreen","t":"def LimeGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Idxn","t":"def Idxn: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Magenta","t":"def Magenta: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Maroon","t":"def Maroon: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumAquaMarine","t":"def MediumAquaMarine: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumBlue","t":"def MediumBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumOrchid","t":"def MediumOrchid: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumPurple","t":"def MediumPurple: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumSeaGreen","t":"def MediumSeaGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumSlateBlue","t":"def MediumSlateBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumSpringGreen","t":"def MediumSpringGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumTurquoise","t":"def MediumTurquoise: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MediumVioletRed","t":"def MediumVioletRed: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MidnightBlue","t":"def MidnightBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MintCream","t":"def MintCream: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"MistyRose","t":"def MistyRose: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Moccasin","t":"def Moccasin: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"NavajoWhite","t":"def NavajoWhite: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Navy","t":"def Navy: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"OldLace","t":"def OldLace: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Olive","t":"def Olive: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"OliveDrab","t":"def OliveDrab: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Orange","t":"def Orange: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"OrangeRed","t":"def OrangeRed: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Orchid","t":"def Orchid: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PaleGoldenRod","t":"def PaleGoldenRod: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PaleGreen","t":"def PaleGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PaleTurquoise","t":"def PaleTurquoise: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PaleVioletRed","t":"def PaleVioletRed: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PapayaWhip","t":"def PapayaWhip: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PeachPuff","t":"def PeachPuff: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Peru","t":"def Peru: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Pink","t":"def Pink: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Plum","t":"def Plum: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"PowderBlue","t":"def PowderBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Purple","t":"def Purple: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Red","t":"def Red: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"RosyBrown","t":"def RosyBrown: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"RoyalBlue","t":"def RoyalBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SaddleBrown","t":"def SaddleBrown: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Salmon","t":"def Salmon: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SandyBrown","t":"def SandyBrown: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SeaGreen","t":"def SeaGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SeaShell","t":"def SeaShell: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Sienna","t":"def Sienna: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Silver","t":"def Silver: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SkyBlue","t":"def SkyBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SlateBlue","t":"def SlateBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SlateGray","t":"def SlateGray: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Snow","t":"def Snow: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SpringGreen","t":"def SpringGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"SteelBlue","t":"def SteelBlue: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Tan","t":"def Tan: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Teal","t":"def Teal: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Thistle","t":"def Thistle: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Tomato","t":"def Tomato: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Transparent","t":"def Transparent: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Turquoise","t":"def Turquoise: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Violet","t":"def Violet: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Wheat","t":"def Wheat: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"White","t":"def White: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"WhiteSmoke","t":"def WhiteSmoke: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"Yellow","t":"def Yellow: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/paint/Color$$Named$.html","n":"YellowGreen","t":"def YellowGreen: Color","d":"scalqa/fx/scene/paint/Color$$Named$"},
{"l":"api/scalqa/fx/scene/pane.html","n":"scalqa.fx.scene.pane","t":"package scalqa.fx.scene.pane","d":"scalqa/fx/scene/pane"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"Border","t":"class Border extends Pane","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"bottomPro","t":"def bottomPro: ObservableMutable[Node]","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"bottom","t":"def bottom: Node","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"bottom_=","t":"def bottom_=(n: Node): Unit","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"topPro","t":"def topPro: ObservableMutable[Node]","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"top","t":"def top: Node","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"top_=","t":"def top_=(n: Node): Unit","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"leftPro","t":"def leftPro: ObservableMutable[Node]","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"left","t":"def left: Node","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"left_=","t":"def left_=(n: Node): Unit","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"rightPro","t":"def rightPro: ObservableMutable[Node]","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"right","t":"def right: Node","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"right_=","t":"def right_=(n: Node): Unit","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"centerPro","t":"def centerPro: ObservableMutable[Node]","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"center","t":"def center: Node","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border.html","n":"center_=","t":"def center_=(n: Node): Unit","d":"scalqa/fx/scene/pane/Border"},
{"l":"api/scalqa/fx/scene/pane/Border$.html","n":"Border","t":"object Border","d":"scalqa/fx/scene/pane/Border$"},
{"l":"api/scalqa/fx/scene/pane/Border$.html","n":"apply","t":"def apply(): Border","d":"scalqa/fx/scene/pane/Border$"},
{"l":"api/scalqa/fx/scene/pane/Border$.html","n":"node","t":"def node(n: Node): Border","d":"scalqa/fx/scene/pane/Border$"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"Flow","t":"class Flow extends Pane","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"hGapPro","t":"def hGapPro: OM","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"hGap","t":"def hGap: Double","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"hGap_=","t":"def hGap_=(b: Double): Unit","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"vGapPro","t":"def vGapPro: OM","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"vGap","t":"def vGap: Double","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"vGap_=","t":"def vGap_=(b: Double): Unit","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"alignmentPro","t":"def alignmentPro: ObservableMutable[Pos]","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow.html","n":"alignment_=","t":"def alignment_=(v: Pos): Unit","d":"scalqa/fx/scene/pane/Flow"},
{"l":"api/scalqa/fx/scene/pane/Flow$.html","n":"Flow","t":"object Flow","d":"scalqa/fx/scene/pane/Flow$"},
{"l":"api/scalqa/fx/scene/pane/Flow$.html","n":"apply","t":"def apply(na: Like*): Flow","d":"scalqa/fx/scene/pane/Flow$"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"Grid","t":"class Grid extends Pane","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"alignmentPro","t":"def alignmentPro: ObservableMutable[Pos]","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"alignment_=","t":"def alignment_=(v: Pos): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"hGapPro","t":"def hGapPro: OM","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"hGap","t":"def hGap: Double","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"hGap_=","t":"def hGap_=(b: Double): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"vGapPro","t":"def vGapPro: OM","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"vGap","t":"def vGap: Double","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"vGap_=","t":"def vGap_=(b: Double): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, rowspan: Int, colspan: Int, child: Like): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, rowspan: Int, colspan: Int, s: String): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, child: Like): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, s: String): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, s: String, child: Like): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid.html","n":"add","t":"def add(rowIndex: Int, columnIndex: Int, s: String, child: String): Unit","d":"scalqa/fx/scene/pane/Grid"},
{"l":"api/scalqa/fx/scene/pane/Grid$.html","n":"Grid","t":"object Grid","d":"scalqa/fx/scene/pane/Grid$"},
{"l":"api/scalqa/fx/scene/pane/Grid$.html","n":"apply","t":"def apply(): Grid","d":"scalqa/fx/scene/pane/Grid$"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"HorizontalBox","t":"class HorizontalBox extends Pane","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"spacingPro","t":"def spacingPro: OM","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"spacing","t":"def spacing: Double","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"spacing_=","t":"def spacing_=(b: Double): Unit","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"alignmentPro","t":"def alignmentPro: ObservableMutable[Pos]","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox.html","n":"alignment_=","t":"def alignment_=(v: Pos): Unit","d":"scalqa/fx/scene/pane/HorizontalBox"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox$.html","n":"HorizontalBox","t":"object HorizontalBox","d":"scalqa/fx/scene/pane/HorizontalBox$"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox$.html","n":"apply","t":"def apply(a: Stream[Like]): HorizontalBox","d":"scalqa/fx/scene/pane/HorizontalBox$"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox$.html","n":"apply","t":"def apply(a: Like*): HorizontalBox","d":"scalqa/fx/scene/pane/HorizontalBox$"},
{"l":"api/scalqa/fx/scene/pane/HorizontalBox$.html","n":"apply","t":"def apply(spacing: Double): HorizontalBox","d":"scalqa/fx/scene/pane/HorizontalBox$"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"Split","t":"class Split extends Control","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"this","t":"def this(o: Orientation)","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"items","t":"val items: Mutable[Like]","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"dividers","t":"val dividers: Idx[Divider]","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"orientationPro","t":"def orientationPro: ObservableMutable[Orientation]","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"orientation","t":"def orientation: Orientation","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"orientation_=","t":"def orientation_=(o: Orientation): Unit","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split.html","n":"add","t":"def add(e: Like, dividerPercentOpt: DEF[Percent]): Split","d":"scalqa/fx/scene/pane/Split"},
{"l":"api/scalqa/fx/scene/pane/Split$.html","n":"Split","t":"object Split","d":"scalqa/fx/scene/pane/Split$"},
{"l":"api/scalqa/fx/scene/pane/Split$.html","n":"Divider","t":"type Divider = Divider","d":"scalqa/fx/scene/pane/Split$"},
{"l":"api/scalqa/fx/scene/pane/Split$.html","n":"apply","t":"def apply(): Split","d":"scalqa/fx/scene/pane/Split$"},
{"l":"api/scalqa/fx/scene/pane/Split$.html","n":"apply","t":"def apply(o: Orientation): Split","d":"scalqa/fx/scene/pane/Split$"},
{"l":"api/scalqa/fx/scene/pane/Split$.html","n":"apply","t":"def apply(e1: Like, e2: Like): Split","d":"scalqa/fx/scene/pane/Split$"},
{"l":"api/scalqa/fx/scene/pane/Stack.html","n":"Stack","t":"class Stack extends Pane","d":"scalqa/fx/scene/pane/Stack"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"Tab","t":"class Tab extends Control","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"tabs","t":"val tabs: Mutable[Panel]","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"selection","t":"val selection: Selection[Panel]","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"sidePro","t":"def sidePro: ObservableMutable[Side]","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"side","t":"def side: Side","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"side_=","t":"def side_=(s: Side): Unit","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"add","t":"def add(pos: Int, t: Panel): Unit","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"add","t":"def add(t: Panel): Unit","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"add","t":"def add(pos: Int, text: String, n: Like): Unit","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab.html","n":"add","t":"def add(text: String, n: Like): Unit","d":"scalqa/fx/scene/pane/Tab"},
{"l":"api/scalqa/fx/scene/pane/Tab$.html","n":"Tab","t":"object Tab","d":"scalqa/fx/scene/pane/Tab$"},
{"l":"api/scalqa/fx/scene/pane/Tab$.html","n":"apply","t":"def apply(): Tab","d":"scalqa/fx/scene/pane/Tab$"},
{"l":"api/scalqa/fx/scene/pane/Tab$.html","n":"apply","t":"def apply(s: Side): Tab","d":"scalqa/fx/scene/pane/Tab$"},
{"l":"api/scalqa/fx/scene/pane/Tab$.html","n":"Panel","t":"type Panel = Panel","d":"scalqa/fx/scene/pane/Tab$"},
{"l":"api/scalqa/fx/scene/pane/Tab$.html","n":"Panel","t":"def Panel: Panel","d":"scalqa/fx/scene/pane/Tab$"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"VerticalBox","t":"class VerticalBox extends Pane","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"spacingPro","t":"def spacingPro: OM","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"spacing","t":"def spacing: Double","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"spacing_=","t":"def spacing_=(b: Double): Unit","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"alignmentPro","t":"def alignmentPro: ObservableMutable[Pos]","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"alignment","t":"def alignment: Pos","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox.html","n":"alignment_=","t":"def alignment_=(v: Pos): Unit","d":"scalqa/fx/scene/pane/VerticalBox"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox$.html","n":"VerticalBox","t":"object VerticalBox","d":"scalqa/fx/scene/pane/VerticalBox$"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox$.html","n":"apply","t":"def apply(a: Stream[Like]): VerticalBox","d":"scalqa/fx/scene/pane/VerticalBox$"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox$.html","n":"apply","t":"def apply(a: Like*): VerticalBox","d":"scalqa/fx/scene/pane/VerticalBox$"},
{"l":"api/scalqa/fx/scene/pane/VerticalBox$.html","n":"apply","t":"def apply(spacing: Double): VerticalBox","d":"scalqa/fx/scene/pane/VerticalBox$"},
{"l":"api/scalqa/fx/scene/pane/split.html","n":"scalqa.fx.scene.pane.split","t":"package scalqa.fx.scene.pane.split","d":"scalqa/fx/scene/pane/split"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"Divider","t":"class Divider(val real: Divider) extends Doc","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"real","t":"val real: Divider","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"positionPro","t":"val positionPro: OM","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"position","t":"def position: Double","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"position_=","t":"def position_=(b: Double): Unit","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/split/Divider.html","n":"doc","t":"def doc: Doc","d":"scalqa/fx/scene/pane/split/Divider"},
{"l":"api/scalqa/fx/scene/pane/tab.html","n":"scalqa.fx.scene.pane.tab","t":"package scalqa.fx.scene.pane.tab","d":"scalqa/fx/scene/pane/tab"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"Panel","t":"class Panel extends Gui","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"this","t":"def this(label: String)","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"this","t":"def this(label: String, e: Like)","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"sceneOpt","t":"def sceneOpt: DEF[Scene]","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"onSelectionChanged","t":"def onSelectionChanged[U](l: () => U): Control","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"onSelection","t":"def onSelection[U](l: () => U): Control","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"selectedPro","t":"def selectedPro: O","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"selected","t":"def selected: Boolean","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"textPro","t":"def textPro: ObservableMutable[String]","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"text","t":"def text: String","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"text_=","t":"def text_=(v: String): Unit","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"closablePro","t":"def closablePro: OM","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"closable","t":"def closable: Boolean","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"closable_=","t":"def closable_=(v: Boolean): Unit","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"disablePro","t":"def disablePro: OM","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"disable","t":"def disable: Boolean","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"disable_=","t":"def disable_=(v: Boolean): Unit","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"disabledPro","t":"def disabledPro: O","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"disabled","t":"def disabled: Boolean","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"contentPro","t":"def contentPro: ObservableMutable[Like]","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"content","t":"def content: Like","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel.html","n":"content_=","t":"def content_=(e: Like): Unit","d":"scalqa/fx/scene/pane/tab/Panel"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel$.html","n":"Panel","t":"object Panel","d":"scalqa/fx/scene/pane/tab/Panel$"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel$.html","n":"apply","t":"def apply(r: Tab): Panel","d":"scalqa/fx/scene/pane/tab/Panel$"},
{"l":"api/scalqa/fx/scene/pane/tab/Panel$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[Tab, Panel]","d":"scalqa/fx/scene/pane/tab/Panel$"},
{"l":"api/scalqa/fx/scene/shape.html","n":"scalqa.fx.scene.shape","t":"package scalqa.fx.scene.shape","d":"scalqa/fx/scene/shape"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"Circle","t":"class Circle(radiusO: DEF[Double]) extends Shape","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerXPro","t":"def centerXPro: OM","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerX","t":"def centerX: Double","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerX_=","t":"def centerX_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerYPro","t":"def centerYPro: OM","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerY","t":"def centerY: Double","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"centerY_=","t":"def centerY_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"radiusPro","t":"def radiusPro: OM","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"radius","t":"def radius: Double","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle.html","n":"radius_=","t":"def radius_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Circle"},
{"l":"api/scalqa/fx/scene/shape/Circle$.html","n":"Circle","t":"object Circle","d":"scalqa/fx/scene/shape/Circle$"},
{"l":"api/scalqa/fx/scene/shape/Circle$.html","n":"apply","t":"def apply(radius: DEF[Double]): Circle","d":"scalqa/fx/scene/shape/Circle$"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"Line","t":"class Line extends Shape","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startXPro","t":"def startXPro: OM","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startX","t":"def startX: Double","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startX_=","t":"def startX_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startYPro","t":"def startYPro: OM","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startY","t":"def startY: Double","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"startY_=","t":"def startY_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endXPro","t":"def endXPro: OM","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endX","t":"def endX: Double","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endX_=","t":"def endX_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endYPro","t":"def endYPro: OM","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endY","t":"def endY: Double","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"endY_=","t":"def endY_=(b: Double): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"x","t":"def x: (Double, Double)","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"x_=","t":"def x_=(startEnd: (Double, Double)): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"y","t":"def y: (Double, Double)","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"y_=","t":"def y_=(startEnd: (Double, Double)): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"start","t":"def start: (Double, Double)","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"start_=","t":"def start_=(xy: (Double, Double)): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"end","t":"def end: (Double, Double)","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line.html","n":"end_=","t":"def end_=(xy: (Double, Double)): Unit","d":"scalqa/fx/scene/shape/Line"},
{"l":"api/scalqa/fx/scene/shape/Line$.html","n":"Line","t":"object Line","d":"scalqa/fx/scene/shape/Line$"},
{"l":"api/scalqa/fx/scene/shape/Line$.html","n":"apply","t":"def apply(): Line","d":"scalqa/fx/scene/shape/Line$"},
{"l":"api/scalqa/fx/scene/shape/Line$.html","n":"apply","t":"def apply(startX: Double, startY: Double, endX: Double, endY: Double): Line","d":"scalqa/fx/scene/shape/Line$"},
{"l":"api/scalqa/fx/scene/shape/Path.html","n":"Path","t":"class Path extends Shape","d":"scalqa/fx/scene/shape/Path"},
{"l":"api/scalqa/fx/scene/shape/Path.html","n":"elements","t":"val elements: ObservableMutable[Element]","d":"scalqa/fx/scene/shape/Path"},
{"l":"api/scalqa/fx/scene/shape/Path.html","n":"fillRulePro","t":"def fillRulePro: ObservableMutable[FillRule]","d":"scalqa/fx/scene/shape/Path"},
{"l":"api/scalqa/fx/scene/shape/Path.html","n":"fillRule","t":"def fillRule: FillRule","d":"scalqa/fx/scene/shape/Path"},
{"l":"api/scalqa/fx/scene/shape/Path.html","n":"fillRule_=","t":"def fillRule_=(v: FillRule): Unit","d":"scalqa/fx/scene/shape/Path"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"Path","t":"object Path","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"apply","t":"def apply(): Path","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"apply","t":"def apply(v: Element*): Path","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"Element","t":"type Element = Element","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"Element","t":"def Element: Element","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"ArcTo","t":"type ArcTo = ArcTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"ArcTo","t":"def ArcTo: ArcTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"ClosePath","t":"type ClosePath = ClosePath","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"ClosePath","t":"def ClosePath: ClosePath","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"CubicCurveTo","t":"type CubicCurveTo = CubicCurveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"CubicCurveTo","t":"def CubicCurveTo: CubicCurveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"FillRule","t":"type FillRule = FillRule","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"FillRule","t":"def FillRule: FillRule","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"HLineTo","t":"type HLineTo = HLineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"HLineTo","t":"def HLineTo: HLineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"LineTo","t":"type LineTo = LineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"LineTo","t":"def LineTo: LineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"MoveTo","t":"type MoveTo = MoveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"MoveTo","t":"def MoveTo: MoveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"QuadCurveTo","t":"type QuadCurveTo = QuadCurveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"QuadCurveTo","t":"def QuadCurveTo: QuadCurveTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"VLineTo","t":"type VLineTo = VLineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/Path$.html","n":"VLineTo","t":"def VLineTo: VLineTo","d":"scalqa/fx/scene/shape/Path$"},
{"l":"api/scalqa/fx/scene/shape/path.html","n":"scalqa.fx.scene.shape.path","t":"package scalqa.fx.scene.shape.path","d":"scalqa/fx/scene/shape/path"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"ArcTo","t":"class ArcTo(val real: ArcTo) extends AnyVal with Base[ArcTo, ArcTo]","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"real","t":"val real: ArcTo","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusXPro","t":"def radiusXPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusX","t":"def radiusX: Double","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusX_=","t":"def radiusX_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusYPro","t":"def radiusYPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusY","t":"def radiusY: Double","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"radiusY_=","t":"def radiusY_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"xAxisRotationPro","t":"def xAxisRotationPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"xAxisRotation","t":"def xAxisRotation: Double","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"xAxisRotation_=","t":"def xAxisRotation_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"sweepFlagPro","t":"def sweepFlagPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"sweepFlag","t":"def sweepFlag: Boolean","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"sweepFlag_=","t":"def sweepFlag_=(b: Boolean): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"largeArcFlagPro","t":"def largeArcFlagPro: OM","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"largeArcFlag","t":"def largeArcFlag: Boolean","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo.html","n":"largeArcFlag_=","t":"def largeArcFlag_=(b: Boolean): Unit","d":"scalqa/fx/scene/shape/path/ArcTo"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo$.html","n":"ArcTo","t":"object ArcTo extends Setup[ArcTo, ArcTo]","d":"scalqa/fx/scene/shape/path/ArcTo$"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo$.html","n":"apply","t":"def apply(v: ArcTo): ArcTo","d":"scalqa/fx/scene/shape/path/ArcTo$"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo$.html","n":"apply","t":"def apply(): ArcTo","d":"scalqa/fx/scene/shape/path/ArcTo$"},
{"l":"api/scalqa/fx/scene/shape/path/ArcTo$.html","n":"apply","t":"def apply(radiusX: Double, radiusY: Double, xAxisRotation: Double, x: Double, y: Double, largeArcFlag: Boolean, sweepFlag: Boolean): ArcTo","d":"scalqa/fx/scene/shape/path/ArcTo$"},
{"l":"api/scalqa/fx/scene/shape/path/ClosePath.html","n":"ClosePath","t":"class ClosePath(val real: ClosePath) extends AnyVal with Base[ClosePath, ClosePath]","d":"scalqa/fx/scene/shape/path/ClosePath"},
{"l":"api/scalqa/fx/scene/shape/path/ClosePath.html","n":"real","t":"val real: ClosePath","d":"scalqa/fx/scene/shape/path/ClosePath"},
{"l":"api/scalqa/fx/scene/shape/path/ClosePath$.html","n":"ClosePath","t":"object ClosePath extends Setup[ClosePath, ClosePath]","d":"scalqa/fx/scene/shape/path/ClosePath$"},
{"l":"api/scalqa/fx/scene/shape/path/ClosePath$.html","n":"apply","t":"def apply(v: ClosePath): ClosePath","d":"scalqa/fx/scene/shape/path/ClosePath$"},
{"l":"api/scalqa/fx/scene/shape/path/ClosePath$.html","n":"apply","t":"def apply(): ClosePath","d":"scalqa/fx/scene/shape/path/ClosePath$"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"CubicCurveTo","t":"class CubicCurveTo(val real: CubicCurveTo) extends AnyVal with Base[CubicCurveTo, CubicCurveTo]","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"real","t":"val real: CubicCurveTo","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX1Pro","t":"def controlX1Pro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX1","t":"def controlX1: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX1_=","t":"def controlX1_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX2Pro","t":"def controlX2Pro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX2","t":"def controlX2: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlX2_=","t":"def controlX2_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY1Pro","t":"def controlY1Pro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY1","t":"def controlY1: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY1_=","t":"def controlY1_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY2Pro","t":"def controlY2Pro: OM","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY2","t":"def controlY2: Double","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo.html","n":"controlY2_=","t":"def controlY2_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/CubicCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo$.html","n":"CubicCurveTo","t":"object CubicCurveTo extends Setup[CubicCurveTo, CubicCurveTo]","d":"scalqa/fx/scene/shape/path/CubicCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo$.html","n":"apply","t":"def apply(v: CubicCurveTo): CubicCurveTo","d":"scalqa/fx/scene/shape/path/CubicCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo$.html","n":"apply","t":"def apply(): CubicCurveTo","d":"scalqa/fx/scene/shape/path/CubicCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/CubicCurveTo$.html","n":"apply","t":"def apply(controlX1: Double, controlY1: Double, controlX2: Double, controlY2: Double, x: Double, y: Double): CubicCurveTo","d":"scalqa/fx/scene/shape/path/CubicCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/Element.html","n":"Element","t":"trait Element","d":"scalqa/fx/scene/shape/path/Element"},
{"l":"api/scalqa/fx/scene/shape/path/Element.html","n":"real","t":"def real: PathElement","d":"scalqa/fx/scene/shape/path/Element"},
{"l":"api/scalqa/fx/scene/shape/path/Element.html","n":"absolutePro","t":"def absolutePro: OM","d":"scalqa/fx/scene/shape/path/Element"},
{"l":"api/scalqa/fx/scene/shape/path/Element.html","n":"absolute","t":"def absolute: Boolean","d":"scalqa/fx/scene/shape/path/Element"},
{"l":"api/scalqa/fx/scene/shape/path/Element.html","n":"absolute_=","t":"def absolute_=(b: Boolean): Unit","d":"scalqa/fx/scene/shape/path/Element"},
{"l":"api/scalqa/fx/scene/shape/path/Element$.html","n":"Element","t":"object Element","d":"scalqa/fx/scene/shape/path/Element$"},
{"l":"api/scalqa/fx/scene/shape/path/Element$.html","n":"FxConverter","t":"val FxConverter: TwoWayFunction[PathElement, Element]","d":"scalqa/fx/scene/shape/path/Element$"},
{"l":"api/scalqa/fx/scene/shape/path/Element$.html","n":"apply","t":"def apply(real: PathElement): Element","d":"scalqa/fx/scene/shape/path/Element$"},
{"l":"api/scalqa/fx/scene/shape/path/FillRule.html","n":"FillRule","t":"enum FillRule(val real: FillRule) extends Enum[FillRule]","d":"scalqa/fx/scene/shape/path/FillRule"},
{"l":"api/scalqa/fx/scene/shape/path/FillRule.html","n":"EvenOdd","t":"case EvenOdd extends FillRule","d":"scalqa/fx/scene/shape/path/FillRule"},
{"l":"api/scalqa/fx/scene/shape/path/FillRule.html","n":"NonZero","t":"case NonZero extends FillRule","d":"scalqa/fx/scene/shape/path/FillRule"},
{"l":"api/scalqa/fx/scene/shape/path/FillRule$.html","n":"FillRule","t":"object FillRule extends Companion[FillRule, FillRule]","d":"scalqa/fx/scene/shape/path/FillRule$"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo.html","n":"HLineTo","t":"class HLineTo(val real: HLineTo) extends AnyVal with Base[HLineTo, HLineTo]","d":"scalqa/fx/scene/shape/path/HLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo.html","n":"real","t":"val real: HLineTo","d":"scalqa/fx/scene/shape/path/HLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/HLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/HLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/HLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo$.html","n":"HLineTo","t":"object HLineTo extends Setup[HLineTo, HLineTo]","d":"scalqa/fx/scene/shape/path/HLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo$.html","n":"apply","t":"def apply(v: HLineTo): HLineTo","d":"scalqa/fx/scene/shape/path/HLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo$.html","n":"apply","t":"def apply(): HLineTo","d":"scalqa/fx/scene/shape/path/HLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/HLineTo$.html","n":"apply","t":"def apply(x: Double): HLineTo","d":"scalqa/fx/scene/shape/path/HLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"LineTo","t":"class LineTo(val real: LineTo) extends AnyVal with Base[LineTo, LineTo]","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"real","t":"val real: LineTo","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/LineTo"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo$.html","n":"LineTo","t":"object LineTo extends Setup[LineTo, LineTo]","d":"scalqa/fx/scene/shape/path/LineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo$.html","n":"apply","t":"def apply(v: LineTo): LineTo","d":"scalqa/fx/scene/shape/path/LineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo$.html","n":"apply","t":"def apply(): LineTo","d":"scalqa/fx/scene/shape/path/LineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/LineTo$.html","n":"apply","t":"def apply(x: Double, y: Double): LineTo","d":"scalqa/fx/scene/shape/path/LineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"MoveTo","t":"class MoveTo(val real: MoveTo) extends AnyVal with Base[MoveTo, MoveTo]","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"real","t":"val real: MoveTo","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/MoveTo"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo$.html","n":"MoveTo","t":"object MoveTo extends Setup[MoveTo, MoveTo]","d":"scalqa/fx/scene/shape/path/MoveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo$.html","n":"apply","t":"def apply(v: MoveTo): MoveTo","d":"scalqa/fx/scene/shape/path/MoveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo$.html","n":"apply","t":"def apply(): MoveTo","d":"scalqa/fx/scene/shape/path/MoveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/MoveTo$.html","n":"apply","t":"def apply(x: Double, y: Double): MoveTo","d":"scalqa/fx/scene/shape/path/MoveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"QuadCurveTo","t":"class QuadCurveTo(val real: QuadCurveTo) extends AnyVal with Base[QuadCurveTo, QuadCurveTo]","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"real","t":"val real: QuadCurveTo","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"xPro","t":"def xPro: OM","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"x","t":"def x: Double","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"x_=","t":"def x_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlXPro","t":"def controlXPro: OM","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlX","t":"def controlX: Double","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlX_=","t":"def controlX_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlYPro","t":"def controlYPro: OM","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlY","t":"def controlY: Double","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo.html","n":"controlY_=","t":"def controlY_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/QuadCurveTo"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo$.html","n":"QuadCurveTo","t":"object QuadCurveTo extends Setup[QuadCurveTo, QuadCurveTo]","d":"scalqa/fx/scene/shape/path/QuadCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo$.html","n":"apply","t":"def apply(v: QuadCurveTo): QuadCurveTo","d":"scalqa/fx/scene/shape/path/QuadCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo$.html","n":"apply","t":"def apply(): QuadCurveTo","d":"scalqa/fx/scene/shape/path/QuadCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/QuadCurveTo$.html","n":"apply","t":"def apply(controlX: Double, controlY: Double, x: Double, y: Double): QuadCurveTo","d":"scalqa/fx/scene/shape/path/QuadCurveTo$"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo.html","n":"VLineTo","t":"class VLineTo(val real: VLineTo) extends AnyVal with Base[VLineTo, VLineTo]","d":"scalqa/fx/scene/shape/path/VLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo.html","n":"real","t":"val real: VLineTo","d":"scalqa/fx/scene/shape/path/VLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo.html","n":"yPro","t":"def yPro: OM","d":"scalqa/fx/scene/shape/path/VLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo.html","n":"y","t":"def y: Double","d":"scalqa/fx/scene/shape/path/VLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo.html","n":"y_=","t":"def y_=(v: Double): Unit","d":"scalqa/fx/scene/shape/path/VLineTo"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo$.html","n":"VLineTo","t":"object VLineTo extends Setup[VLineTo, VLineTo]","d":"scalqa/fx/scene/shape/path/VLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo$.html","n":"apply","t":"def apply(v: VLineTo): VLineTo","d":"scalqa/fx/scene/shape/path/VLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo$.html","n":"apply","t":"def apply(): VLineTo","d":"scalqa/fx/scene/shape/path/VLineTo$"},
{"l":"api/scalqa/fx/scene/shape/path/VLineTo$.html","n":"apply","t":"def apply(x: Double): VLineTo","d":"scalqa/fx/scene/shape/path/VLineTo$"},
{"l":"api/scalqa/gen.html","n":"scalqa.gen","t":"package scalqa.gen","d":"scalqa/gen"},
{"l":"api/scalqa/gen/Able$.html","n":"Able","t":"object Able","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Stream","t":"type Stream[+A] = Stream[A]","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Stream","t":"val Stream: Stream","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Access","t":"type Access[A] = Access[A]","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Access","t":"def Access: Access","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Add","t":"type Add[A] = Add[A]","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Close","t":"type Close = Close","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Contain","t":"type Contain[A] = Contain[A]","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Empty","t":"type Empty = Empty","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Empty","t":"def Empty: Empty","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Name","t":"type Name = Name","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Refresh","t":"type Refresh = Refresh","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Seal","t":"type Seal = Seal","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Seal","t":"def Seal: Seal","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Sequence","t":"type Sequence[A] = Sequence[A]","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Sequence","t":"def Sequence: Sequence","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Size","t":"type Size = Size","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Size","t":"def Size: Size","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Doc","t":"type Doc = Doc","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Doc","t":"def Doc: Doc","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Tag","t":"type Tag = Tag","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Able$.html","n":"Void","t":"type Void = Void","d":"scalqa/gen/Able$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Calendar","t":"object Calendar","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Week","t":"type Week = DEF","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Week","t":"def Week: Week","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Day","t":"type Day = DEF","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Day","t":"def Day: Day","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Month","t":"type Month = DEF","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Month","t":"def Month: Month","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Year","t":"type Year = DEF","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Calendar$.html","n":"Year","t":"def Year: Year","d":"scalqa/gen/Calendar$"},
{"l":"api/scalqa/gen/Doc.html","n":"Doc","t":"class Doc extends Buffer[(String, String)] with _core with Product","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"id","t":"var id: String","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"tag","t":"def tag: String","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"text","t":"def text: String","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"nameStream","t":"def nameStream: Stream[String]","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"valueStream","t":"def valueStream: Stream[String]","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"pairStream","t":"def pairStream(sep: String): Stream[String]","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"add","t":"def add[A](name: String, value: A)(using d: Tag[A]): Unit","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"add","t":"def add[A](value: A)(using d: Tag[A]): Unit","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"addAt","t":"def addAt[A](pos: Int, name: String, value: A)(using d: Tag[A]): Unit","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"+=","t":"def +=[A](inline name: String, inline value: A)(using inline t: Tag[A]): Doc","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"+=","t":"def +=(inline value: String): Doc","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"+@=","t":"def +@=[A](inline p: Int, inline n: String, inline v: A)(using inline t: Tag[A]): Doc","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"update","t":"def update[A](name: String, v: A)(using d: Tag[A]): Unit","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"update","t":"def update[A](pos: Int, v: A)(using d: Tag[A]): Unit","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"productArity","t":"def productArity: Int","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"productElement","t":"def productElement(i: Int): String","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc.html","n":"canEqual","t":"def canEqual(that: Any): Boolean","d":"scalqa/gen/Doc"},
{"l":"api/scalqa/gen/Doc$.html","n":"Doc","t":"object Doc","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"apply","t":"def apply(owner: Any): Doc","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"resolve","t":"def resolve(owner: AnyRef): Doc","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"product","t":"def product(v: Product): Doc","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"_core","t":"type _core = _core","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"Tree","t":"type Tree = Tree","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Doc$.html","n":"Tree","t":"def Tree: Tree","d":"scalqa/gen/Doc$"},
{"l":"api/scalqa/gen/Event$.html","n":"Event","t":"object Event","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Control","t":"def Control: Control","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Control","t":"type Control = Control","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Store","t":"val Store: Store","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Store","t":"type Store = Store","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Id","t":"def Id: Id","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Id","t":"type Id = Id","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Observable","t":"def Observable: Observable","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"Observable","t":"type Observable = Observable","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Event$.html","n":"CancelRequest","t":"def CancelRequest: CancelRequest","d":"scalqa/gen/Event$"},
{"l":"api/scalqa/gen/Math$.html","n":"Math","t":"object Math","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"floor","t":"def floor(inline v: Double): Double","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"ceil","t":"def ceil(inline v: Double): Double","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"log10","t":"def log10(inline v: Double): Double","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"pow","t":"def pow(inline a: Double, inline b: Double): Double","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Average","t":"type Average[A] = Average[A]","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Average","t":"def Average: Average","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Sum","t":"type Sum[A] = Sum[A]","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Ordering","t":"type Ordering[A] = Ordering[A]","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Ordering","t":"def Ordering: Ordering","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Format","t":"type Format = DEF","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Format","t":"def Format: Format","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Rounding","t":"type Rounding = Rounding","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"Rounding","t":"def Rounding: Rounding","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"BigDecimal","t":"type BigDecimal = DEF","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"BigDecimal","t":"def BigDecimal: BigDecimal","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"BigInteger","t":"type BigInteger = DEF","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Math$.html","n":"BigInteger","t":"def BigInteger: BigInteger","d":"scalqa/gen/Math$"},
{"l":"api/scalqa/gen/Request.html","n":"Request","t":"class Request","d":"scalqa/gen/Request"},
{"l":"api/scalqa/gen/Request$.html","n":"Request","t":"object Request","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"DEFAULT","t":"type DEFAULT = DEFAULT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"DEFAULT","t":"def DEFAULT: DEFAULT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"ALL","t":"type ALL = ALL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"ALL","t":"def ALL: ALL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"NEW","t":"type NEW = NEW","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"NEW","t":"def NEW: NEW","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"EMPTY","t":"type EMPTY = EMPTY","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"EMPTY","t":"def EMPTY: EMPTY","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"CURRENT","t":"type CURRENT = CURRENT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"CURRENT","t":"def CURRENT: CURRENT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"LEFT","t":"type LEFT = LEFT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"LEFT","t":"def LEFT: LEFT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"RIGHT","t":"type RIGHT = RIGHT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"RIGHT","t":"def RIGHT: RIGHT","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"CENTER","t":"type CENTER = CENTER","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"CENTER","t":"def CENTER: CENTER","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"TOP","t":"type TOP = TOP","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"TOP","t":"def TOP: TOP","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"BOTTOM","t":"type BOTTOM = BOTTOM","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"BOTTOM","t":"def BOTTOM: BOTTOM","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"HORIZONTAL","t":"type HORIZONTAL = HORIZONTAL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"HORIZONTAL","t":"def HORIZONTAL: HORIZONTAL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"VERTICAL","t":"type VERTICAL = VERTICAL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"VERTICAL","t":"def VERTICAL: VERTICAL","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"UP","t":"type UP = UP","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"UP","t":"def UP: UP","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"DOWN","t":"type DOWN = DOWN","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"DOWN","t":"def DOWN: DOWN","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"SEPARATOR","t":"type SEPARATOR = SEPARATOR","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"SEPARATOR","t":"def SEPARATOR: SEPARATOR","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"MAX","t":"type MAX = MAX","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"MAX","t":"def MAX: MAX","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"MIN","t":"type MIN = MIN","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"MIN","t":"def MIN: MIN","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"VOID","t":"type VOID = VOID","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Request$.html","n":"VOID","t":"def VOID: VOID","d":"scalqa/gen/Request$"},
{"l":"api/scalqa/gen/Time$.html","n":"Time","t":"object Time extends Ordered[Time] with Base[Time] with Base","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"fromIndex","t":"def fromIndex(epochMillis: Long): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"current","t":"def current: Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"apply","t":"def apply(d: Day, l: Length, ls: Length*): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"apply","t":"def apply(i: Instant): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"currentPro","t":"def currentPro(changeEvery: Length): O","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"age","t":"def age: Length","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"lengthTo","t":"def lengthTo(that: Time): Length","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"format","t":"def format(pattern: String): String","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"skipTo","t":"def skipTo(dt: DayTime): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"toGmt","t":"def toGmt: Gmt","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"toInstant","t":"def toInstant: Instant","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"+","t":"def +(inline l: Length): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"-","t":"def -(inline l: Length): Time","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"DayTime","t":"def DayTime: DayTime","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"DayTime","t":"type DayTime = DEF","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Gmt","t":"def Gmt: Gmt","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Gmt","t":"type Gmt = DEF","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Instant","t":"def Instant: Instant","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Instant","t":"type Instant = DEF","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Length","t":"def Length: Length","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Length","t":"type Length = DEF","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Period","t":"def Period: Period","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Period","t":"type Period = Period","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"Zone","t":"def Zone: Zone","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time$.html","n":"X","t":"def X: X","d":"scalqa/gen/Time$"},
{"l":"api/scalqa/gen/Time.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/Time$$TYPE$"},
{"l":"api/scalqa/gen/Time.html","n":"DEF","t":"type DEF","d":"scalqa/gen/Time$$TYPE$"},
{"l":"api/scalqa/gen/Util$.html","n":"Util","t":"object Util","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"ByteCount","t":"def ByteCount: ByteCount","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"ByteCount","t":"type ByteCount = DEF","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"Percent","t":"type Percent = DEF","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"TwoWayFunction","t":"def TwoWayFunction: TwoWayFunction","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"TwoWayFunction","t":"type TwoWayFunction[A, B] = TwoWayFunction[A, B]","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Util$.html","n":"EnumCompanion","t":"type EnumCompanion[A <: Enum] = EnumCompanion[A]","d":"scalqa/gen/Util$"},
{"l":"api/scalqa/gen/Void.html","n":"Void","t":"trait Void extends Void","d":"scalqa/gen/Void"},
{"l":"api/scalqa/gen/Void.html","n":"isVoid","t":"def isVoid: Boolean","d":"scalqa/gen/Void"},
{"l":"api/scalqa/gen/Void$.html","n":"Void","t":"object Void","d":"scalqa/gen/Void$"},
{"l":"api/scalqa/gen/Void$.html","n":"ordering","t":"val ordering: Ordering[Any]","d":"scalqa/gen/Void$"},
{"l":"api/scalqa/gen/Void$.html","n":"Setup","t":"type Setup[A] = Setup[A]","d":"scalqa/gen/Void$"},
{"l":"api/scalqa/gen/able.html","n":"scalqa.gen.able","t":"package scalqa.gen.able","d":"scalqa/gen/able"},
{"l":"api/scalqa/gen/able/Access.html","n":"Access","t":"trait Access[A]","d":"scalqa/gen/able/Access"},
{"l":"api/scalqa/gen/able/Access.html","n":"access","t":"def access: A","d":"scalqa/gen/able/Access"},
{"l":"api/scalqa/gen/able/Access$.html","n":"Access","t":"object Access","d":"scalqa/gen/able/Access$"},
{"l":"api/scalqa/gen/able/Access$$Update.html","n":"Update","t":"trait Update[A] extends Access[A]","d":"scalqa/gen/able/Access$$Update"},
{"l":"api/scalqa/gen/able/Access$$Update.html","n":"access_=","t":"def access_=(v: A): Unit","d":"scalqa/gen/able/Access$$Update"},
{"l":"api/scalqa/gen/able/Add.html","n":"Add","t":"trait Add[A]","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Add.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Add.html","n":"addAll","t":"def addAll(v: Stream[A]): Unit","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Add.html","n":"+=","t":"def +=(inline v: A): Add[A]","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Add.html","n":"++=","t":"def ++=(inline v: Stream[A]): Add[A]","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Add.html","n":"++=","t":"def ++=(inline v: DEF[A]): Add[A]","d":"scalqa/gen/able/Add"},
{"l":"api/scalqa/gen/able/Close.html","n":"Close","t":"trait Close","d":"scalqa/gen/able/Close"},
{"l":"api/scalqa/gen/able/Close.html","n":"close","t":"def close: Any","d":"scalqa/gen/able/Close"},
{"l":"api/scalqa/gen/able/Contain.html","n":"Contain","t":"trait Contain[A]","d":"scalqa/gen/able/Contain"},
{"l":"api/scalqa/gen/able/Contain.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/gen/able/Contain"},
{"l":"api/scalqa/gen/able/Doc.html","n":"Doc","t":"trait Doc extends Tag","d":"scalqa/gen/able/Doc"},
{"l":"api/scalqa/gen/able/Doc.html","n":"tag","t":"def tag: String","d":"scalqa/gen/able/Doc"},
{"l":"api/scalqa/gen/able/Doc.html","n":"doc","t":"def doc: Doc","d":"scalqa/gen/able/Doc"},
{"l":"api/scalqa/gen/able/Doc$.html","n":"Doc","t":"object Doc","d":"scalqa/gen/able/Doc$"},
{"l":"api/scalqa/gen/able/Doc$.html","n":"docOpt","t":"def docOpt(v: Any): DEF[Doc]","d":"scalqa/gen/able/Doc$"},
{"l":"api/scalqa/gen/able/Doc$$Product.html","n":"Product","t":"trait Product extends Doc","d":"scalqa/gen/able/Doc$$Product"},
{"l":"api/scalqa/gen/able/Doc$$Product.html","n":"doc","t":"def doc: Doc","d":"scalqa/gen/able/Doc$$Product"},
{"l":"api/scalqa/gen/able/Empty.html","n":"Empty","t":"trait Empty","d":"scalqa/gen/able/Empty"},
{"l":"api/scalqa/gen/able/Empty.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/gen/able/Empty"},
{"l":"api/scalqa/gen/able/Empty$.html","n":"Empty","t":"object Empty","d":"scalqa/gen/able/Empty$"},
{"l":"api/scalqa/gen/able/Empty$.html","n":"nonEmpty","t":"def nonEmpty: Boolean","d":"scalqa/gen/able/Empty$"},
{"l":"api/scalqa/gen/able/Name.html","n":"Name","t":"trait Name","d":"scalqa/gen/able/Name"},
{"l":"api/scalqa/gen/able/Name.html","n":"name","t":"def name: String","d":"scalqa/gen/able/Name"},
{"l":"api/scalqa/gen/able/Refresh.html","n":"Refresh","t":"trait Refresh","d":"scalqa/gen/able/Refresh"},
{"l":"api/scalqa/gen/able/Refresh.html","n":"refresh","t":"def refresh: Any","d":"scalqa/gen/able/Refresh"},
{"l":"api/scalqa/gen/able/Seal.html","n":"Seal","t":"trait Seal","d":"scalqa/gen/able/Seal"},
{"l":"api/scalqa/gen/able/Seal.html","n":"isSealed","t":"def isSealed: Boolean","d":"scalqa/gen/able/Seal"},
{"l":"api/scalqa/gen/able/Seal.html","n":"seal","t":"def seal: Seal","d":"scalqa/gen/able/Seal"},
{"l":"api/scalqa/gen/able/Seal$.html","n":"Seal","t":"object Seal","d":"scalqa/gen/able/Seal$"},
{"l":"api/scalqa/gen/able/Seal$.html","n":"fail","t":"def fail: Nothing","d":"scalqa/gen/able/Seal$"},
{"l":"api/scalqa/gen/able/Seal$.html","n":"check","t":"def check(inline v: Seal): Unit","d":"scalqa/gen/able/Seal$"},
{"l":"api/scalqa/gen/able/Sequence.html","n":"Sequence","t":"trait Sequence[A]","d":"scalqa/gen/able/Sequence"},
{"l":"api/scalqa/gen/able/Sequence.html","n":"step","t":"def step(v: A, step: Int): A","d":"scalqa/gen/able/Sequence"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"Sequence","t":"object Sequence","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"byte","t":"val byte: Sequence[Byte]","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"char","t":"val char: Sequence[Char]","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"short","t":"val short: Sequence[Short]","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"int","t":"val int: Sequence[Int]","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Sequence$.html","n":"long","t":"val long: Sequence[Long]","d":"scalqa/gen/able/Sequence$"},
{"l":"api/scalqa/gen/able/Size.html","n":"Size","t":"trait Size","d":"scalqa/gen/able/Size"},
{"l":"api/scalqa/gen/able/Size.html","n":"size","t":"def size: Int","d":"scalqa/gen/able/Size"},
{"l":"api/scalqa/gen/able/Size$.html","n":"Size","t":"object Size","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"nonEmpty","t":"def nonEmpty: Boolean","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"sizeOpt","t":"def sizeOpt(v: AnyRef): Opt","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"sizeLongOpt","t":"def sizeLongOpt(v: AnyRef): Opt","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$.html","n":"nonEmpty","t":"def nonEmpty: Boolean","d":"scalqa/gen/able/Size$"},
{"l":"api/scalqa/gen/able/Size$$Long.html","n":"Long","t":"trait Long","d":"scalqa/gen/able/Size$$Long"},
{"l":"api/scalqa/gen/able/Size$$Long.html","n":"sizeLong","t":"def sizeLong: Long","d":"scalqa/gen/able/Size$$Long"},
{"l":"api/scalqa/gen/able/Size$$Zero.html","n":"Zero","t":"trait Zero extends Size","d":"scalqa/gen/able/Size$$Zero"},
{"l":"api/scalqa/gen/able/Size$$Opt.html","n":"Opt","t":"trait Opt","d":"scalqa/gen/able/Size$$Opt"},
{"l":"api/scalqa/gen/able/Size$$Opt.html","n":"sizeOpt","t":"def sizeOpt: Opt","d":"scalqa/gen/able/Size$$Opt"},
{"l":"api/scalqa/gen/able/Size$$Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/gen/able/Size$$Opt$"},
{"l":"api/scalqa/gen/able/Size$$Opt$$Long.html","n":"Long","t":"trait Long","d":"scalqa/gen/able/Size$$Opt$$Long"},
{"l":"api/scalqa/gen/able/Size$$Opt$$Long.html","n":"sizeLongOpt","t":"def sizeLongOpt: Opt","d":"scalqa/gen/able/Size$$Opt$$Long"},
{"l":"api/scalqa/gen/able/Stream.html","n":"Stream","t":"trait Stream[+A]","d":"scalqa/gen/able/Stream"},
{"l":"api/scalqa/gen/able/Stream.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/gen/able/Stream"},
{"l":"api/scalqa/gen/able/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/gen/able/Stream$"},
{"l":"api/scalqa/gen/able/Stream$.html","n":"pack","t":"def pack[A](using inline A: Specialized[A]): Pack","d":"scalqa/gen/able/Stream$"},
{"l":"api/scalqa/gen/able/Tag.html","n":"Tag","t":"trait Tag","d":"scalqa/gen/able/Tag"},
{"l":"api/scalqa/gen/able/Tag.html","n":"tag","t":"def tag: String","d":"scalqa/gen/able/Tag"},
{"l":"api/scalqa/gen/able/Void.html","n":"Void","t":"trait Void","d":"scalqa/gen/able/Void"},
{"l":"api/scalqa/gen/able/Void.html","n":"isVoid","t":"def isVoid: Boolean","d":"scalqa/gen/able/Void"},
{"l":"api/scalqa/gen/able/Void$.html","n":"Void","t":"object Void","d":"scalqa/gen/able/Void$"},
{"l":"api/scalqa/gen/able/Void$.html","n":"nonVoid","t":"def nonVoid: Boolean","d":"scalqa/gen/able/Void$"},
{"l":"api/scalqa/gen/calendar.html","n":"scalqa.gen.calendar","t":"package scalqa.gen.calendar","d":"scalqa/gen/calendar"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"Day","t":"object Day extends Sequential[Day]","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"fromIndex","t":"def fromIndex(epochDay: Int): Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"current","t":"def current: Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"apply","t":"def apply(year: Int, month: Int, day: Int): Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"apply","t":"def apply(m: Month, day: Int): Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"unapply","t":"def unapply(v: Day): Option[(Int, Int, Int)]","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"index","t":"def index: Int","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"number","t":"def number: Int","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"week","t":"def week: Week","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"month","t":"def month: Month","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"year","t":"def year: Year","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"weekDay","t":"def weekDay: Day","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"isCurrent","t":"def isCurrent: Boolean","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"period","t":"def period: Period","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"&","t":"def &(inline l: Length): Time","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day$.html","n":"start","t":"def start: Time","d":"scalqa/gen/calendar/Day$"},
{"l":"api/scalqa/gen/calendar/Day.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/calendar/Day$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Day.html","n":"DEF","t":"type DEF","d":"scalqa/gen/calendar/Day$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"Month","t":"object Month extends Sequential[Month]","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"fromIndex","t":"def fromIndex(epochMonth: Int): Month","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"apply","t":"def apply(year: Int, month: Int): Month","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"current","t":"def current: Month","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Month","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Month","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"index","t":"def index: Int","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"year","t":"def year: Year","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"number","t":"def number: Int","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"start","t":"def start: Time","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"period","t":"def period: Period","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"isCurrent","t":"def isCurrent: Boolean","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month$.html","n":"days","t":"def days: Idx","d":"scalqa/gen/calendar/Month$"},
{"l":"api/scalqa/gen/calendar/Month.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/calendar/Month$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Month.html","n":"DEF","t":"type DEF","d":"scalqa/gen/calendar/Month$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"Week","t":"object Week extends Sequential[Week]","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"fromIndex","t":"def fromIndex(epochWeek: Int): Week","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"current","t":"def current: Week","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Week","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"index","t":"def index: Int","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"start","t":"def start: Time","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"startDay","t":"def startDay: Day","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"year","t":"def year: Year","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"month","t":"def month: Month","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"isCurrent","t":"def isCurrent: Boolean","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week$.html","n":"period","t":"def period: Period","d":"scalqa/gen/calendar/Week$"},
{"l":"api/scalqa/gen/calendar/Week.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/calendar/Week$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Week.html","n":"DEF","t":"type DEF","d":"scalqa/gen/calendar/Week$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Day","t":"enum Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Mon","t":"case Mon extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Tue","t":"case Tue extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Wed","t":"case Wed extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Thu","t":"case Thu extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Fri","t":"case Fri extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Sat","t":"case Sat extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day.html","n":"Sun","t":"case Sun extends Day","d":"scalqa/gen/calendar/Week$$Day"},
{"l":"api/scalqa/gen/calendar/Week$$Day$.html","n":"Day","t":"object Day extends EnumCompanion[Day]","d":"scalqa/gen/calendar/Week$$Day$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"Year","t":"object Year extends Sequential[Year]","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"apply","t":"def apply(inline v: Int): Year","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"current","t":"def current: Year","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Year","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Year","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"number","t":"def number: Int","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"isLeap","t":"def isLeap: Boolean","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"start","t":"def start: Time","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"period","t":"def period: Period","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"months","t":"def months: Idx","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"days","t":"def days: Idx","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year$.html","n":"isCurrent","t":"def isCurrent: Boolean","d":"scalqa/gen/calendar/Year$"},
{"l":"api/scalqa/gen/calendar/Year.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/calendar/Year$$TYPE$"},
{"l":"api/scalqa/gen/calendar/Year.html","n":"DEF","t":"type DEF","d":"scalqa/gen/calendar/Year$$TYPE$"},
{"l":"api/scalqa/gen/doc.html","n":"scalqa.gen.doc","t":"package scalqa.gen.doc","d":"scalqa/gen/doc"},
{"l":"api/scalqa/gen/doc/_core.html","n":"_core","t":"trait _core extends Tag","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"id","t":"var id: String","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"tag","t":"def tag: String","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"text","t":"def text: String","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"nameStream","t":"def nameStream: Stream[String]","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"valueStream","t":"def valueStream: Stream[String]","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"pairStream","t":"def pairStream(sep: String): Stream[String]","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"add","t":"def add[A](name: String, value: A)(using t: Tag[A]): Unit","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"add","t":"def add[A](value: A)(using t: Tag[A]): Unit","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"addAt","t":"def addAt[A](pos: Int, name: String, value: A)(using t: Tag[A]): Unit","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"+=","t":"def +=[A](inline name: String, inline value: A)(using inline t: Tag[A]): Doc","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"+=","t":"def +=(inline value: String): Doc","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"+@=","t":"def +@=[A](inline p: Int, inline n: String, inline v: A)(using inline t: Tag[A]): Doc","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"update","t":"def update[A](name: String, v: A)(using t: Tag[A]): Unit","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/_core.html","n":"update","t":"def update[A](pos: Int, v: A)(using t: Tag[A]): Unit","d":"scalqa/gen/doc/_core"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"Tree","t":"class Tree extends Tag","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"doc","t":"val doc: Doc","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"children","t":"val children: Pack[Tree]","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"traverseStream","t":"def traverseStream: Stream[(Int, Doc)]","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"format","t":"def format(indent: String, f: Doc => String): String","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree.html","n":"tag","t":"def tag: String","d":"scalqa/gen/doc/Tree"},
{"l":"api/scalqa/gen/doc/Tree$.html","n":"Tree","t":"object Tree","d":"scalqa/gen/doc/Tree$"},
{"l":"api/scalqa/gen/doc/Tree$.html","n":"apply","t":"def apply(t: Doc, children: Tree*): Tree","d":"scalqa/gen/doc/Tree$"},
{"l":"api/scalqa/gen/doc/Tree$.html","n":"apply","t":"def apply(t: Doc, children: Stream[Tree]): Tree","d":"scalqa/gen/doc/Tree$"},
{"l":"api/scalqa/gen/event.html","n":"scalqa.gen.event","t":"package scalqa.gen.event","d":"scalqa/gen/event"},
{"l":"api/scalqa/gen/event/CancelRequest$.html","n":"CancelRequest","t":"object CancelRequest extends RuntimeException","d":"scalqa/gen/event/CancelRequest$"},
{"l":"api/scalqa/gen/event/Control.html","n":"Control","t":"trait Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"cancel","t":"def cancel: Boolean","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"isCancelled","t":"def isCancelled: Boolean","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"onCancel","t":"def onCancel[U](b: () => U): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"onCancelRun","t":"def onCancelRun[U](f: => U): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"cancelIf","t":"def cancelIf(b: () => Boolean): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"cancelIfTrue","t":"def cancelIfTrue(b: => Boolean): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"cancelIfFalse","t":"def cancelIfFalse(b: => Boolean): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"removeHardReference","t":"def removeHardReference: AnyRef","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"expireIn","t":"def expireIn(tl: Length): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control.html","n":"limitRunsTo","t":"def limitRunsTo(maxRunCount: Int): Control","d":"scalqa/gen/event/Control"},
{"l":"api/scalqa/gen/event/Control$.html","n":"Control","t":"object Control extends Setup[Control]","d":"scalqa/gen/event/Control$"},
{"l":"api/scalqa/gen/event/Control$.html","n":"join","t":"def join(c1: Control, c2: Control, c3: DEF[Control]): Control","d":"scalqa/gen/event/Control$"},
{"l":"api/scalqa/gen/event/Control$.html","n":"X","t":"def X: X","d":"scalqa/gen/event/Control$"},
{"l":"api/scalqa/gen/event/Id.html","n":"Id","t":"class Id","d":"scalqa/gen/event/Id"},
{"l":"api/scalqa/gen/event/Id.html","n":"id","t":"def id: AnyRef","d":"scalqa/gen/event/Id"},
{"l":"api/scalqa/gen/event/Id$.html","n":"Id","t":"object Id","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"make0","t":"def make0[U](id: AnyRef, f: () => U): () => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"make1","t":"def make1[A, U](id: AnyRef, f: A => U): A => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"make2","t":"def make2[A, B, U](id: AnyRef, f: (A, B) => U): (A, B) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"make3","t":"def make3[A, B, C, U](id: AnyRef, f: (A, B, C) => U): (A, B, C) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"make4","t":"def make4[A, B, C, D, U](id: AnyRef, f: (A, B, C, D) => U): (A, B, C, D) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"cancel0","t":"def cancel0[U](id: AnyRef): () => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"cancel1","t":"def cancel1[A, U](id: AnyRef): A => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"cancel2","t":"def cancel2[A, B, U](id: AnyRef): (A, B) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"cancel3","t":"def cancel3[A, B, C, U](id: AnyRef): (A, B, C) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"cancel4","t":"def cancel4[A, B, C, D, U](id: AnyRef): (A, B, C, D) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"map0","t":"def map0[U](old: AnyRef, f: () => U): () => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"map1","t":"def map1[A, U](old: AnyRef, f: A => U): A => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"map2","t":"def map2[A, B, U](old: AnyRef, f: (A, B) => U): (A, B) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"map3","t":"def map3[A, B, C, U](old: AnyRef, f: (A, B, C) => U): (A, B, C) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Id$.html","n":"map4","t":"def map4[A, B, C, D, U](old: AnyRef, f: (A, B, C, D) => U): (A, B, C, D) => U","d":"scalqa/gen/event/Id$"},
{"l":"api/scalqa/gen/event/Observable.html","n":"Observable","t":"trait Observable","d":"scalqa/gen/event/Observable"},
{"l":"api/scalqa/gen/event/Observable.html","n":"onObservableChange","t":"def onObservableChange[U](l: () => U): Control","d":"scalqa/gen/event/Observable"},
{"l":"api/scalqa/gen/event/Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/gen/event/Observable$"},
{"l":"api/scalqa/gen/event/Observable$.html","n":"void","t":"def void: Observable","d":"scalqa/gen/event/Observable$"},
{"l":"api/scalqa/gen/event/Observable$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Observable","d":"scalqa/gen/event/Observable$"},
{"l":"api/scalqa/gen/event/Observable$.html","n":"X","t":"def X: X","d":"scalqa/gen/event/Observable$"},
{"l":"api/scalqa/gen/event/Store.html","n":"Store","t":"class Store extends _events with _entries with _activation with _properties","d":"scalqa/gen/event/Store"},
{"l":"api/scalqa/gen/event/Store.html","n":"add","t":"def add(typ: AnyRef, v: Any): Control","d":"scalqa/gen/event/Store"},
{"l":"api/scalqa/gen/event/Store$.html","n":"Store","t":"object Store","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"_activation","t":"type _activation = _activation","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"_entries","t":"type _entries = _entries","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"_events","t":"type _events = _events","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"_properties","t":"type _properties = _properties","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"Entry","t":"type Entry = Entry","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/Store$.html","n":"Provider","t":"type Provider = Provider","d":"scalqa/gen/event/Store$"},
{"l":"api/scalqa/gen/event/control.html","n":"scalqa.gen.event.control","t":"package scalqa.gen.event.control","d":"scalqa/gen/event/control"},
{"l":"api/scalqa/gen/event/control/X$.html","n":"X","t":"object X","d":"scalqa/gen/event/control/X$"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"Basic","t":"class Basic[A <: AnyRef](_target: A) extends Control","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"isCancelled","t":"def isCancelled: Boolean","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"onCancel","t":"def onCancel[U](f: () => U): Basic[A]","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"cancelIf","t":"def cancelIf(f: () => Boolean): Basic[A]","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"cancel","t":"def cancel: Boolean","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"fireOnCancel","t":"def fireOnCancel: Unit","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"removeHardReference","t":"def removeHardReference: AnyRef","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/control/X$$Basic.html","n":"targetOpt","t":"def targetOpt: DEF[A]","d":"scalqa/gen/event/control/X$$Basic"},
{"l":"api/scalqa/gen/event/observable.html","n":"scalqa.gen.event.observable","t":"package scalqa.gen.event.observable","d":"scalqa/gen/event/observable"},
{"l":"api/scalqa/gen/event/observable/X$.html","n":"X","t":"object X","d":"scalqa/gen/event/observable/X$"},
{"l":"api/scalqa/gen/event/observable/X$$Abstract.html","n":"Abstract","t":"class Abstract extends Base","d":"scalqa/gen/event/observable/X$$Abstract"},
{"l":"api/scalqa/gen/event/observable/X$$Base.html","n":"Base","t":"trait Base extends Observable with Provider","d":"scalqa/gen/event/observable/X$$Base"},
{"l":"api/scalqa/gen/event/observable/X$$Base.html","n":"onObservableChange","t":"def onObservableChange[U](f: () => U): Control","d":"scalqa/gen/event/observable/X$$Base"},
{"l":"api/scalqa/gen/event/observable/X$$Base.html","n":"fireAnyChange","t":"def fireAnyChange: Int","d":"scalqa/gen/event/observable/X$$Base"},
{"l":"api/scalqa/gen/event/store.html","n":"scalqa.gen.event.store","t":"package scalqa.gen.event.store","d":"scalqa/gen/event/store"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"_activation","t":"trait _activation","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"onActivateDeactivate","t":"def onActivateDeactivate[U](f: Boolean => U): Control","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"onActivateRun","t":"def onActivateRun(f: => Unit): Control","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"onDeactivateRun","t":"def onDeactivateRun(f: => Unit): Control","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"activate","t":"def activate(activeRule: () => Boolean): Unit","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_activation.html","n":"isActive","t":"def isActive: Boolean","d":"scalqa/gen/event/store/_activation"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"_entries","t":"trait _entries","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"add","t":"def add(typ: AnyRef, v: Any): Control","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"findOpt","t":"def findOpt(typ: AnyRef): DEF[Entry]","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"stream","t":"def stream(typ: AnyRef): Stream[Entry]","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"count","t":"def count: Int","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_entries.html","n":"toText","t":"def toText(label: DEF[String]): String","d":"scalqa/gen/event/store/_entries"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"_events","t":"class _events","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"onEvent0","t":"def onEvent0(typ: AnyRef, f: () => Any): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"onEvent1","t":"def onEvent1[P1](typ: AnyRef, f: P1 => Any): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"onEvent2","t":"def onEvent2[P1, P2](typ: AnyRef, f: (P1, P2) => Any): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"onEvent3","t":"def onEvent3[P1, P2, P3](typ: AnyRef, f: (P1, P2, P3) => Any): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"onEvent4","t":"def onEvent4[P1, P2, P3, P4](typ: AnyRef, f: (P1, P2, P3, P4) => Any): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"fireEvent0","t":"def fireEvent0[U](typ: AnyRef): Int","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"fireEvent1","t":"def fireEvent1[P1](typ: AnyRef, p1: P1): Int","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"fireEvent2","t":"def fireEvent2[P1, P2](typ: AnyRef, p1: P1, p2: P2): Int","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"fireEvent3","t":"def fireEvent3[P1, P2, P3](typ: AnyRef, p1: P1, p2: P2, p3: P3): Int","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"fireEvent4","t":"def fireEvent4[P1, P2, P3, P4](typ: AnyRef, p1: P1, p2: P2, p3: P3, p4: P4): Int","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_events.html","n":"setupEvent","t":"def setupEvent(typ: AnyRef, v: AnyRef): Control","d":"scalqa/gen/event/store/_events"},
{"l":"api/scalqa/gen/event/store/_properties.html","n":"_properties","t":"trait _properties","d":"scalqa/gen/event/store/_properties"},
{"l":"api/scalqa/gen/event/store/_properties.html","n":"setPropertyOpt","t":"def setPropertyOpt[B](id: AnyRef, value: B): DEF[B]","d":"scalqa/gen/event/store/_properties"},
{"l":"api/scalqa/gen/event/store/_properties.html","n":"getPropertyOpt","t":"def getPropertyOpt[B](id: AnyRef, dfltOpt: => DEF[B]): DEF[B]","d":"scalqa/gen/event/store/_properties"},
{"l":"api/scalqa/gen/event/store/_properties.html","n":"removePropertyOpt","t":"def removePropertyOpt[B](id: AnyRef): DEF[B]","d":"scalqa/gen/event/store/_properties"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"Entry","t":"trait Entry extends Doc with Void","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"`type`","t":"def `type`: Any","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"nextOpt","t":"def nextOpt: DEF[Entry]","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"value","t":"def value: Any","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"cancel","t":"def cancel: Boolean","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Entry.html","n":"isCancelled","t":"def isCancelled: Boolean","d":"scalqa/gen/event/store/Entry"},
{"l":"api/scalqa/gen/event/store/Provider.html","n":"Provider","t":"trait Provider","d":"scalqa/gen/event/store/Provider"},
{"l":"api/scalqa/gen/event/store/Provider.html","n":"eventStore","t":"val eventStore: Store","d":"scalqa/gen/event/store/Provider"},
{"l":"api/scalqa/gen/math.html","n":"scalqa.gen.math","t":"package scalqa.gen.math","d":"scalqa/gen/math"},
{"l":"api/scalqa/gen/math/Average.html","n":"Average","t":"trait Average[A]","d":"scalqa/gen/math/Average"},
{"l":"api/scalqa/gen/math/Average.html","n":"average","t":"def average(s: Stream[A]): A","d":"scalqa/gen/math/Average"},
{"l":"api/scalqa/gen/math/Average.html","n":"averageOpt","t":"def averageOpt(s: Stream[A]): DEF[A]","d":"scalqa/gen/math/Average"},
{"l":"api/scalqa/gen/math/Average.html","n":"averageCalculation","t":"def averageCalculation: Calculation[A]","d":"scalqa/gen/math/Average"},
{"l":"api/scalqa/gen/math/Average$.html","n":"Average","t":"object Average","d":"scalqa/gen/math/Average$"},
{"l":"api/scalqa/gen/math/Average$$Calculation.html","n":"Calculation","t":"trait Calculation[A]","d":"scalqa/gen/math/Average$$Calculation"},
{"l":"api/scalqa/gen/math/Average$$Calculation.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/gen/math/Average$$Calculation"},
{"l":"api/scalqa/gen/math/Average$$Calculation.html","n":"average","t":"def average: A","d":"scalqa/gen/math/Average$$Calculation"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"BigDecimal","t":"object BigDecimal extends Data[BigDecimal, BigDecimal]","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"apply","t":"def apply(inline v: BigDecimal): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"apply","t":"def apply(inline v: BigInteger | BigInteger): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"apply","t":"def apply(inline v: Double): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"apply","t":"def apply(inline v: String): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$$ordering$.html","n":"ordering","t":"given ordering: Ordering[BigDecimal]","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$$ordering$.html","n":"compare","t":"def compare(x: BigDecimal, y: BigDecimal): Int","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":">","t":"def >(inline v: Double | BigDecimal): Boolean","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":">=","t":"def >=(inline v: Double | BigDecimal): Boolean","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"<","t":"def <(inline v: Double | BigDecimal): Boolean","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"<=","t":"def <=(inline v: Double | BigDecimal): Boolean","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"+","t":"def +(inline v: Double | BigDecimal): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"-","t":"def -(inline v: Double | BigDecimal): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"*","t":"def *(inline v: Double | BigDecimal): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"/","t":"def /(inline v: Double | BigDecimal)(using inline r: Rounding): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"%","t":"def %(inline v: Double | BigDecimal): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"abs","t":"def abs: BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"unary_-","t":"def unary_-: BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"sign","t":"def sign: Int","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"toNumber","t":"def toNumber: BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"BigInteger","t":"def BigInteger: BigInteger","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$.html","n":"roundToDecimal","t":"def roundToDecimal(inline v: Int)(using inline r: Rounding): BigDecimal","d":"scalqa/gen/math/BigDecimal$"},
{"l":"api/scalqa/gen/math/BigDecimal$$ordering$.html","n":"ordering","t":"given ordering: Ordering[BigDecimal]","d":"scalqa/gen/math/BigDecimal$$ordering$"},
{"l":"api/scalqa/gen/math/BigDecimal$$ordering$.html","n":"compare","t":"def compare(x: BigDecimal, y: BigDecimal): Int","d":"scalqa/gen/math/BigDecimal$$ordering$"},
{"l":"api/scalqa/gen/math/BigDecimal.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/math/BigDecimal$$TYPE$"},
{"l":"api/scalqa/gen/math/BigDecimal.html","n":"DEF","t":"type DEF","d":"scalqa/gen/math/BigDecimal$$TYPE$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"BigInteger","t":"object BigInteger extends Data[BigInteger, BigInteger]","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"apply","t":"def apply(inline v: BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"apply","t":"def apply(inline v: Long): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"apply","t":"def apply(inline v: String): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$$ordering$.html","n":"ordering","t":"given ordering: Ordering[BigInteger]","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$$ordering$.html","n":"compare","t":"def compare(x: BigInteger, y: BigInteger): Int","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":">","t":"def >(inline v: Long | BigInteger): Boolean","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":">=","t":"def >=(inline v: Long | BigInteger): Boolean","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"<","t":"def <(inline v: Long | BigInteger): Boolean","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"<=","t":"def <=(inline v: Long | BigInteger): Boolean","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"+","t":"def +(inline v: Long | BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"-","t":"def -(inline v: Long | BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"*","t":"def *(inline v: Long | BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"/","t":"def /(inline v: Long | BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"%","t":"def %(inline v: Long | BigInteger): BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"abs","t":"def abs: BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"unary_-","t":"def unary_-: BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"sign","t":"def sign: Int","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"toLong","t":"def toLong: Long","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$.html","n":"toNumber","t":"def toNumber: BigInteger","d":"scalqa/gen/math/BigInteger$"},
{"l":"api/scalqa/gen/math/BigInteger$$ordering$.html","n":"ordering","t":"given ordering: Ordering[BigInteger]","d":"scalqa/gen/math/BigInteger$$ordering$"},
{"l":"api/scalqa/gen/math/BigInteger$$ordering$.html","n":"compare","t":"def compare(x: BigInteger, y: BigInteger): Int","d":"scalqa/gen/math/BigInteger$$ordering$"},
{"l":"api/scalqa/gen/math/BigInteger.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/math/BigInteger$$TYPE$"},
{"l":"api/scalqa/gen/math/BigInteger.html","n":"DEF","t":"type DEF","d":"scalqa/gen/math/BigInteger$$TYPE$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"Format","t":"object Format extends Base[Format, DecimalFormat]","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply(inline format: String): Format","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply(inline v: Double): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply(inline v: Long): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply(inline v: Number): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply[A <: Int](inline v: A): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply[A <: Long](inline v: A): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply[A <: Float](inline v: A): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format$.html","n":"apply","t":"def apply[A <: Double](inline v: A): String","d":"scalqa/gen/math/Format$"},
{"l":"api/scalqa/gen/math/Format.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/math/Format$$TYPE$"},
{"l":"api/scalqa/gen/math/Format.html","n":"DEF","t":"type DEF","d":"scalqa/gen/math/Format$$TYPE$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"Ordering","t":"object Ordering","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"apply","t":"def apply[A](using inline o: Ordering[A]): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"compare","t":"def compare[A](v: A, w: A): Int","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"compareOpt","t":"def compareOpt[A](v: DEF[A], w: DEF[A], none: Int): Int","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"reverse","t":"def reverse[A]: Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"map","t":"def map[A](f: U => A): Ordering[U]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"+","t":"def +[A](inline c: Ordering[A]): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"join","t":"def join[A](inline c: Ordering[A]): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"rankView","t":"def rankView[A](fun: A => Int): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"optView","t":"def optView[A](voidPosition: Int): Ordering[DEF[A]]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"voidFirstView","t":"def voidFirstView[A](using Void[A]): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering$.html","n":"voidLastView","t":"def voidLastView[A](using Void[A]): Ordering[A]","d":"scalqa/gen/math/Ordering$"},
{"l":"api/scalqa/gen/math/Ordering.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/math/Ordering$$TYPE$"},
{"l":"api/scalqa/gen/math/Ordering.html","n":"DEF","t":"type DEF[A] = Ordering[A]","d":"scalqa/gen/math/Ordering$$TYPE$"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"Rounding","t":"class Rounding","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"mode","t":"val mode: RoundingMode","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Byte, size: Byte): Byte","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Short, size: Short): Short","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Int, size: Int): Int","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Float, size: Float): Float","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Long, size: Long): Long","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"apply","t":"def apply(v: Double, size: Double): Double","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding.html","n":"decimal","t":"def decimal(v: Double, scale: Int): Double","d":"scalqa/gen/math/Rounding"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"Rounding","t":"object Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"Up","t":"val Up: Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"Down","t":"val Down: Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"HalfUp","t":"val HalfUp: Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"default","t":"val default: Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"implicitRequest","t":"def implicitRequest(v: DEFAULT): Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"implicitRequest","t":"def implicitRequest(v: UP): Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Rounding$.html","n":"implicitRequest","t":"def implicitRequest(v: DOWN): Rounding","d":"scalqa/gen/math/Rounding$"},
{"l":"api/scalqa/gen/math/Sum.html","n":"Sum","t":"trait Sum[A]","d":"scalqa/gen/math/Sum"},
{"l":"api/scalqa/gen/math/Sum.html","n":"sumOpt","t":"def sumOpt(s: Stream[A]): DEF[A]","d":"scalqa/gen/math/Sum"},
{"l":"api/scalqa/gen/math/Sum.html","n":"zero","t":"def zero: A","d":"scalqa/gen/math/Sum"},
{"l":"api/scalqa/gen/math/Sum.html","n":"plus","t":"def plus(x: A, y: A): A","d":"scalqa/gen/math/Sum"},
{"l":"api/scalqa/gen/request.html","n":"scalqa.gen.request","t":"package scalqa.gen.request","d":"scalqa/gen/request"},
{"l":"api/scalqa/gen/request/ALL.html","n":"ALL","t":"class ALL extends Request","d":"scalqa/gen/request/ALL"},
{"l":"api/scalqa/gen/request/ALL$.html","n":"ALL","t":"object ALL extends ALL","d":"scalqa/gen/request/ALL$"},
{"l":"api/scalqa/gen/request/BOTTOM.html","n":"BOTTOM","t":"class BOTTOM extends Request","d":"scalqa/gen/request/BOTTOM"},
{"l":"api/scalqa/gen/request/BOTTOM$.html","n":"BOTTOM","t":"object BOTTOM extends BOTTOM","d":"scalqa/gen/request/BOTTOM$"},
{"l":"api/scalqa/gen/request/CENTER.html","n":"CENTER","t":"class CENTER extends Request","d":"scalqa/gen/request/CENTER"},
{"l":"api/scalqa/gen/request/CENTER$.html","n":"CENTER","t":"object CENTER extends CENTER","d":"scalqa/gen/request/CENTER$"},
{"l":"api/scalqa/gen/request/CURRENT.html","n":"CURRENT","t":"class CURRENT extends Request","d":"scalqa/gen/request/CURRENT"},
{"l":"api/scalqa/gen/request/CURRENT$.html","n":"CURRENT","t":"object CURRENT extends CURRENT","d":"scalqa/gen/request/CURRENT$"},
{"l":"api/scalqa/gen/request/DEFAULT.html","n":"DEFAULT","t":"class DEFAULT extends Request","d":"scalqa/gen/request/DEFAULT"},
{"l":"api/scalqa/gen/request/DEFAULT$.html","n":"DEFAULT","t":"object DEFAULT extends DEFAULT","d":"scalqa/gen/request/DEFAULT$"},
{"l":"api/scalqa/gen/request/DEFAULT$.html","n":"implicitToExecutionContext","t":"def implicitToExecutionContext(inline v: DEFAULT): ExecutionContext","d":"scalqa/gen/request/DEFAULT$"},
{"l":"api/scalqa/gen/request/DEFAULT$.html","n":"implicitToStringFunction","t":"def implicitToStringFunction[A](inline v: DEFAULT): A => String","d":"scalqa/gen/request/DEFAULT$"},
{"l":"api/scalqa/gen/request/DEFAULT$$z_ToString$.html","n":"z_ToString","t":"object z_ToString extends Any => String","d":"scalqa/gen/request/DEFAULT$$z_ToString$"},
{"l":"api/scalqa/gen/request/DEFAULT$$z_ToString$.html","n":"apply","t":"def apply(v: Any): String","d":"scalqa/gen/request/DEFAULT$$z_ToString$"},
{"l":"api/scalqa/gen/request/DOWN.html","n":"DOWN","t":"class DOWN extends Request","d":"scalqa/gen/request/DOWN"},
{"l":"api/scalqa/gen/request/DOWN$.html","n":"DOWN","t":"object DOWN extends DOWN","d":"scalqa/gen/request/DOWN$"},
{"l":"api/scalqa/gen/request/EMPTY.html","n":"EMPTY","t":"class EMPTY extends Request","d":"scalqa/gen/request/EMPTY"},
{"l":"api/scalqa/gen/request/EMPTY$.html","n":"EMPTY","t":"object EMPTY extends EMPTY","d":"scalqa/gen/request/EMPTY$"},
{"l":"api/scalqa/gen/request/HORIZONTAL.html","n":"HORIZONTAL","t":"class HORIZONTAL extends Request","d":"scalqa/gen/request/HORIZONTAL"},
{"l":"api/scalqa/gen/request/HORIZONTAL$.html","n":"HORIZONTAL","t":"object HORIZONTAL extends HORIZONTAL","d":"scalqa/gen/request/HORIZONTAL$"},
{"l":"api/scalqa/gen/request/LEFT.html","n":"LEFT","t":"class LEFT extends Request","d":"scalqa/gen/request/LEFT"},
{"l":"api/scalqa/gen/request/LEFT$.html","n":"LEFT","t":"object LEFT extends LEFT","d":"scalqa/gen/request/LEFT$"},
{"l":"api/scalqa/gen/request/MAX.html","n":"MAX","t":"class MAX extends Request","d":"scalqa/gen/request/MAX"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"MAX","t":"object MAX extends MAX","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToChar","t":"def implicitToChar(inline v: MAX): Char","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToByte","t":"def implicitToByte(inline v: MAX): Byte","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToShort","t":"def implicitToShort(inline v: MAX): Short","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToInt","t":"def implicitToInt(inline v: MAX): Int","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToLong","t":"def implicitToLong(inline v: MAX): Long","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToFloat","t":"def implicitToFloat(inline v: MAX): Float","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MAX$.html","n":"implicitToDouble","t":"def implicitToDouble(inline v: MAX): Double","d":"scalqa/gen/request/MAX$"},
{"l":"api/scalqa/gen/request/MIN.html","n":"MIN","t":"class MIN extends Request","d":"scalqa/gen/request/MIN"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"MIN","t":"object MIN extends MIN","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToChar","t":"def implicitToChar(inline v: MIN): Char","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToByte","t":"def implicitToByte(inline v: MIN): Byte","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToShort","t":"def implicitToShort(inline v: MIN): Short","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToInt","t":"def implicitToInt(inline v: MIN): Int","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToLong","t":"def implicitToLong(inline v: MIN): Long","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToFloat","t":"def implicitToFloat(inline v: MIN): Float","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/MIN$.html","n":"implicitToDouble","t":"def implicitToDouble(inline v: MIN): Double","d":"scalqa/gen/request/MIN$"},
{"l":"api/scalqa/gen/request/NEW.html","n":"NEW","t":"class NEW extends Request","d":"scalqa/gen/request/NEW"},
{"l":"api/scalqa/gen/request/NEW$.html","n":"NEW","t":"object NEW extends NEW","d":"scalqa/gen/request/NEW$"},
{"l":"api/scalqa/gen/request/NEW$.html","n":"implicitToScalaBuffer","t":"def implicitToScalaBuffer[A](inline v: NEW): Buffer[A]","d":"scalqa/gen/request/NEW$"},
{"l":"api/scalqa/gen/request/NEW$.html","n":"implicitToScalaArrayBuffer","t":"def implicitToScalaArrayBuffer[A](inline v: NEW): ArrayBuffer[A]","d":"scalqa/gen/request/NEW$"},
{"l":"api/scalqa/gen/request/NEW$.html","n":"implicitToJavaArrayList","t":"def implicitToJavaArrayList[A](inline v: NEW): ArrayList[A]","d":"scalqa/gen/request/NEW$"},
{"l":"api/scalqa/gen/request/RIGHT.html","n":"RIGHT","t":"class RIGHT extends Request","d":"scalqa/gen/request/RIGHT"},
{"l":"api/scalqa/gen/request/RIGHT$.html","n":"RIGHT","t":"object RIGHT extends RIGHT","d":"scalqa/gen/request/RIGHT$"},
{"l":"api/scalqa/gen/request/SEPARATOR.html","n":"SEPARATOR","t":"class SEPARATOR extends Request","d":"scalqa/gen/request/SEPARATOR"},
{"l":"api/scalqa/gen/request/SEPARATOR$.html","n":"SEPARATOR","t":"object SEPARATOR extends SEPARATOR","d":"scalqa/gen/request/SEPARATOR$"},
{"l":"api/scalqa/gen/request/TOP.html","n":"TOP","t":"class TOP extends Request","d":"scalqa/gen/request/TOP"},
{"l":"api/scalqa/gen/request/TOP$.html","n":"TOP","t":"object TOP extends TOP","d":"scalqa/gen/request/TOP$"},
{"l":"api/scalqa/gen/request/UP.html","n":"UP","t":"class UP extends Request","d":"scalqa/gen/request/UP"},
{"l":"api/scalqa/gen/request/UP$.html","n":"UP","t":"object UP extends UP","d":"scalqa/gen/request/UP$"},
{"l":"api/scalqa/gen/request/VERTICAL.html","n":"VERTICAL","t":"class VERTICAL extends Request","d":"scalqa/gen/request/VERTICAL"},
{"l":"api/scalqa/gen/request/VERTICAL$.html","n":"VERTICAL","t":"object VERTICAL extends VERTICAL","d":"scalqa/gen/request/VERTICAL$"},
{"l":"api/scalqa/gen/request/VOID.html","n":"VOID","t":"class VOID extends Request","d":"scalqa/gen/request/VOID"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"VOID","t":"object VOID extends VOID with z_VOIDDefaults","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToString","t":"def implicitToString(v: VOID): String","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToException","t":"def implicitToException(v: VOID): Exception","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToJavaList","t":"def implicitToJavaList[A](v: VOID): List[A]","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToFunction0","t":"def implicitToFunction0(v: VOID): () => Unit","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToFunction1","t":"def implicitToFunction1[A](v: VOID): A => Unit","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToFunction2","t":"def implicitToFunction2[A, B](v: VOID): (A, B) => Unit","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToFunction3","t":"def implicitToFunction3[A, B, C](v: VOID): (A, B, C) => Unit","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToFunction4","t":"def implicitToFunction4[A, B, C, D](v: VOID): (A, B, C, D) => Unit","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"implicitToOrdering","t":"def implicitToOrdering[A](v: VOID): Ordering[A]","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"givenToMath","t":"given givenToMath","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/request/VOID$.html","n":"givenToAverage","t":"given givenToAverage","d":"scalqa/gen/request/VOID$"},
{"l":"api/scalqa/gen/time.html","n":"scalqa.gen.time","t":"package scalqa.gen.time","d":"scalqa/gen/time"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"DayTime","t":"object DayTime extends Ordered[DayTime] with Length","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"_0_Hours","t":"def _0_Hours: DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"_24_Hours","t":"def _24_Hours: DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"current","t":"def current: DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"apply","t":"def apply(hours: Int, min: Int, sec: Int): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"apply","t":"def apply(unit: Length, more: Length*): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"nanos","t":"def nanos(inline n: Long): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"millis","t":"def millis(inline m: Long): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"seconds","t":"def seconds(inline v: Long): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"implicitFromLength","t":"def implicitFromLength(inline v: Length): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"length","t":"def length: Length","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"tagBrief","t":"def tagBrief: String","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"+","t":"def +(inline l: Length): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime$.html","n":"-","t":"def -(inline l: Length): DayTime","d":"scalqa/gen/time/DayTime$"},
{"l":"api/scalqa/gen/time/DayTime.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/time/DayTime$$TYPE$"},
{"l":"api/scalqa/gen/time/DayTime.html","n":"DEF","t":"type DEF","d":"scalqa/gen/time/DayTime$$TYPE$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"Gmt","t":"object Gmt extends Data[Gmt] with Base[Gmt] with Base","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"fromIndex","t":"def fromIndex(inline v: Long): Gmt","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"current","t":"def current: Gmt","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Gmt","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"genTime","t":"def genTime: Time","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"+","t":"def +(inline l: Length): Gmt","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt$.html","n":"-","t":"def -(inline l: Length): Gmt","d":"scalqa/gen/time/Gmt$"},
{"l":"api/scalqa/gen/time/Gmt.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/time/Gmt$$TYPE$"},
{"l":"api/scalqa/gen/time/Gmt.html","n":"DEF","t":"type DEF","d":"scalqa/gen/time/Gmt$$TYPE$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"Instant","t":"object Instant extends Ordered[Instant] with Base[Instant] with Base","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"fromNanos","t":"def fromNanos(inline v: Long): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"apply","t":"def apply(): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"apply","t":"def apply(i: Instant): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"genTime","t":"def genTime: Time","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"+","t":"def +(inline l: Length): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant$.html","n":"-","t":"def -(inline l: Length): Instant","d":"scalqa/gen/time/Instant$"},
{"l":"api/scalqa/gen/time/Instant.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/time/Instant$$TYPE$"},
{"l":"api/scalqa/gen/time/Instant.html","n":"DEF","t":"type DEF","d":"scalqa/gen/time/Instant$$TYPE$"},
{"l":"api/scalqa/gen/time/Length$.html","n":"Length","t":"object Length extends Calculable[Length] with Length","d":"scalqa/gen/time/Length$"},
{"l":"api/scalqa/gen/time/Length$.html","n":"apply","t":"def apply(v: Length*): Length","d":"scalqa/gen/time/Length$"},
{"l":"api/scalqa/gen/time/Length$.html","n":"fromNanos","t":"def fromNanos(inline v: Long): Length","d":"scalqa/gen/time/Length$"},
{"l":"api/scalqa/gen/time/Length$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Length","d":"scalqa/gen/time/Length$"},
{"l":"api/scalqa/gen/time/Length$.html","n":"tagBrief","t":"def tagBrief: String","d":"scalqa/gen/time/Length$"},
{"l":"api/scalqa/gen/time/Length.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/time/Length$$TYPE$"},
{"l":"api/scalqa/gen/time/Length.html","n":"DEF","t":"type DEF","d":"scalqa/gen/time/Length$$TYPE$"},
{"l":"api/scalqa/gen/time/Period.html","n":"Period","t":"class Period extends Base[Time, Period]","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"start","t":"val start: Time","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"end","t":"val end: Time","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"endIsIn","t":"val endIsIn: Boolean","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"ordering","t":"def ordering: Ordering[Time]","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"length","t":"def length: Length","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"lastDay","t":"def lastDay: Day","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period.html","n":"dayStream","t":"def dayStream: Stream[Day]","d":"scalqa/gen/time/Period"},
{"l":"api/scalqa/gen/time/Period$.html","n":"Period","t":"object Period","d":"scalqa/gen/time/Period$"},
{"l":"api/scalqa/gen/time/Period$.html","n":"apply","t":"def apply(start: Time, end: Time): Period","d":"scalqa/gen/time/Period$"},
{"l":"api/scalqa/gen/time/Period$.html","n":"apply","t":"def apply(r: Range[Time]): Period","d":"scalqa/gen/time/Period$"},
{"l":"api/scalqa/gen/time/X$.html","n":"X","t":"object X","d":"scalqa/gen/time/X$"},
{"l":"api/scalqa/gen/time/X$.html","n":"Base","t":"type Base[A <: Long] = Base[A]","d":"scalqa/gen/time/X$"},
{"l":"api/scalqa/gen/time/X$.html","n":"Nanos","t":"def Nanos: Nanos","d":"scalqa/gen/time/X$"},
{"l":"api/scalqa/gen/time/X$.html","n":"Millis","t":"def Millis: Millis","d":"scalqa/gen/time/X$"},
{"l":"api/scalqa/gen/time/Zone$.html","n":"Zone","t":"object Zone extends Doc","d":"scalqa/gen/time/Zone$"},
{"l":"api/scalqa/gen/time/Zone$.html","n":"id","t":"val id: ZoneId","d":"scalqa/gen/time/Zone$"},
{"l":"api/scalqa/gen/time/Zone$.html","n":"offset","t":"val offset: Length","d":"scalqa/gen/time/Zone$"},
{"l":"api/scalqa/gen/time/Zone$.html","n":"doc","t":"def doc: Doc","d":"scalqa/gen/time/Zone$"},
{"l":"api/scalqa/gen/time/x.html","n":"scalqa.gen.time.x","t":"package scalqa.gen.time.x","d":"scalqa/gen/time/x"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"Base","t":"trait Base[A <: Long]","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"genTime","t":"def genTime: Time","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"day","t":"def day: Day","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"dayTime","t":"def dayTime: DayTime","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"week","t":"def week: Week","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"month","t":"def month: Month","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"year","t":"def year: Year","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"isFuture","t":"def isFuture: Boolean","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"isPast","t":"def isPast: Boolean","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"isDayStart","t":"def isDayStart: Boolean","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"isMonthStart","t":"def isMonthStart: Boolean","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"isYearStart","t":"def isYearStart: Boolean","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Base.html","n":"tagBrief","t":"def tagBrief: String","d":"scalqa/gen/time/x/Base"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"Millis","t":"object Millis","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"InOneSecond","t":"val InOneSecond: 1000L","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"InOneMinute","t":"val InOneMinute: 60000L","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"InOneHour","t":"val InOneHour: 3600000L","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"InOneDay","t":"val InOneDay: 86400000L","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$.html","n":"InOneWeek","t":"val InOneWeek: 604800000L","d":"scalqa/gen/time/x/Millis$"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"Base","t":"trait Base","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"nanos","t":"def nanos[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"micros","t":"def micros[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"millis","t":"def millis[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"seconds","t":"def seconds[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"minutes","t":"def minutes[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"hours","t":"def hours[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Millis$$Base.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](l: Length)(using r: Rounding): THIS_OPAQUE","d":"scalqa/gen/time/x/Millis$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"Nanos","t":"object Nanos","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneMicros","t":"val InOneMicros: 1000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneMillis","t":"val InOneMillis: 1000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneSecond","t":"val InOneSecond: 1000000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneMinute","t":"val InOneMinute: 60000000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneHour","t":"val InOneHour: 3600000000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneDay","t":"val InOneDay: 86400000000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$.html","n":"InOneWeek","t":"val InOneWeek: 604800000000000L","d":"scalqa/gen/time/x/Nanos$"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"Base","t":"trait Base","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"nanos","t":"def nanos[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"micros","t":"def micros[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"millis","t":"def millis[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"seconds","t":"def seconds[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"minutes","t":"def minutes[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"hours","t":"def hours[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](l: Length)(using r: Rounding): THIS_OPAQUE","d":"scalqa/gen/time/x/Nanos$$Base"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$.html","n":"Base","t":"object Base","d":"scalqa/gen/time/x/Nanos$$Base$"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"Length","t":"trait Length extends Base","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"nanosTotal","t":"def nanosTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"microsTotal","t":"def microsTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"millisTotal","t":"def millisTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"secondsTotal","t":"def secondsTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"minutesTotal","t":"def minutesTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"hoursTotal","t":"def hoursTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"daysTotal","t":"def daysTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/time/x/Nanos$$Base$$Length.html","n":"weeksTotal","t":"def weeksTotal[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/gen/time/x/Nanos$$Base$$Length"},
{"l":"api/scalqa/gen/util.html","n":"scalqa.gen.util","t":"package scalqa.gen.util","d":"scalqa/gen/util"},
{"l":"api/scalqa/gen/util/ByteCount$.html","n":"ByteCount","t":"object ByteCount extends Numerical[ByteCount]","d":"scalqa/gen/util/ByteCount$"},
{"l":"api/scalqa/gen/util/ByteCount$.html","n":"apply","t":"def apply(inline v: Long): ByteCount","d":"scalqa/gen/util/ByteCount$"},
{"l":"api/scalqa/gen/util/ByteCount$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): ByteCount","d":"scalqa/gen/util/ByteCount$"},
{"l":"api/scalqa/gen/util/ByteCount$.html","n":"tagBrief","t":"def tagBrief: String","d":"scalqa/gen/util/ByteCount$"},
{"l":"api/scalqa/gen/util/ByteCount.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/util/ByteCount$$TYPE$"},
{"l":"api/scalqa/gen/util/ByteCount.html","n":"DEF","t":"type DEF","d":"scalqa/gen/util/ByteCount$$TYPE$"},
{"l":"api/scalqa/gen/util/EnumCompanion.html","n":"EnumCompanion","t":"class EnumCompanion[A <: Enum] extends Idx[A]","d":"scalqa/gen/util/EnumCompanion"},
{"l":"api/scalqa/gen/util/EnumCompanion.html","n":"values","t":"def values: Array[A]","d":"scalqa/gen/util/EnumCompanion"},
{"l":"api/scalqa/gen/util/EnumCompanion.html","n":"pack","t":"val pack: Pack[A]","d":"scalqa/gen/util/EnumCompanion"},
{"l":"api/scalqa/gen/util/EnumCompanion.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/gen/util/EnumCompanion"},
{"l":"api/scalqa/gen/util/EnumCompanion.html","n":"size","t":"def size: Int","d":"scalqa/gen/util/EnumCompanion"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"Percent","t":"object Percent extends Numerical[Percent]","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline v: Double): Percent","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(value: Double, base: Double): Percent","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(value: Number, base: Number): Percent","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Percent","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: Int): Int","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: Long): Long","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: Float): Float","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: Double): Double","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: A)(using inline n: Numeric[A]): A","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: A)(using inline n: Numeric[A]): A","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: A)(using inline n: Numeric[A]): A","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent$.html","n":"apply","t":"def apply(inline nv: A)(using inline n: Numeric[A]): A","d":"scalqa/gen/util/Percent$"},
{"l":"api/scalqa/gen/util/Percent.html","n":"TYPE","t":"object TYPE","d":"scalqa/gen/util/Percent$$TYPE$"},
{"l":"api/scalqa/gen/util/Percent.html","n":"DEF","t":"type DEF","d":"scalqa/gen/util/Percent$$TYPE$"},
{"l":"api/scalqa/gen/util/TwoWayFunction.html","n":"TwoWayFunction","t":"trait TwoWayFunction[A, B] extends A => B","d":"scalqa/gen/util/TwoWayFunction"},
{"l":"api/scalqa/gen/util/TwoWayFunction.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/gen/util/TwoWayFunction"},
{"l":"api/scalqa/gen/util/TwoWayFunction.html","n":"undo","t":"def undo(v: B): A","d":"scalqa/gen/util/TwoWayFunction"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"TwoWayFunction","t":"object TwoWayFunction","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"apply","t":"def apply[A, B](af: A => B, bf: B => A): TwoWayFunction[A, B]","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"wrap","t":"def wrap[A, B](f: A => B): TwoWayFunction[A, B]","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"void","t":"def void[A, B]: TwoWayFunction[A, B]","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"implicitRequest","t":"def implicitRequest[A, B](v: VOID): TwoWayFunction[A, B]","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/util/TwoWayFunction$.html","n":"reverse","t":"def reverse[A, B]: TwoWayFunction[B, A]","d":"scalqa/gen/util/TwoWayFunction$"},
{"l":"api/scalqa/gen/void.html","n":"scalqa.gen.void","t":"package scalqa.gen.void","d":"scalqa/gen/void"},
{"l":"api/scalqa/gen/void/Setup.html","n":"Setup","t":"class Setup[A](voidValue: A)","d":"scalqa/gen/void/Setup"},
{"l":"api/scalqa/gen/void/Setup.html","n":"void","t":"val void: A","d":"scalqa/gen/void/Setup"},
{"l":"api/scalqa/gen/void/Setup.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): A","d":"scalqa/gen/void/Setup"},
{"l":"api/scalqa/j.html","n":"scalqa.j","t":"package scalqa.j","d":"scalqa/j"},
{"l":"api/scalqa/j/File$.html","n":"File","t":"object File extends Base[File, File]","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"apply","t":"def apply(inline v: File): File","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"implicitFromReal","t":"def implicitFromReal(inline v: File): File","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"name","t":"def name: String","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"path","t":"def path: Path","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"exists","t":"def exists: Boolean","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"lastModified","t":"def lastModified: Time","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"extension","t":"def extension: String","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"size","t":"def size: ByteCount","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"openOutput","t":"def openOutput: Output","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"openInput","t":"def openInput: Input","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"readString","t":"def readString: String","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"writeString","t":"def writeString(inline s: String): Unit","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"delete","t":"def delete: Boolean","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"temp","t":"def temp: File","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"move","t":"def move(inline trgt: Path, inline overwrite: Boolean): File","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"copy","t":"def copy(inline p: Path, inline overwrite: Boolean, inline copyAttr: Boolean): File","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"Path","t":"type Path = DEF","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"Path","t":"def Path: Path","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"Store","t":"type Store = DEF","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"Store","t":"def Store: Store","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"System","t":"type System = DEF","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File$.html","n":"System","t":"def System: System","d":"scalqa/j/File$"},
{"l":"api/scalqa/j/File.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/File$$TYPE$"},
{"l":"api/scalqa/j/File.html","n":"DEF","t":"type DEF","d":"scalqa/j/File$$TYPE$"},
{"l":"api/scalqa/j/Io$.html","n":"Io","t":"object Io","d":"scalqa/j/Io$"},
{"l":"api/scalqa/j/Io$.html","n":"Input","t":"def Input: Input","d":"scalqa/j/Io$"},
{"l":"api/scalqa/j/Io$.html","n":"Input","t":"type Input = DEF","d":"scalqa/j/Io$"},
{"l":"api/scalqa/j/Io$.html","n":"Output","t":"def Output: Output","d":"scalqa/j/Io$"},
{"l":"api/scalqa/j/Io$.html","n":"Output","t":"type Output = DEF","d":"scalqa/j/Io$"},
{"l":"api/scalqa/j/Json$.html","n":"Json","t":"object Json","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"Format","t":"type Format = Format","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"Array","t":"type Array = Array","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"Array","t":"def Array: Array","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"Object","t":"type Object = Object","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"Object","t":"def Object: Object","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"format","t":"def format(v: Object | Array): String","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"parseResult","t":"def parseResult(s: String): DEF[Object | Array]","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"parseObjectResult","t":"def parseObjectResult(s: String): DEF[Object]","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Json$.html","n":"parseArrayResult","t":"def parseArrayResult(s: String): DEF[Array]","d":"scalqa/j/Json$"},
{"l":"api/scalqa/j/Url$.html","n":"Url","t":"object Url extends Base[Url, URL]","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"apply","t":"def apply(inline v: URL): Url","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"apply","t":"def apply(inline v: String): Url","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"apply","t":"def apply(c: Class[_], resourceName: String): Url","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"implicitFromReal","t":"def implicitFromReal(inline v: URL): Url","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"host","t":"def host: String","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"port","t":"def port: Int","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"openConnection","t":"def openConnection: Connection","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"openInput","t":"def openInput: Input","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"readString","t":"def readString: String","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"readString","t":"def readString(timeOut: Length): String","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"Connection","t":"type Connection = DEF","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url$.html","n":"Connection","t":"def Connection: Connection","d":"scalqa/j/Url$"},
{"l":"api/scalqa/j/Url.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/Url$$TYPE$"},
{"l":"api/scalqa/j/Url.html","n":"DEF","t":"type DEF","d":"scalqa/j/Url$$TYPE$"},
{"l":"api/scalqa/j/Util$.html","n":"Util","t":"object Util","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Concurrent","t":"def Concurrent: Concurrent","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"WeakRef","t":"def WeakRef: WeakRef","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"WeakRef","t":"type WeakRef[A] = DEF[A]","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Benchmark","t":"def Benchmark: Benchmark","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Random","t":"def Random: Random","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Proxy","t":"def Proxy: Proxy","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Proxy","t":"type Proxy[A] = Proxy[A]","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Util$.html","n":"Test","t":"type Test = Test","d":"scalqa/j/Util$"},
{"l":"api/scalqa/j/Vm$.html","n":"Vm","t":"object Vm","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"host","t":"def host: String","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"address","t":"def address: String","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"availableProcessors","t":"def availableProcessors: Int","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"exit","t":"def exit: Unit","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"reload","t":"def reload(className: String, paths: Stream[Path]): Class[_]","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"Priority","t":"def Priority: Priority","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"Priority","t":"type Priority = DEF","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"Setup","t":"def Setup: Setup","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Vm$.html","n":"Memory","t":"def Memory: Memory","d":"scalqa/j/Vm$"},
{"l":"api/scalqa/j/Zip$.html","n":"Zip","t":"object Zip","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/Zip$.html","n":"load","t":"def load(file: File, entryNamefilter: String => Boolean): Stream[(String, Pro[Input])]","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/Zip$.html","n":"save","t":"def save(file: File, entries: Stream[(String, Pro[Input])], level: Int, writeEmptyFile: Boolean): Unit","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/Zip$.html","n":"compress","t":"def compress(data: Array[Byte]): Array[Byte]","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/Zip$.html","n":"decompress","t":"def decompress(data: Array[Byte]): Array[Byte]","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/Zip$.html","n":"Format","t":"type Format[A] = Format[A]","d":"scalqa/j/Zip$"},
{"l":"api/scalqa/j/file.html","n":"scalqa.j.file","t":"package scalqa.j.file","d":"scalqa/j/file"},
{"l":"api/scalqa/j/file/Path$.html","n":"Path","t":"object Path extends Base[Path, Path] with _methods","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"apply","t":"def apply(v: Path): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"current","t":"def current: Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"apply","t":"def apply(s: String, more: String*): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"apply","t":"def apply(names: Stream[String]): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"void","t":"def void: Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"implicitFromReal","t":"def implicitFromReal(inline v: Path): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"implicitFromString","t":"def implicitFromString(inline v: String): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"implicitFromFile","t":"def implicitFromFile(inline v: File): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path$.html","n":"implicitRequest","t":"def implicitRequest(v: CURRENT): Path","d":"scalqa/j/file/Path$"},
{"l":"api/scalqa/j/file/Path.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/file/Path$$TYPE$"},
{"l":"api/scalqa/j/file/Path.html","n":"DEF","t":"type DEF","d":"scalqa/j/file/Path$$TYPE$"},
{"l":"api/scalqa/j/file/Store$.html","n":"Store","t":"object Store extends Base[Store, FileStore]","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"apply","t":"def apply(v: FileStore): Store","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"name","t":"def name: String","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"label","t":"def label: String","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"totalSpace","t":"def totalSpace: ByteCount","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"unallocatedSpace","t":"def unallocatedSpace: ByteCount","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store$.html","n":"usableSpace","t":"def usableSpace: ByteCount","d":"scalqa/j/file/Store$"},
{"l":"api/scalqa/j/file/Store.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/file/Store$$TYPE$"},
{"l":"api/scalqa/j/file/Store.html","n":"DEF","t":"type DEF","d":"scalqa/j/file/Store$$TYPE$"},
{"l":"api/scalqa/j/file/System$.html","n":"System","t":"object System extends Base[System, FileSystem]","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"apply","t":"def apply(): System","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"storeStream","t":"def storeStream: Stream[Store]","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"rootStream","t":"def rootStream: Stream[Path]","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"separator","t":"def separator: String","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"path","t":"def path(inline first: String, inline more: String*): Path","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System$.html","n":"path","t":"def path(inline a: Stream[String]): Path","d":"scalqa/j/file/System$"},
{"l":"api/scalqa/j/file/System.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/file/System$$TYPE$"},
{"l":"api/scalqa/j/file/System.html","n":"DEF","t":"type DEF","d":"scalqa/j/file/System$$TYPE$"},
{"l":"api/scalqa/j/file/path.html","n":"scalqa.j.file.path","t":"package scalqa.j.file.path","d":"scalqa/j/file/path"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"names","t":"def names: Idx[String]","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"parent","t":"def parent: Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"lastName","t":"def lastName: String","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"normalize","t":"def normalize: Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"delete","t":"def delete: Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"isFile","t":"def isFile: Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"isDirectory","t":"def isDirectory: Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"exists","t":"def exists: Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"endsWith","t":"def endsWith(p: Path): Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"startsWith","t":"def startsWith(p: Path): Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"name","t":"def name(idx: Int): String","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"contains","t":"def contains(v: Path): Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"contains","t":"def contains(name: String, more: String*): Boolean","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"size","t":"def size: Int","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"rootOpt","t":"def rootOpt: DEF[Path]","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"root","t":"def root: Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"rootMake","t":"def rootMake: Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"rootDrop","t":"def rootDrop: Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"childStream","t":"def childStream: Stream[Path]","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"childRecursiveStream","t":"def childRecursiveStream: Stream[Path]","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"fileOpt","t":"def fileOpt: DEF[File]","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"file","t":"def file: File","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"make","t":"def make: Unit","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"indexOpt","t":"def indexOpt(p: Path): Opt","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"join","t":"def join(v: Path | String): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"joinAll","t":"def joinAll(v: Stream[Path | String]): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"+","t":"def +(inline v: Path | String): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"++","t":"def ++(inline v: Stream[Path | String]): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeRange","t":"def takeRange(start: Int, size: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeRange","t":"def takeRange(r: Range): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeFirst","t":"def takeFirst(cnt: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeLast","t":"def takeLast(cnt: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeFrom","t":"def takeFrom(p: Path, dflt: Path): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeAfter","t":"def takeAfter(p: Path, dflt: Path): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"takeBefore","t":"def takeBefore(p: Path, dflt: Path): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"dropRange","t":"def dropRange(f: Int, sz: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"dropRange","t":"def dropRange(r: Range): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"dropFirst","t":"def dropFirst(cnt: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/file/path/_methods.html","n":"dropLast","t":"def dropLast(cnt: Int): Path","d":"scalqa/j/file/path/_methods"},
{"l":"api/scalqa/j/io.html","n":"scalqa.j.io","t":"package scalqa.j.io","d":"scalqa/j/io"},
{"l":"api/scalqa/j/io/Input$.html","n":"Input","t":"object Input extends Base[Input, InputStream]","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"apply","t":"def apply(v: InputStream): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"apply","t":"def apply(ba: Array[Byte]): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"apply","t":"def apply(ba: Array[Byte], offs: Int, length: Int): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"apply","t":"def apply(text: String): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"apply","t":"def apply(f: Path): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"void","t":"def void: Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"implicitFromReal","t":"def implicitFromReal(v: InputStream): Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"asBytes","t":"def asBytes: Bytes","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"asData","t":"def asData: Data","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"asText","t":"def asText: Text","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"load","t":"def load: Input","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Bytes","t":"type Bytes = DEF","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Bytes","t":"def Bytes: Bytes","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Data","t":"type Data = DEF","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Data","t":"def Data: Data","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Text","t":"type Text = DEF","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input$.html","n":"Text","t":"def Text: Text","d":"scalqa/j/io/Input$"},
{"l":"api/scalqa/j/io/Input.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/Input$$TYPE$"},
{"l":"api/scalqa/j/io/Input.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/Input$$TYPE$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Output","t":"object Output extends Base[Output, OutputStream]","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"apply","t":"def apply(inline v: OutputStream): Output","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"apply","t":"def apply(f: Path): Output","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"asBytes","t":"def asBytes: Bytes","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"asText","t":"def asText: Text","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"asData","t":"def asData: Data","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"asPrinter","t":"def asPrinter: PrintStream","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"flush","t":"def flush: Output","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Bytes","t":"type Bytes = DEF","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Bytes","t":"def Bytes: Bytes","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Data","t":"type Data = DEF","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Data","t":"def Data: Data","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Text","t":"type Text = DEF","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Text","t":"def Text: Text","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Buffer","t":"type Buffer = DEF","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/j/io/Output$"},
{"l":"api/scalqa/j/io/Output.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/Output$$TYPE$"},
{"l":"api/scalqa/j/io/Output.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/Output$$TYPE$"},
{"l":"api/scalqa/j/io/input.html","n":"scalqa.j.io.input","t":"package scalqa.j.io.input","d":"scalqa/j/io/input"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"Bytes","t":"object Bytes extends Base[Bytes, InputStream]","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"apply","t":"def apply(inline v: Input): Bytes","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"read","t":"def read: Int","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"read","t":"def read(inline ba: Array[Byte]): Int","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"read","t":"def read(inline ba: Array[Byte], inline from: Int, inline sz: Int): Int","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"readOpt","t":"def readOpt: Opt","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"readAll","t":"def readAll: Array[Byte]","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes$.html","n":"readAllAndClose","t":"def readAllAndClose: Array[Byte]","d":"scalqa/j/io/input/Bytes$"},
{"l":"api/scalqa/j/io/input/Bytes.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/input/Bytes$$TYPE$"},
{"l":"api/scalqa/j/io/input/Bytes.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/input/Bytes$$TYPE$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"Data","t":"object Data extends Base[Data, DataInputStream]","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"apply","t":"def apply(inline v: Input): Data","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"readFully","t":"def readFully(inline ba: Array[Byte]): Unit","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"readFully","t":"def readFully(inline ba: Array[Byte], inline from: Int, inline size: Int): Unit","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"skipBytes","t":"def skipBytes(inline n: Int): Int","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"boolean","t":"def boolean: Boolean","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"byte","t":"def byte: Byte","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"unsignedByte","t":"def unsignedByte: Int","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"short","t":"def short: Short","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"unsignedShort","t":"def unsignedShort: Int","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"char","t":"def char: Char","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"int","t":"def int: Int","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"long","t":"def long: Long","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"float","t":"def float: Float","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"double","t":"def double: Double","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data$.html","n":"utf","t":"def utf: String","d":"scalqa/j/io/input/Data$"},
{"l":"api/scalqa/j/io/input/Data.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/input/Data$$TYPE$"},
{"l":"api/scalqa/j/io/input/Data.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/input/Data$$TYPE$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"Text","t":"object Text extends Base[Text, Reader]","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"apply","t":"def apply(inline v: Input): Text","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"read","t":"def read: Int","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"read","t":"def read(size: Int): String","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"read","t":"def read(inline ca: Array[Char]): Int","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"read","t":"def read(inline ca: Array[Char], i: Range): Int","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"readAll","t":"def readAll: String","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"readAllAndClose","t":"def readAllAndClose: String","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"separatedStream","t":"def separatedStream(separator: Char => Boolean): Stream[Idx & CharSequence]","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text$.html","n":"stream","t":"def stream: Stream","d":"scalqa/j/io/input/Text$"},
{"l":"api/scalqa/j/io/input/Text.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/input/Text$$TYPE$"},
{"l":"api/scalqa/j/io/input/Text.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/input/Text$$TYPE$"},
{"l":"api/scalqa/j/io/output.html","n":"scalqa.j.io.output","t":"package scalqa.j.io.output","d":"scalqa/j/io/output"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"Buffer","t":"object Buffer extends Base[Buffer, ByteArrayOutputStream]","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"apply","t":"def apply(initSize: Int): Buffer","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"size","t":"def size: Int","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"bytes","t":"def bytes: Array[Byte]","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"clear","t":"def clear: Unit","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer$.html","n":"toInput","t":"def toInput: Input","d":"scalqa/j/io/output/Buffer$"},
{"l":"api/scalqa/j/io/output/Buffer.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/output/Buffer$$TYPE$"},
{"l":"api/scalqa/j/io/output/Buffer.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/output/Buffer$$TYPE$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"Bytes","t":"object Bytes extends Base[Bytes, OutputStream]","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"apply","t":"def apply(inline v: Output): Bytes","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"writeByte","t":"def writeByte(inline b: Int): Unit","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"write","t":"def write(inline ba: Array[Byte]): Unit","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"write","t":"def write(inline ba: Array[Byte], inline start: Int, inline size: Int): Unit","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"writeAndClose","t":"def writeAndClose(in: Input): Unit","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"flush","t":"def flush: Bytes","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes$.html","n":"write","t":"def write(input: Input): Unit","d":"scalqa/j/io/output/Bytes$"},
{"l":"api/scalqa/j/io/output/Bytes.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/output/Bytes$$TYPE$"},
{"l":"api/scalqa/j/io/output/Bytes.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/output/Bytes$$TYPE$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"Data","t":"object Data extends Base[Data, DataOutputStream]","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"apply","t":"def apply(inline v: Output): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"flush","t":"def flush: Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"boolean","t":"def boolean(inline v: Boolean): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"byte","t":"def byte(inline v: Int): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"short","t":"def short(inline v: Int): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"char","t":"def char(inline v: Int): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"int","t":"def int(inline v: Int): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"long","t":"def long(inline v: Long): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"float","t":"def float(inline v: Float): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"double","t":"def double(inline v: Double): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"byte","t":"def byte(inline v: String): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"char","t":"def char(inline v: String): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data$.html","n":"utf","t":"def utf(inline v: String): Data","d":"scalqa/j/io/output/Data$"},
{"l":"api/scalqa/j/io/output/Data.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/output/Data$$TYPE$"},
{"l":"api/scalqa/j/io/output/Data.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/output/Data$$TYPE$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"Text","t":"object Text extends Base[Text, OutputStreamWriter]","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"apply","t":"def apply(inline v: Output): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"float","t":"def float(inline v: Float): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"double","t":"def double(inline v: Double): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"long","t":"def long(inline v: Long): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"byte","t":"def byte(inline v: Byte): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"short","t":"def short(inline v: Short): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"int","t":"def int(inline v: Int): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"char","t":"def char(inline v: Char): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"string","t":"def string(inline v: String): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"string","t":"def string(inline v: String, r: Range): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"string","t":"def string(inline v: String, inline start: Int, inline size: Int): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"array","t":"def array(inline a: Array[Char]): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"array","t":"def array(inline a: Array[Char], r: Range): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"array","t":"def array(inline a: Array[Char], inline start: Int, inline size: Int): Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"flush","t":"def flush: Text","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text$.html","n":"writeAllAndClose","t":"def writeAllAndClose(inline v: String): Unit","d":"scalqa/j/io/output/Text$"},
{"l":"api/scalqa/j/io/output/Text.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/io/output/Text$$TYPE$"},
{"l":"api/scalqa/j/io/output/Text.html","n":"DEF","t":"type DEF","d":"scalqa/j/io/output/Text$$TYPE$"},
{"l":"api/scalqa/j/json.html","n":"scalqa.j.json","t":"package scalqa.j.json","d":"scalqa/j/json"},
{"l":"api/scalqa/j/json/Array.html","n":"Array","t":"trait Array extends Idx[Any]","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"jObject","t":"def jObject(i: Int): Object","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"jArray","t":"def jArray(i: Int): Array","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"string","t":"def string(i: Int): String","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"double","t":"def double(i: Int): Double","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"boolean","t":"def boolean(i: Int): Boolean","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"long","t":"def long(i: Int): Long","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array.html","n":"int","t":"def int(i: Int): Int","d":"scalqa/j/json/Array"},
{"l":"api/scalqa/j/json/Array$.html","n":"Array","t":"object Array extends Setup[Array]","d":"scalqa/j/json/Array$"},
{"l":"api/scalqa/j/json/Array$.html","n":"M","t":"type M = Mutable","d":"scalqa/j/json/Array$"},
{"l":"api/scalqa/j/json/Array$.html","n":"M","t":"def M: Mutable","d":"scalqa/j/json/Array$"},
{"l":"api/scalqa/j/json/Array$$Mutable.html","n":"Mutable","t":"trait Mutable extends Array with Mutable[Any]","d":"scalqa/j/json/Array$$Mutable"},
{"l":"api/scalqa/j/json/Array$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/j/json/Array$$Mutable$"},
{"l":"api/scalqa/j/json/Array$$Mutable$.html","n":"apply","t":"def apply(): Mutable","d":"scalqa/j/json/Array$$Mutable$"},
{"l":"api/scalqa/j/json/Array$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/j/json/Array$$Mutable$$X$"},
{"l":"api/scalqa/j/json/Array$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic extends Buffer[Any] with Mutable","d":"scalqa/j/json/Array$$Mutable$$X$$Basic"},
{"l":"api/scalqa/j/json/Format.html","n":"Format","t":"trait Format","d":"scalqa/j/json/Format"},
{"l":"api/scalqa/j/json/Format.html","n":"parseResult","t":"def parseResult(s: String): DEF[Object | Array]","d":"scalqa/j/json/Format"},
{"l":"api/scalqa/j/json/Format.html","n":"format","t":"def format(o: Object | Array): String","d":"scalqa/j/json/Format"},
{"l":"api/scalqa/j/json/Object.html","n":"Object","t":"trait Object extends Lookup[String, Any] with Doc","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"jObject","t":"def jObject(name: String): Object","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"jObjectOpt","t":"def jObjectOpt(name: String): DEF[Object]","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"jArray","t":"def jArray(name: String): Array","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"jArrayOpt","t":"def jArrayOpt(name: String): DEF[Array]","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"string","t":"def string(name: String): String","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"stringOpt","t":"def stringOpt(name: String): DEF[String]","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"int","t":"def int(name: String): Int","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"long","t":"def long(name: String): Long","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"double","t":"def double(name: String): Double","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"intOpt","t":"def intOpt(name: String): Opt","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"longOpt","t":"def longOpt(name: String): Opt","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"doubleOpt","t":"def doubleOpt(name: String): Opt","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"boolean","t":"def boolean(name: String): Boolean","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object.html","n":"doc","t":"def doc: Doc","d":"scalqa/j/json/Object"},
{"l":"api/scalqa/j/json/Object$.html","n":"Object","t":"object Object extends Setup[AnyRef]","d":"scalqa/j/json/Object$"},
{"l":"api/scalqa/j/json/Object$.html","n":"M","t":"type M = Mutable","d":"scalqa/j/json/Object$"},
{"l":"api/scalqa/j/json/Object$.html","n":"M","t":"def M: Mutable","d":"scalqa/j/json/Object$"},
{"l":"api/scalqa/j/json/Object$$Mutable.html","n":"Mutable","t":"trait Mutable extends Object with Mutable[String, Any]","d":"scalqa/j/json/Object$$Mutable"},
{"l":"api/scalqa/j/json/Object$$Mutable.html","n":"put","t":"def put(name: String, a: Any): Unit","d":"scalqa/j/json/Object$$Mutable"},
{"l":"api/scalqa/j/json/Object$$Mutable.html","n":"add","t":"def add(v: (String, Any)): Unit","d":"scalqa/j/json/Object$$Mutable"},
{"l":"api/scalqa/j/json/Object$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/j/json/Object$$Mutable$"},
{"l":"api/scalqa/j/json/Object$$Mutable$.html","n":"apply","t":"def apply(): Mutable","d":"scalqa/j/json/Object$$Mutable$"},
{"l":"api/scalqa/j/json/Object$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/j/json/Object$$Mutable$$X$"},
{"l":"api/scalqa/j/json/Object$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic extends Basic[String, Any] with Mutable","d":"scalqa/j/json/Object$$Mutable$$X$$Basic"},
{"l":"api/scalqa/j/url.html","n":"scalqa.j.url","t":"package scalqa.j.url","d":"scalqa/j/url"},
{"l":"api/scalqa/j/url/Connection$.html","n":"Connection","t":"object Connection extends Base[Connection, URLConnection]","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"apply","t":"def apply(inline v: URLConnection): Connection","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"openOutput","t":"def openOutput: Output","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"openInput","t":"def openInput: Input","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"doInput","t":"def doInput: Boolean","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"doInput_=","t":"def doInput_=(inline v: Boolean): Unit","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"doOutput","t":"def doOutput: Boolean","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"doOutput_=","t":"def doOutput_=(inline v: Boolean): Unit","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"connectTimeout","t":"def connectTimeout: Length","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"connectTimeout_=","t":"def connectTimeout_=(inline t: Length): Unit","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"readTimeout","t":"def readTimeout: Length","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"readTimeout_=","t":"def readTimeout_=(inline t: Length): Unit","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection$.html","n":"requestProperty","t":"def requestProperty(key: String): Mutable[String]","d":"scalqa/j/url/Connection$"},
{"l":"api/scalqa/j/url/Connection.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/url/Connection$$TYPE$"},
{"l":"api/scalqa/j/url/Connection.html","n":"DEF","t":"type DEF","d":"scalqa/j/url/Connection$$TYPE$"},
{"l":"api/scalqa/j/util.html","n":"scalqa.j.util","t":"package scalqa.j.util","d":"scalqa/j/util"},
{"l":"api/scalqa/j/util/Benchmark$.html","n":"Benchmark","t":"object Benchmark","d":"scalqa/j/util/Benchmark$"},
{"l":"api/scalqa/j/util/Benchmark$.html","n":"apply","t":"def apply[A](inline targets: () => A*)(using DEF[Numeric[A]]): Unit","d":"scalqa/j/util/Benchmark$"},
{"l":"api/scalqa/j/util/Benchmark$.html","n":"apply","t":"def apply[A](inline targets: (String, () => A)*)(using DEF[Numeric[A]]): Unit","d":"scalqa/j/util/Benchmark$"},
{"l":"api/scalqa/j/util/Benchmark$.html","n":"custom","t":"def custom[A](verbose: Boolean, trialCount: Int, eachTrial: Length)(inline targets: (String, () => A)*)(using DEF[Numeric[A]]): Unit","d":"scalqa/j/util/Benchmark$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Concurrent","t":"object Concurrent","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Ref","t":"type Ref[A] = DEF[A]","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Ref","t":"def Ref: Ref","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Counter","t":"type Counter = DEF","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Counter","t":"def Counter: Counter","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Concurrent$.html","n":"Deque","t":"type Deque[A] = Deque[A]","d":"scalqa/j/util/Concurrent$"},
{"l":"api/scalqa/j/util/Proxy.html","n":"Proxy","t":"trait Proxy[+VALUE]","d":"scalqa/j/util/Proxy"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Proxy","t":"object Proxy","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"JavaList","t":"type JavaList[A] = JavaList[A]","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Collection","t":"type Collection[A] = Collection[A]","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Idx","t":"type Idx[A] = Idx[A]","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Lookup","t":"type Lookup[A, B] = Lookup[A, B]","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Proxy$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/j/util/Proxy$"},
{"l":"api/scalqa/j/util/Random$.html","n":"Random","t":"object Random","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"boolean","t":"def boolean: Boolean","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"booleanStream","t":"def booleanStream: Stream","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"chance","t":"def chance(p: Percent): Boolean","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"int","t":"def int: Int","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"intStream","t":"def intStream: Stream","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"int","t":"def int(r: Range): Int","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"intStream","t":"def intStream(r: Range): Stream","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"fraction","t":"def fraction: Double","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$.html","n":"fractionStream","t":"def fractionStream: Stream","d":"scalqa/j/util/Random$"},
{"l":"api/scalqa/j/util/Random$$Source.html","n":"Source","t":"trait Source","d":"scalqa/j/util/Random$$Source"},
{"l":"api/scalqa/j/util/Random$$Source.html","n":"nextInt","t":"def nextInt: Int","d":"scalqa/j/util/Random$$Source"},
{"l":"api/scalqa/j/util/Random$$Source.html","n":"nextDouble","t":"def nextDouble: Double","d":"scalqa/j/util/Random$$Source"},
{"l":"api/scalqa/j/util/Test.html","n":"Test","t":"class Test(val name: String)","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"include","t":"def include(t: Test*): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"test","t":"def test[U](name: String)(code: => U): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"test","t":"def test[U](code: => U): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testTrue","t":"def testTrue(name: String)(code: => Boolean): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testTrue","t":"def testTrue(code: => Boolean): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testFalse","t":"def testFalse(name: String)(code: => Boolean): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testFalse","t":"def testFalse(code: => Boolean): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testEqualStream","t":"def testEqualStream[A](name: String)(s1: Stream[A], s2: Stream[A], ms: Stream[A]*): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"testEqualStream","t":"def testEqualStream[A](s1: Stream[A], s2: Stream[A], ms: Stream[A]*): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"assertTrue","t":"def assertTrue(v: Boolean, message: => String): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"assertFalse","t":"def assertFalse(v: Boolean, message: => String): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"assertEqualStream","t":"def assertEqualStream[A](s1: Stream[A], s2: Stream[A], ms: Stream[A]*): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"main","t":"def main(sa: Array[String]): Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/Test.html","n":"run","t":"def run: Unit","d":"scalqa/j/util/Test"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"WeakRef","t":"object WeakRef","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"apply","t":"def apply[A](inline v: A): DEF[A]","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A](inline v: DEF[A]): Boolean","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"getOpt","t":"def getOpt[A]: DEF[A]","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"z_ClassTag","t":"given z_ClassTag","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_VoidDef.html","n":"z_VoidDef","t":"given z_VoidDef[A]: Void[DEF[A]]","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_VoidDef.html","n":"value_isVoid","t":"def value_isVoid(v: DEF[A]): Boolean","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"z_Doc","t":"given z_Doc[A](using val t: Tag[A]): Doc[DEF[A]]","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"t","t":"val t: Tag[A]","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"value_doc","t":"def value_doc(v: DEF[A]): Doc","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"value_tag","t":"def value_tag(v: DEF[A]): String","d":"scalqa/j/util/WeakRef$"},
{"l":"api/scalqa/j/util/WeakRef$$z_VoidDef.html","n":"z_VoidDef","t":"given z_VoidDef[A]: Void[DEF[A]]","d":"scalqa/j/util/WeakRef$$z_VoidDef"},
{"l":"api/scalqa/j/util/WeakRef$$z_VoidDef.html","n":"value_isVoid","t":"def value_isVoid(v: DEF[A]): Boolean","d":"scalqa/j/util/WeakRef$$z_VoidDef"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"z_Doc","t":"given z_Doc[A](using val t: Tag[A]): Doc[DEF[A]]","d":"scalqa/j/util/WeakRef$$z_Doc"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"t","t":"val t: Tag[A]","d":"scalqa/j/util/WeakRef$$z_Doc"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"value_doc","t":"def value_doc(v: DEF[A]): Doc","d":"scalqa/j/util/WeakRef$$z_Doc"},
{"l":"api/scalqa/j/util/WeakRef$$z_Doc.html","n":"value_tag","t":"def value_tag(v: DEF[A]): String","d":"scalqa/j/util/WeakRef$$z_Doc"},
{"l":"api/scalqa/j/util/WeakRef.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/util/WeakRef$$TYPE$"},
{"l":"api/scalqa/j/util/WeakRef.html","n":"DEF","t":"type DEF[A]","d":"scalqa/j/util/WeakRef$$TYPE$"},
{"l":"api/scalqa/j/util/concurrent.html","n":"scalqa.j.util.concurrent","t":"package scalqa.j.util.concurrent","d":"scalqa/j/util/concurrent"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"Counter","t":"object Counter extends Base[Counter, AtomicLong]","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"apply","t":"def apply(initValue: Long): Counter","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"get","t":"def get: Int","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"next","t":"def next: Int","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"getLong","t":"def getLong: Long","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter$.html","n":"nextLong","t":"def nextLong: Long","d":"scalqa/j/util/concurrent/Counter$"},
{"l":"api/scalqa/j/util/concurrent/Counter.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/util/concurrent/Counter$$TYPE$"},
{"l":"api/scalqa/j/util/concurrent/Counter.html","n":"DEF","t":"type DEF","d":"scalqa/j/util/concurrent/Counter$$TYPE$"},
{"l":"api/scalqa/j/util/concurrent/Deque.html","n":"Deque","t":"class Deque[A] extends Collection[A]","d":"scalqa/j/util/concurrent/Deque"},
{"l":"api/scalqa/j/util/concurrent/Deque.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/j/util/concurrent/Deque"},
{"l":"api/scalqa/j/util/concurrent/Deque.html","n":"size","t":"def size: Int","d":"scalqa/j/util/concurrent/Deque"},
{"l":"api/scalqa/j/util/concurrent/Deque.html","n":"push","t":"def push(a: A): Unit","d":"scalqa/j/util/concurrent/Deque"},
{"l":"api/scalqa/j/util/concurrent/Deque.html","n":"popOpt","t":"def popOpt: DEF[A]","d":"scalqa/j/util/concurrent/Deque"},
{"l":"api/scalqa/j/util/concurrent/Ref$.html","n":"Ref","t":"object Ref","d":"scalqa/j/util/concurrent/Ref$"},
{"l":"api/scalqa/j/util/concurrent/Ref$.html","n":"apply","t":"def apply[A](v: A): DEF[A]","d":"scalqa/j/util/concurrent/Ref$"},
{"l":"api/scalqa/j/util/concurrent/Ref$.html","n":"get","t":"def get[A]: A","d":"scalqa/j/util/concurrent/Ref$"},
{"l":"api/scalqa/j/util/concurrent/Ref$.html","n":"tryChange","t":"def tryChange[A](inline old: A, inline value: A): Boolean","d":"scalqa/j/util/concurrent/Ref$"},
{"l":"api/scalqa/j/util/concurrent/Ref$.html","n":"change","t":"def change[A](f: A => A): A","d":"scalqa/j/util/concurrent/Ref$"},
{"l":"api/scalqa/j/util/concurrent/Ref.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/util/concurrent/Ref$$TYPE$"},
{"l":"api/scalqa/j/util/concurrent/Ref.html","n":"DEF","t":"type DEF[A]","d":"scalqa/j/util/concurrent/Ref$$TYPE$"},
{"l":"api/scalqa/j/util/proxy.html","n":"scalqa.j.util.proxy","t":"package scalqa.j.util.proxy","d":"scalqa/j/util/proxy"},
{"l":"api/scalqa/j/util/proxy/Collection.html","n":"Collection","t":"class Collection[A] extends Base[A]","d":"scalqa/j/util/proxy/Collection"},
{"l":"api/scalqa/j/util/proxy/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/j/util/proxy/Collection$"},
{"l":"api/scalqa/j/util/proxy/Collection$$Base.html","n":"Base","t":"trait Base[A] extends Collection[A] with Proxy[Collection[A]]","d":"scalqa/j/util/proxy/Collection$$Base"},
{"l":"api/scalqa/j/util/proxy/Collection$$O.html","n":"O","t":"class O[A] extends Collection[A] with Base[A]","d":"scalqa/j/util/proxy/Collection$$O"},
{"l":"api/scalqa/j/util/proxy/Collection$$O$.html","n":"O","t":"object O","d":"scalqa/j/util/proxy/Collection$$O$"},
{"l":"api/scalqa/j/util/proxy/Collection$$O$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with Observable[A] with Proxy[Observable[A]]","d":"scalqa/j/util/proxy/Collection$$O$$Base"},
{"l":"api/scalqa/j/util/proxy/Collection$$M.html","n":"M","t":"class M[A] extends Collection[A] with Base[A]","d":"scalqa/j/util/proxy/Collection$$M"},
{"l":"api/scalqa/j/util/proxy/Collection$$M$.html","n":"M","t":"object M","d":"scalqa/j/util/proxy/Collection$$M$"},
{"l":"api/scalqa/j/util/proxy/Collection$$M$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with Mutable[A] with Proxy[Mutable[A]]","d":"scalqa/j/util/proxy/Collection$$M$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx.html","n":"Idx","t":"class Idx[A] extends Collection[A] with Base[A]","d":"scalqa/j/util/proxy/Idx"},
{"l":"api/scalqa/j/util/proxy/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/j/util/proxy/Idx$"},
{"l":"api/scalqa/j/util/proxy/Idx$$Base.html","n":"Base","t":"trait Base[A] extends Idx[A] with Base[A] with Proxy[Idx[A]]","d":"scalqa/j/util/proxy/Idx$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx$$M.html","n":"M","t":"class M[A] extends Idx[A] with Base[A]","d":"scalqa/j/util/proxy/Idx$$M"},
{"l":"api/scalqa/j/util/proxy/Idx$$M$.html","n":"M","t":"object M","d":"scalqa/j/util/proxy/Idx$$M$"},
{"l":"api/scalqa/j/util/proxy/Idx$$M$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with Mutable[A] with Base[A] with Proxy[Mutable[A]]","d":"scalqa/j/util/proxy/Idx$$M$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx$$O.html","n":"O","t":"class O[A] extends Idx[A] with Base[A]","d":"scalqa/j/util/proxy/Idx$$O"},
{"l":"api/scalqa/j/util/proxy/Idx$$O$.html","n":"O","t":"object O","d":"scalqa/j/util/proxy/Idx$$O$"},
{"l":"api/scalqa/j/util/proxy/Idx$$O$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with Observable[A] with Proxy[Observable[A]]","d":"scalqa/j/util/proxy/Idx$$O$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx$$OM.html","n":"OM","t":"class OM[A] extends M[A] with Base[A]","d":"scalqa/j/util/proxy/Idx$$OM"},
{"l":"api/scalqa/j/util/proxy/Idx$$OM$.html","n":"OM","t":"object OM","d":"scalqa/j/util/proxy/Idx$$OM$"},
{"l":"api/scalqa/j/util/proxy/Idx$$OM$$Base.html","n":"Base","t":"trait Base[A] extends ObservableMutable[A] with Base[A] with Base[A] with Proxy[ObservableMutable[A]]","d":"scalqa/j/util/proxy/Idx$$OM$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx$$OM$$Base.html","n":"refreshRange","t":"def refreshRange(i: Range): Unit","d":"scalqa/j/util/proxy/Idx$$OM$$Base"},
{"l":"api/scalqa/j/util/proxy/Idx$$OM$$Base.html","n":"modify","t":"def modify(ch: Mutable[A] => Unit): Unit","d":"scalqa/j/util/proxy/Idx$$OM$$Base"},
{"l":"api/scalqa/j/util/proxy/JavaList.html","n":"JavaList","t":"trait JavaList[A] extends AbstractList[A] with Proxy[List[A]]","d":"scalqa/j/util/proxy/JavaList"},
{"l":"api/scalqa/j/util/proxy/JavaList.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/j/util/proxy/JavaList"},
{"l":"api/scalqa/j/util/proxy/JavaList.html","n":"size","t":"def size: Int","d":"scalqa/j/util/proxy/JavaList"},
{"l":"api/scalqa/j/util/proxy/Lookup.html","n":"Lookup","t":"class Lookup[A, B] extends Base[A, B]","d":"scalqa/j/util/proxy/Lookup"},
{"l":"api/scalqa/j/util/proxy/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/j/util/proxy/Lookup$"},
{"l":"api/scalqa/j/util/proxy/Lookup$$Base.html","n":"Base","t":"trait Base[A, B] extends Lookup[A, B] with Proxy[Lookup[A, B]]","d":"scalqa/j/util/proxy/Lookup$$Base"},
{"l":"api/scalqa/j/vm.html","n":"scalqa.j.vm","t":"package scalqa.j.vm","d":"scalqa/j/vm"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"Memory","t":"object Memory extends Doc","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"total","t":"def total: ByteCount","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"max","t":"def max: ByteCount","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"free","t":"def free: ByteCount","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"used","t":"def used: ByteCount","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"gc","t":"def gc: Unit","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Memory$.html","n":"doc","t":"def doc: Doc","d":"scalqa/j/vm/Memory$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"Predef","t":"object Predef","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$$GlobalExtensionLibrary$.html","n":"GlobalExtensionLibrary","t":"given GlobalExtensionLibrary: _Methods","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_ByteNumeric","t":"given z_ByteNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_ByteSum","t":"given z_ByteSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_CharOrdering","t":"given z_CharOrdering","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_ShortNumeric","t":"given z_ShortNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_ShortSum","t":"given z_ShortSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_IntNumeric","t":"given z_IntNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_IntSum","t":"given z_IntSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_LongNumeric","t":"given z_LongNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_LongSum","t":"given z_LongSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_FloatNumeric","t":"given z_FloatNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_FloatSum","t":"given z_FloatSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_FloatAverage","t":"given z_FloatAverage","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_DoubleNumeric","t":"given z_DoubleNumeric","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_DoubleSum","t":"given z_DoubleSum","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$.html","n":"z_DoubleAverage","t":"given z_DoubleAverage","d":"scalqa/j/vm/Predef$"},
{"l":"api/scalqa/j/vm/Predef$$GlobalExtensionLibrary$.html","n":"GlobalExtensionLibrary","t":"object GlobalExtensionLibrary extends _Methods with _methods with _Methods with z_Methods with _methods with _methods with _methods with _methods with _methods with _methods with _methods with _methods with _methods","d":"scalqa/j/vm/Predef$$GlobalExtensionLibrary$"},
{"l":"api/scalqa/j/vm/Predef$$GlobalExtensionLibrary$.html","n":"GlobalExtensionLibrary","t":"given GlobalExtensionLibrary: _Methods","d":"scalqa/j/vm/Predef$$GlobalExtensionLibrary$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"Priority","t":"object Priority extends Base[Priority]","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"apply","t":"def apply(v: Int): Priority","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"implicitRequest","t":"def implicitRequest(v: MIN): Priority","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"implicitRequest","t":"def implicitRequest(v: MAX): Priority","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"implicitRequest","t":"def implicitRequest(v: DEFAULT): Priority","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"isMin","t":"def isMin: Boolean","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority$.html","n":"isMax","t":"def isMax: Boolean","d":"scalqa/j/vm/Priority$"},
{"l":"api/scalqa/j/vm/Priority.html","n":"TYPE","t":"object TYPE","d":"scalqa/j/vm/Priority$$TYPE$"},
{"l":"api/scalqa/j/vm/Priority.html","n":"DEF","t":"type DEF","d":"scalqa/j/vm/Priority$$TYPE$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"Setup","t":"object Setup","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"isSealed","t":"def isSealed: Boolean","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"seal","t":"def seal: Unit","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"schedularPro","t":"val schedularPro: Mutable[ScheduledExecutorService]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"parallelFlowSetupPro","t":"val parallelFlowSetupPro: Mutable[(Stream[Any], DEF[(Priority, Int)]) => Flow[Any]]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"defaultExecutionContextPro","t":"val defaultExecutionContextPro: Mutable[ExecutionContext]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"arrayInitSizePro","t":"val arrayInitSizePro: Mutable[Int]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"jsonFormatPro","t":"val jsonFormatPro: Mutable[Format]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"bigDecimalDefaultScalePro","t":"val bigDecimalDefaultScalePro: Mutable[Int]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"randomSourcePro","t":"val randomSourcePro: Mutable[Source]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"tempPathPro","t":"val tempPathPro: Mutable[DEF[Path]]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"tempPathOpt","t":"val tempPathOpt: DEF[Path]","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"bigDecimalDefaultScale","t":"val bigDecimalDefaultScale: Int","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"arrayInitSize","t":"val arrayInitSize: Int","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/vm/Setup$.html","n":"defaultExecutionContext","t":"val defaultExecutionContext: ExecutionContext","d":"scalqa/j/vm/Setup$"},
{"l":"api/scalqa/j/zip.html","n":"scalqa.j.zip","t":"package scalqa.j.zip","d":"scalqa/j/zip"},
{"l":"api/scalqa/j/zip/Format.html","n":"Format","t":"trait Format[A]","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/j/zip/Format.html","n":"createEntryName","t":"def createEntryName(v: A): String","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/j/zip/Format.html","n":"read","t":"def read(name: String, i: Input): A","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/j/zip/Format.html","n":"write","t":"def write(name: String, o: Output, v: A): Unit","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/j/zip/Format.html","n":"load","t":"def load(file: File, entryNamefilter: String => Boolean): Stream[A]","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/j/zip/Format.html","n":"save","t":"def save(file: File, entries: Stream[A]): Unit","d":"scalqa/j/zip/Format"},
{"l":"api/scalqa/lang.html","n":"scalqa.lang","t":"package scalqa.lang","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Boolean): Boolean","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Byte): Byte","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Char): Char","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Short): Short","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Int): Int","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Long): Long","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Float): Float","d":"scalqa/lang"},
{"l":"api/scalqa/lang.html","n":"z_From","t":"def z_From(inline v: Double): Double","d":"scalqa/lang"},
{"l":"api/scalqa/lang/Any$.html","n":"Any","t":"object Any","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Boolean","t":"type Boolean = Boolean | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Byte","t":"type Byte = Byte | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Char","t":"type Char = Char | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Short","t":"type Short = Short | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Int","t":"type Int = Int | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Long","t":"type Long = Long | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Float","t":"type Float = Float | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Double","t":"type Double = Double | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Opaque","t":"type Opaque = Opaque | Opaque","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Array","t":"type Array[A] = Array[A] | Array[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Stream","t":"type Stream[A] = Stream[A] | Stream[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Range","t":"type Range[A] = Range[A] | Range[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Pack","t":"type Pack[A] = Pack[A] | Pack[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Buffer","t":"type Buffer[A] = Buffer[A] | Buffer[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Collection","t":"type Collection[A] = Collection[A] | Collection[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Lookup","t":"type Lookup[A, B] = Lookup[A, B] | Lookup[A, B]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Idx","t":"type Idx[A] = Idx[A] | Idx[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Opt","t":"type Opt[A] = DEF[A] | Opt[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Pro","t":"type Pro[A] = Pro[A] | Pro[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Set","t":"type Set[A] = Set[A] | Set[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToValOpt","t":"def z_ImplicitVoidRequestToValOpt[A](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToBooleanOpt","t":"def z_ImplicitVoidRequestToBooleanOpt[A <: Boolean](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToByteOpt","t":"def z_ImplicitVoidRequestToByteOpt[A <: Byte](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToCharOpt","t":"def z_ImplicitVoidRequestToCharOpt[A <: Char](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToShortOpt","t":"def z_ImplicitVoidRequestToShortOpt[A <: Short](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToIntOpt","t":"def z_ImplicitVoidRequestToIntOpt[A <: Int](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToLongOpt","t":"def z_ImplicitVoidRequestToLongOpt[A <: Long](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToFloatOpt","t":"def z_ImplicitVoidRequestToFloatOpt[A <: Float](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"z_ImplicitVoidRequestToDoubleOpt","t":"def z_ImplicitVoidRequestToDoubleOpt[A <: Double](v: VOID): DEF[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Specialized","t":"def Specialized: Specialized","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Specialized","t":"type Specialized[A] = Specialized[A]","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Primitive","t":"def Primitive: Primitive","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/Any$.html","n":"Def","t":"def Def: Def","d":"scalqa/lang/Any$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"AnyRef","t":"object AnyRef","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"Buffer","t":"type Buffer[A] = Buffer[A]","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"G","t":"def G: G","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/AnyRef$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/AnyRef$"},
{"l":"api/scalqa/lang/Array$.html","n":"Array","t":"object Array","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"apply","t":"def apply[A <: Type](inline v: A, inline vs: A*)(using inline A: Primitive[A]): Array","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"apply","t":"def apply[A](inline xs: A*)(using inline t: ClassTag[A]): Array[A]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyBoolean","t":"def emptyBoolean: Array[Boolean]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyByte","t":"def emptyByte: Array[Byte]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyChar","t":"def emptyChar: Array[Char]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyShort","t":"def emptyShort: Array[Short]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyInt","t":"def emptyInt: Array[Int]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyLong","t":"def emptyLong: Array[Long]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyFloat","t":"def emptyFloat: Array[Float]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyDouble","t":"def emptyDouble: Array[Double]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"emptyAnyRef","t":"def emptyAnyRef: Array[AnyRef]","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Array$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Array$"},
{"l":"api/scalqa/lang/Boolean$.html","n":"Boolean","t":"object Boolean extends Containers[Boolean]","d":"scalqa/lang/Boolean$"},
{"l":"api/scalqa/lang/Boolean$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Boolean$"},
{"l":"api/scalqa/lang/Boolean$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Boolean$"},
{"l":"api/scalqa/lang/Boolean$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Boolean$"},
{"l":"api/scalqa/lang/Boolean$.html","n":"G","t":"def G: G","d":"scalqa/lang/Boolean$"},
{"l":"api/scalqa/lang/Byte$.html","n":"Byte","t":"object Byte extends Containers[Byte]","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"min","t":"def min: Byte","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"max","t":"def max: Byte","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"ordering","t":"def ordering: Ordering[Byte]","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Byte$.html","n":"G","t":"def G: G","d":"scalqa/lang/Byte$"},
{"l":"api/scalqa/lang/Char$.html","n":"Char","t":"object Char extends Containers[Char]","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"min","t":"def min: Char","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"max","t":"def max: Char","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"ordering","t":"def ordering: Ordering[Char]","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Char$.html","n":"G","t":"def G: G","d":"scalqa/lang/Char$"},
{"l":"api/scalqa/lang/Double$.html","n":"Double","t":"object Double extends Containers[Double]","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"min","t":"def min: Double","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"max","t":"def max: Double","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"ordering","t":"def ordering: Ordering[Double]","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Double$.html","n":"G","t":"def G: G","d":"scalqa/lang/Double$"},
{"l":"api/scalqa/lang/Float$.html","n":"Float","t":"object Float extends Containers[Float]","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"min","t":"def min: Float","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"max","t":"def max: Float","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"ordering","t":"def ordering: Ordering[Float]","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Float$.html","n":"G","t":"def G: G","d":"scalqa/lang/Float$"},
{"l":"api/scalqa/lang/Int$.html","n":"Int","t":"object Int extends Containers[Int]","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"min","t":"def min: Int","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"max","t":"def max: Int","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"ordering","t":"def ordering: Ordering[Int]","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Int$.html","n":"G","t":"def G: G","d":"scalqa/lang/Int$"},
{"l":"api/scalqa/lang/Long$.html","n":"Long","t":"object Long extends Containers[Long]","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"min","t":"def min: Long","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"max","t":"def max: Long","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"ordering","t":"def ordering: Ordering[Long]","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/Long$.html","n":"G","t":"def G: G","d":"scalqa/lang/Long$"},
{"l":"api/scalqa/lang/More$.html","n":"More","t":"object More","d":"scalqa/lang/More$"},
{"l":"api/scalqa/lang/More$$ScalaCollections.html","n":"ScalaCollections","t":"trait ScalaCollections","d":"scalqa/lang/More$$ScalaCollections"},
{"l":"api/scalqa/lang/More$$ScalaCollections.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$ScalaCollections"},
{"l":"api/scalqa/lang/More$$ScalaCollections.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$ScalaCollections"},
{"l":"api/scalqa/lang/More$$ScalaCollections.html","n":"pack","t":"def pack[A](using A: Specialized[A]): Pack","d":"scalqa/lang/More$$ScalaCollections"},
{"l":"api/scalqa/lang/More$$JavaCollections.html","n":"JavaCollections","t":"trait JavaCollections","d":"scalqa/lang/More$$JavaCollections"},
{"l":"api/scalqa/lang/More$$JavaCollections.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$JavaCollections"},
{"l":"api/scalqa/lang/More$$JavaCollections.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$JavaCollections"},
{"l":"api/scalqa/lang/More$$JavaCollections.html","n":"pack","t":"def pack[A](using A: Specialized[A]): Pack","d":"scalqa/lang/More$$JavaCollections"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"z_Methods","t":"trait z_Methods extends ScalaCollections with JavaCollections","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"pack","t":"def pack[A](using A: Specialized[A]): Pack","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"stream","t":"def stream: Stream[(String, Any)]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"valStream","t":"def valStream: Stream[(String, Any)]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/More$$z_Methods.html","n":"valStream","t":"def valStream[A]: Stream[A]","d":"scalqa/lang/More$$z_Methods"},
{"l":"api/scalqa/lang/Short$.html","n":"Short","t":"object Short extends Containers[Short]","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"min","t":"def min: Short","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"max","t":"def max: Short","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"ordering","t":"def ordering: Ordering[Short]","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"_methods","t":"type _methods = _methods","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/Short$.html","n":"G","t":"def G: G","d":"scalqa/lang/Short$"},
{"l":"api/scalqa/lang/String$.html","n":"String","t":"object String extends Containers[String]","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"ordering","t":"val ordering: Ordering[String]","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"orderingIgnoreCase","t":"val orderingIgnoreCase: Ordering[String]","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"Opaque","t":"def Opaque: Opaque","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"Builder","t":"type Builder = DEF","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"Builder","t":"def Builder: Builder","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"_methods","t":"type _methods = _Methods","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/String$.html","n":"_methods","t":"def _methods: _Methods","d":"scalqa/lang/String$"},
{"l":"api/scalqa/lang/any.html","n":"scalqa.lang.any","t":"package scalqa.lang.any","d":"scalqa/lang/any"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"_Methods","t":"trait _Methods","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"isVoid","t":"def isVoid[A](using inline d: Void[A]): Boolean","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"nonVoid","t":"def nonVoid[A](using inline d: Void[A]): Boolean","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"?","t":"def ?[A](using inline A: Specialized[A]): Opt","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"??","t":"def ??[A](using inline e: DEF[Empty[A]])(using inline d: Void[A]): DEF[A]","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"<>","t":"def <>[A](inline to: A)(using inline o: Ordering[A])(using inline A: Specialized[A]): Range","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"<>>","t":"def <>>[A](inline to: A)(using inline o: Ordering[A])(using inline A: Specialized[A]): Range","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"in","t":"def in[A](inline c: CONTAINER)(using inline d: Contains[CONTAINER, A]): Boolean","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"notIn","t":"def notIn[A](inline c: CONTAINER)(using inline d: Contains[CONTAINER, A]): Boolean","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"doc","t":"def doc[A](using inline d: Doc[A]): Doc","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"tag","t":"def tag[A](using inline t: Tag[A]): String","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"tp","t":"def tp[A](using inline t: Tag[A]): Unit","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"+-","t":"def +-[A](v: B)(using inline ta: Tag[A], inline tb: Tag[B]): String","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods.html","n":"self","t":"def self[A]: DEF[A]","d":"scalqa/lang/any/_Methods"},
{"l":"api/scalqa/lang/any/_Methods$.html","n":"_Methods","t":"object _Methods","d":"scalqa/lang/any/_Methods$"},
{"l":"api/scalqa/lang/any/_Methods$.html","n":"Self","t":"def Self: Self","d":"scalqa/lang/any/_Methods$"},
{"l":"api/scalqa/lang/any/_Methods$.html","n":"Self","t":"type Self[+A] = DEF[A]","d":"scalqa/lang/any/_Methods$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Def","t":"object Def","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"TypeName","t":"type TypeName[A] = TypeName[A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"TypeName","t":"def TypeName: TypeName","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Tag","t":"type Tag[-A] = Tag[A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Tag","t":"def Tag: Tag","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Doc","t":"type Doc[-A] = Doc[A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Void","t":"type Void[A] = Void[A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Void","t":"def Void: Void","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Empty","t":"type Empty[-A] = Empty[A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Empty","t":"def Empty: Empty","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Contains","t":"type Contains[-C, A] = Contains[C, A]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"Contains","t":"def Contains: Contains","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"ToStream","t":"type ToStream[-A, B] = ToStream[A, B]","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Def$.html","n":"ToStream","t":"def ToStream: ToStream","d":"scalqa/lang/any/Def$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Primitive","t":"object Primitive","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Type","t":"type Type = Byte | Char | Short | Int | Long | Float | Double | Boolean","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Opaque","t":"type Opaque = Opaque | Opaque | Opaque | Opaque | Opaque | Opaque | Opaque | Opaque","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Array","t":"type Array[A] = Array[A & Byte] | Array[A & Char] | Array[A & Short] | Array[A & Int] | Array[A & Long] | Array[A & Float] | Array[A & Double] | Array[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Stream","t":"type Stream[A] = Stream[A & Byte] | Stream[A & Char] | Stream[A & Short] | Stream[A & Int] | Stream[A & Long] | Stream[A & Float] | Stream[A & Double] | Stream[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Pack","t":"type Pack[A] = Pack[A & Byte] | Pack[A & Char] | Pack[A & Short] | Pack[A & Int] | Pack[A & Long] | Pack[A & Float] | Pack[A & Double] | Pack[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Range","t":"type Range[A] = Range[A & Byte] | Range[A & Char] | Range[A & Short] | Range[A & Int] | Range[A & Long] | Range[A & Float] | Range[A & Double] | Range[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Buffer","t":"type Buffer[A] = Buffer[A & Byte] | Buffer[A & Char] | Buffer[A & Short] | Buffer[A & Int] | Buffer[A & Long] | Buffer[A & Float] | Buffer[A & Double] | Buffer[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Collection","t":"type Collection[A] = Collection[A & Byte] | Collection[A & Char] | Collection[A & Short] | Collection[A & Int] | Collection[A & Long] | Collection[A & Float] | Collection[A & Double] | Collection[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Idx","t":"type Idx[A] = Idx[A & Byte] | Idx[A & Char] | Idx[A & Short] | Idx[A & Int] | Idx[A & Long] | Idx[A & Float] | Idx[A & Double] | Idx[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Lookup","t":"type Lookup[A, B] = Lookup[A & Byte, B] | Lookup[A & Char, B] | Lookup[A & Short, B] | Lookup[A & Int, B] | Lookup[A & Long, B] | Lookup[A & Float, B] | Lookup[A & Double, B] | Lookup[A & Boolean, B]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Opt","t":"type Opt[A] = DEF[A & Byte] | DEF[A & Char] | DEF[A & Short] | DEF[A & Int] | DEF[A & Long] | DEF[A & Float] | DEF[A & Double] | DEF[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Pro","t":"type Pro[A] = Pro[A & Byte] | Pro[A & Char] | Pro[A & Short] | Pro[A & Int] | Pro[A & Long] | Pro[A & Float] | Pro[A & Double] | Pro[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Primitive$.html","n":"Set","t":"type Set[A] = Set[A & Byte] | Set[A & Char] | Set[A & Short] | Set[A & Int] | Set[A & Long] | Set[A & Float] | Set[A & Double] | Set[A & Boolean]","d":"scalqa/lang/any/Primitive$"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Specialized","t":"class Specialized[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Array","t":"type Array <: Array[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Stream","t":"type Stream <: Stream[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Range","t":"type Range <: Range[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Pack","t":"type Pack <: Pack[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Buffer","t":"type Buffer <: Buffer[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Collection","t":"type Collection <: Collection[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Idx","t":"type Idx <: Idx[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Lookup","t":"type Lookup[B] <: Lookup[A, B]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Opt","t":"type Opt <: Opt[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Pro","t":"type Pro <: Pro[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized.html","n":"Set","t":"type Set <: Set[A]","d":"scalqa/lang/any/Specialized"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"Specialized","t":"object Specialized extends z_SpecializedDefault","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenBoolean","t":"given givenBoolean: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenByte","t":"given givenByte: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenChar","t":"given givenChar: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenShort","t":"given givenShort: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenInt","t":"given givenInt: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenLong","t":"given givenLong: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenFloat","t":"given givenFloat: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenDouble","t":"given givenDouble: Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"givenRef","t":"given givenRef: Specialized[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"Primitive","t":"type Primitive[A] = Primitive[A]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"Opt","t":"type Opt[A, OPT <: Opt[A]] = Opt[A, OPT]","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/Specialized$.html","n":"X","t":"def X: X","d":"scalqa/lang/any/Specialized$"},
{"l":"api/scalqa/lang/any/_methods.html","n":"scalqa.lang.any._methods","t":"package scalqa.lang.any._methods","d":"scalqa/lang/any/_methods"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"Self","t":"object Self","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"typeName","t":"def typeName[A](using d: TypeName[A]): String","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"id","t":"def id[A](using d: TypeName[A]): String","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"hash","t":"def hash[A]: String","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"apply","t":"def apply[A](inline f: A => U): A","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"map","t":"def map[A](inline f: A => B): B","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"mapIf","t":"def mapIf[A](inline filter: A => Boolean, inline f: A => A): A","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"isVoid","t":"def isVoid[A](using inline d: Void[A]): Boolean","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"nonVoid","t":"def nonVoid[A](using inline d: Void[A]): Boolean","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"isEmpty","t":"def isEmpty[A](using inline d: Empty[A]): Boolean","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"nonEmpty","t":"def nonEmpty[A](using inline d: Empty[A]): Boolean","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"pack","t":"def pack[A]: Pack[A]","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"z_Tag","t":"given z_Tag","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/any/_methods/Self$"},
{"l":"api/scalqa/lang/any/_methods/Self.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/any/_methods/Self$$TYPE$"},
{"l":"api/scalqa/lang/any/_methods/Self.html","n":"DEF","t":"type DEF[+A]","d":"scalqa/lang/any/_methods/Self$$TYPE$"},
{"l":"api/scalqa/lang/any/def.html","n":"scalqa.lang.any.def","t":"package scalqa.lang.any.def","d":"scalqa/lang/any/def"},
{"l":"api/scalqa/lang/any/def/Contains.html","n":"Contains","t":"trait Contains[-CONTAINER, A]","d":"scalqa/lang/any/def/Contains"},
{"l":"api/scalqa/lang/any/def/Contains.html","n":"contains","t":"def contains(c: CONTAINER, v: A): Boolean","d":"scalqa/lang/any/def/Contains"},
{"l":"api/scalqa/lang/any/def/Contains$.html","n":"Contains","t":"object Contains extends z_Contains","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$$givenAbleContain.html","n":"givenAbleContain","t":"given givenAbleContain[A]: Contains[Contain[A], A]","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$$givenAbleContain.html","n":"contains","t":"def contains(x: Contain[A], v: A): Boolean","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$.html","n":"givenIterableOnce","t":"given givenIterableOnce","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$.html","n":"givenJavaIterable","t":"given givenJavaIterable","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$.html","n":"givenJavaIterator","t":"given givenJavaIterator","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$.html","n":"givenProduct","t":"given givenProduct","d":"scalqa/lang/any/def/Contains$"},
{"l":"api/scalqa/lang/any/def/Contains$$givenAbleContain.html","n":"givenAbleContain","t":"given givenAbleContain[A]: Contains[Contain[A], A]","d":"scalqa/lang/any/def/Contains$$givenAbleContain"},
{"l":"api/scalqa/lang/any/def/Contains$$givenAbleContain.html","n":"contains","t":"def contains(x: Contain[A], v: A): Boolean","d":"scalqa/lang/any/def/Contains$$givenAbleContain"},
{"l":"api/scalqa/lang/any/def/Doc.html","n":"Doc","t":"trait Doc[-A] extends Tag[A]","d":"scalqa/lang/any/def/Doc"},
{"l":"api/scalqa/lang/any/def/Doc.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/any/def/Doc"},
{"l":"api/scalqa/lang/any/def/Empty.html","n":"Empty","t":"trait Empty[-A]","d":"scalqa/lang/any/def/Empty"},
{"l":"api/scalqa/lang/any/def/Empty.html","n":"value_isEmpty","t":"def value_isEmpty(v: A): Boolean","d":"scalqa/lang/any/def/Empty"},
{"l":"api/scalqa/lang/any/def/Empty$.html","n":"Empty","t":"object Empty extends zEmptyDefault","d":"scalqa/lang/any/def/Empty$"},
{"l":"api/scalqa/lang/any/def/Empty$$givenAbleEmpty$.html","n":"givenAbleEmpty","t":"given givenAbleEmpty: Empty[Empty]","d":"scalqa/lang/any/def/Empty$"},
{"l":"api/scalqa/lang/any/def/Empty$$givenAbleEmpty$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Empty): Boolean","d":"scalqa/lang/any/def/Empty$"},
{"l":"api/scalqa/lang/any/def/Empty$$givenAbleEmpty$.html","n":"givenAbleEmpty","t":"given givenAbleEmpty: Empty[Empty]","d":"scalqa/lang/any/def/Empty$$givenAbleEmpty$"},
{"l":"api/scalqa/lang/any/def/Empty$$givenAbleEmpty$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Empty): Boolean","d":"scalqa/lang/any/def/Empty$$givenAbleEmpty$"},
{"l":"api/scalqa/lang/any/def/Tag.html","n":"Tag","t":"trait Tag[-A]","d":"scalqa/lang/any/def/Tag"},
{"l":"api/scalqa/lang/any/def/Tag.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/any/def/Tag"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"Tag","t":"object Tag","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenBoolean","t":"given givenBoolean: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenByte","t":"given givenByte: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenChar","t":"given givenChar: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenShort","t":"given givenShort: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenInt","t":"given givenInt: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenLong","t":"given givenLong: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenFloat","t":"given givenFloat: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenDouble","t":"given givenDouble: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenArray","t":"given givenArray: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenDefault","t":"given givenDefault: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct1","t":"given givenProduct1: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct2","t":"given givenProduct2: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct3","t":"given givenProduct3: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct4","t":"given givenProduct4: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct5","t":"given givenProduct5: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct6","t":"given givenProduct6: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct7","t":"given givenProduct7: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct8","t":"given givenProduct8: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct9","t":"given givenProduct9: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct10","t":"given givenProduct10: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct11","t":"given givenProduct11: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct12","t":"given givenProduct12: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct13","t":"given givenProduct13: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct14","t":"given givenProduct14: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct15","t":"given givenProduct15: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct16","t":"given givenProduct16: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct17","t":"given givenProduct17: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct18","t":"given givenProduct18: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct19","t":"given givenProduct19: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct20","t":"given givenProduct20: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct21","t":"given givenProduct21: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/Tag$.html","n":"givenProduct22","t":"given givenProduct22: Tag[A]","d":"scalqa/lang/any/def/Tag$"},
{"l":"api/scalqa/lang/any/def/ToStream.html","n":"ToStream","t":"trait ToStream[-A, B]","d":"scalqa/lang/any/def/ToStream"},
{"l":"api/scalqa/lang/any/def/ToStream.html","n":"value_toStream","t":"def value_toStream(v: A): Stream[B]","d":"scalqa/lang/any/def/ToStream"},
{"l":"api/scalqa/lang/any/def/ToStream$.html","n":"ToStream","t":"object ToStream","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenSelfStream.html","n":"givenSelfStream","t":"given givenSelfStream[B]: ToStream[Stream[B], B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenSelfStream.html","n":"value_toStream","t":"def value_toStream(v: Stream[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenAbleStream.html","n":"givenAbleStream","t":"given givenAbleStream[B]: ToStream[Stream[B], B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenAbleStream.html","n":"value_toStream","t":"def value_toStream(v: Stream[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenIterableOnce.html","n":"givenIterableOnce","t":"given givenIterableOnce[B]: ToStream[IterableOnce[B], B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenIterableOnce.html","n":"value_toStream","t":"def value_toStream(v: IterableOnce[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterable.html","n":"givenJavaIterable","t":"given givenJavaIterable[B]: ToStream[Iterable[B], B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterable.html","n":"value_toStream","t":"def value_toStream(v: Iterable[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterator.html","n":"givenJavaIterator","t":"given givenJavaIterator[B]: ToStream[Iterator[B], B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterator.html","n":"value_toStream","t":"def value_toStream(v: Iterator[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenSelfStream.html","n":"givenSelfStream","t":"given givenSelfStream[B]: ToStream[Stream[B], B]","d":"scalqa/lang/any/def/ToStream$$givenSelfStream"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenSelfStream.html","n":"value_toStream","t":"def value_toStream(v: Stream[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$$givenSelfStream"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenAbleStream.html","n":"givenAbleStream","t":"given givenAbleStream[B]: ToStream[Stream[B], B]","d":"scalqa/lang/any/def/ToStream$$givenAbleStream"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenAbleStream.html","n":"value_toStream","t":"def value_toStream(v: Stream[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$$givenAbleStream"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenIterableOnce.html","n":"givenIterableOnce","t":"given givenIterableOnce[B]: ToStream[IterableOnce[B], B]","d":"scalqa/lang/any/def/ToStream$$givenIterableOnce"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenIterableOnce.html","n":"value_toStream","t":"def value_toStream(v: IterableOnce[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$$givenIterableOnce"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterable.html","n":"givenJavaIterable","t":"given givenJavaIterable[B]: ToStream[Iterable[B], B]","d":"scalqa/lang/any/def/ToStream$$givenJavaIterable"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterable.html","n":"value_toStream","t":"def value_toStream(v: Iterable[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$$givenJavaIterable"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterator.html","n":"givenJavaIterator","t":"given givenJavaIterator[B]: ToStream[Iterator[B], B]","d":"scalqa/lang/any/def/ToStream$$givenJavaIterator"},
{"l":"api/scalqa/lang/any/def/ToStream$$givenJavaIterator.html","n":"value_toStream","t":"def value_toStream(v: Iterator[B]): Stream[B]","d":"scalqa/lang/any/def/ToStream$$givenJavaIterator"},
{"l":"api/scalqa/lang/any/def/TypeName.html","n":"TypeName","t":"class TypeName[A]","d":"scalqa/lang/any/def/TypeName"},
{"l":"api/scalqa/lang/any/def/TypeName.html","n":"typeName","t":"def typeName: String","d":"scalqa/lang/any/def/TypeName"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"TypeName","t":"object TypeName extends z_TypeNameDefault","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"apply","t":"def apply[A <: Opaque](name: String): TypeName[A]","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenBoolean","t":"given givenBoolean","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenByte","t":"given givenByte","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenChar","t":"given givenChar","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenShort","t":"given givenShort","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenInt","t":"given givenInt","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenLong","t":"given givenLong","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenFloat","t":"given givenFloat","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/TypeName$.html","n":"givenDouble","t":"given givenDouble","d":"scalqa/lang/any/def/TypeName$"},
{"l":"api/scalqa/lang/any/def/Void.html","n":"Void","t":"trait Void[A]","d":"scalqa/lang/any/def/Void"},
{"l":"api/scalqa/lang/any/def/Void.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/any/def/Void"},
{"l":"api/scalqa/lang/any/def/Void$.html","n":"Void","t":"object Void","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenBoolean$.html","n":"givenBoolean","t":"given givenBoolean: Boolean[Boolean]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenBoolean$.html","n":"value_isVoid","t":"def value_isVoid(v: Boolean): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenByte$.html","n":"givenByte","t":"given givenByte: Byte[Byte]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenByte$.html","n":"value_isVoid","t":"def value_isVoid(v: Byte): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenChar$.html","n":"givenChar","t":"given givenChar: Char[Char]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenChar$.html","n":"value_isVoid","t":"def value_isVoid(v: Char): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenShort$.html","n":"givenShort","t":"given givenShort: Short[Short]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenShort$.html","n":"value_isVoid","t":"def value_isVoid(v: Short): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenInt$.html","n":"givenInt","t":"given givenInt: Int[Int]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenInt$.html","n":"value_isVoid","t":"def value_isVoid(v: Int): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenLong$.html","n":"givenLong","t":"given givenLong: Long[Long]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenLong$.html","n":"value_isVoid","t":"def value_isVoid(v: Long): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenFloat$.html","n":"givenFloat","t":"given givenFloat: Float[Float]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenFloat$.html","n":"value_isVoid","t":"def value_isVoid(v: Float): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenDouble$.html","n":"givenDouble","t":"given givenDouble: Double[Double]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenDouble$.html","n":"value_isVoid","t":"def value_isVoid(v: Double): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenString$.html","n":"givenString","t":"given givenString: Void[String]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenString$.html","n":"value_isVoid","t":"def value_isVoid(v: String): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenList.html","n":"givenList","t":"given givenList[A]: Void[List[A]]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenList.html","n":"value_isVoid","t":"def value_isVoid(v: List[A]): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenOption.html","n":"givenOption","t":"given givenOption[A]: Void[Option[A]]","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$givenOption.html","n":"value_isVoid","t":"def value_isVoid(v: Option[A]): Boolean","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$.html","n":"givenDefault","t":"given givenDefault","d":"scalqa/lang/any/def/Void$"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive.html","n":"Primitive","t":"trait Primitive[A <: Type] extends Void[A]","d":"scalqa/lang/any/def/Void$$Primitive"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$.html","n":"Primitive","t":"object Primitive","d":"scalqa/lang/any/def/Void$$Primitive$"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$.html","n":"X","t":"object X","d":"scalqa/lang/any/def/Void$$Primitive$$X$"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Boolean.html","n":"Boolean","t":"trait Boolean[A <: Boolean] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Boolean"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Byte.html","n":"Byte","t":"trait Byte[A <: Byte] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Byte"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Char.html","n":"Char","t":"trait Char[A <: Char] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Char"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Short.html","n":"Short","t":"trait Short[A <: Short] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Short"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Int.html","n":"Int","t":"trait Int[A <: Int] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Int"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Long.html","n":"Long","t":"trait Long[A <: Long] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Long"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Float.html","n":"Float","t":"trait Float[A <: Float] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Float"},
{"l":"api/scalqa/lang/any/def/Void$$Primitive$$X$$Double.html","n":"Double","t":"trait Double[A <: Double] extends Primitive[A]","d":"scalqa/lang/any/def/Void$$Primitive$$X$$Double"},
{"l":"api/scalqa/lang/any/def/Void$$givenBoolean$.html","n":"givenBoolean","t":"given givenBoolean: Boolean[Boolean]","d":"scalqa/lang/any/def/Void$$givenBoolean$"},
{"l":"api/scalqa/lang/any/def/Void$$givenBoolean$.html","n":"value_isVoid","t":"def value_isVoid(v: Boolean): Boolean","d":"scalqa/lang/any/def/Void$$givenBoolean$"},
{"l":"api/scalqa/lang/any/def/Void$$givenByte$.html","n":"givenByte","t":"given givenByte: Byte[Byte]","d":"scalqa/lang/any/def/Void$$givenByte$"},
{"l":"api/scalqa/lang/any/def/Void$$givenByte$.html","n":"value_isVoid","t":"def value_isVoid(v: Byte): Boolean","d":"scalqa/lang/any/def/Void$$givenByte$"},
{"l":"api/scalqa/lang/any/def/Void$$givenChar$.html","n":"givenChar","t":"given givenChar: Char[Char]","d":"scalqa/lang/any/def/Void$$givenChar$"},
{"l":"api/scalqa/lang/any/def/Void$$givenChar$.html","n":"value_isVoid","t":"def value_isVoid(v: Char): Boolean","d":"scalqa/lang/any/def/Void$$givenChar$"},
{"l":"api/scalqa/lang/any/def/Void$$givenShort$.html","n":"givenShort","t":"given givenShort: Short[Short]","d":"scalqa/lang/any/def/Void$$givenShort$"},
{"l":"api/scalqa/lang/any/def/Void$$givenShort$.html","n":"value_isVoid","t":"def value_isVoid(v: Short): Boolean","d":"scalqa/lang/any/def/Void$$givenShort$"},
{"l":"api/scalqa/lang/any/def/Void$$givenInt$.html","n":"givenInt","t":"given givenInt: Int[Int]","d":"scalqa/lang/any/def/Void$$givenInt$"},
{"l":"api/scalqa/lang/any/def/Void$$givenInt$.html","n":"value_isVoid","t":"def value_isVoid(v: Int): Boolean","d":"scalqa/lang/any/def/Void$$givenInt$"},
{"l":"api/scalqa/lang/any/def/Void$$givenLong$.html","n":"givenLong","t":"given givenLong: Long[Long]","d":"scalqa/lang/any/def/Void$$givenLong$"},
{"l":"api/scalqa/lang/any/def/Void$$givenLong$.html","n":"value_isVoid","t":"def value_isVoid(v: Long): Boolean","d":"scalqa/lang/any/def/Void$$givenLong$"},
{"l":"api/scalqa/lang/any/def/Void$$givenFloat$.html","n":"givenFloat","t":"given givenFloat: Float[Float]","d":"scalqa/lang/any/def/Void$$givenFloat$"},
{"l":"api/scalqa/lang/any/def/Void$$givenFloat$.html","n":"value_isVoid","t":"def value_isVoid(v: Float): Boolean","d":"scalqa/lang/any/def/Void$$givenFloat$"},
{"l":"api/scalqa/lang/any/def/Void$$givenDouble$.html","n":"givenDouble","t":"given givenDouble: Double[Double]","d":"scalqa/lang/any/def/Void$$givenDouble$"},
{"l":"api/scalqa/lang/any/def/Void$$givenDouble$.html","n":"value_isVoid","t":"def value_isVoid(v: Double): Boolean","d":"scalqa/lang/any/def/Void$$givenDouble$"},
{"l":"api/scalqa/lang/any/def/Void$$givenString$.html","n":"givenString","t":"given givenString: Void[String]","d":"scalqa/lang/any/def/Void$$givenString$"},
{"l":"api/scalqa/lang/any/def/Void$$givenString$.html","n":"value_isVoid","t":"def value_isVoid(v: String): Boolean","d":"scalqa/lang/any/def/Void$$givenString$"},
{"l":"api/scalqa/lang/any/def/Void$$givenList.html","n":"givenList","t":"given givenList[A]: Void[List[A]]","d":"scalqa/lang/any/def/Void$$givenList"},
{"l":"api/scalqa/lang/any/def/Void$$givenList.html","n":"value_isVoid","t":"def value_isVoid(v: List[A]): Boolean","d":"scalqa/lang/any/def/Void$$givenList"},
{"l":"api/scalqa/lang/any/def/Void$$givenOption.html","n":"givenOption","t":"given givenOption[A]: Void[Option[A]]","d":"scalqa/lang/any/def/Void$$givenOption"},
{"l":"api/scalqa/lang/any/def/Void$$givenOption.html","n":"value_isVoid","t":"def value_isVoid(v: Option[A]): Boolean","d":"scalqa/lang/any/def/Void$$givenOption"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault.html","n":"zEmptyDefault","t":"trait zEmptyDefault","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$.html","n":"givenIterableOnce","t":"given givenIterableOnce: Empty[IterableOnceOps[_, _[_], _]]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$.html","n":"value_isEmpty","t":"def value_isEmpty(v: IterableOnceOps[_, _[_], _]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterable$.html","n":"givenJIterable","t":"given givenJIterable: Empty[Iterable[_]]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterable$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Iterable[_]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterator$.html","n":"givenJIterator","t":"given givenJIterator: Empty[Iterator[_]]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterator$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Iterator[_]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenString$.html","n":"givenString","t":"given givenString: Empty[String]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenString$.html","n":"value_isEmpty","t":"def value_isEmpty(v: String): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSize$.html","n":"givenAbleSize","t":"given givenAbleSize: Empty[Size]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSize$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Size): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$.html","n":"givenAbleSizeLong","t":"given givenAbleSizeLong: Empty[Long]","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Long): Boolean","d":"scalqa/lang/any/def/zEmptyDefault"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$.html","n":"givenIterableOnce","t":"given givenIterableOnce: Empty[IterableOnceOps[_, _[_], _]]","d":"scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$.html","n":"value_isEmpty","t":"def value_isEmpty(v: IterableOnceOps[_, _[_], _]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenIterableOnce$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterable$.html","n":"givenJIterable","t":"given givenJIterable: Empty[Iterable[_]]","d":"scalqa/lang/any/def/zEmptyDefault$givenJIterable$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterable$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Iterable[_]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenJIterable$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterator$.html","n":"givenJIterator","t":"given givenJIterator: Empty[Iterator[_]]","d":"scalqa/lang/any/def/zEmptyDefault$givenJIterator$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenJIterator$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Iterator[_]): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenJIterator$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenString$.html","n":"givenString","t":"given givenString: Empty[String]","d":"scalqa/lang/any/def/zEmptyDefault$givenString$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenString$.html","n":"value_isEmpty","t":"def value_isEmpty(v: String): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenString$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSize$.html","n":"givenAbleSize","t":"given givenAbleSize: Empty[Size]","d":"scalqa/lang/any/def/zEmptyDefault$givenAbleSize$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSize$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Size): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenAbleSize$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$.html","n":"givenAbleSizeLong","t":"given givenAbleSizeLong: Empty[Long]","d":"scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$"},
{"l":"api/scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$.html","n":"value_isEmpty","t":"def value_isEmpty(v: Long): Boolean","d":"scalqa/lang/any/def/zEmptyDefault$givenAbleSizeLong$"},
{"l":"api/scalqa/lang/any/specialized.html","n":"scalqa.lang.any.specialized","t":"package scalqa.lang.any.specialized","d":"scalqa/lang/any/specialized"},
{"l":"api/scalqa/lang/any/specialized/Opt.html","n":"Opt","t":"class Opt[A, OPT <: Opt[A]]","d":"scalqa/lang/any/specialized/Opt"},
{"l":"api/scalqa/lang/any/specialized/Opt.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => OPT): Opt[A]","d":"scalqa/lang/any/specialized/Opt"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"Opt","t":"object Opt extends zOptDefault","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenBooleanOpt","t":"given givenBooleanOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenByteOpt","t":"given givenByteOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenCharOpt","t":"given givenCharOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenShortOpt","t":"given givenShortOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenIntOpt","t":"given givenIntOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenLongOpt","t":"given givenLongOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenFloatOpt","t":"given givenFloatOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenDoubleOpt","t":"given givenDoubleOpt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptBoolean","t":"given givenValOptBoolean: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptByte","t":"given givenValOptByte: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptChar","t":"given givenValOptChar: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptShort","t":"given givenValOptShort: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptInt","t":"given givenValOptInt: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptLong","t":"given givenValOptLong: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptFloat","t":"given givenValOptFloat: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptDouble","t":"given givenValOptDouble: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$.html","n":"givenValOptAnyRef","t":"given givenValOptAnyRef: Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$.html","n":"X","t":"object X","d":"scalqa/lang/any/specialized/Opt$$X$"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$BooleanRaw.html","n":"BooleanRaw","t":"class BooleanRaw[A <: Boolean]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$BooleanRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$BooleanRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$BooleanRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ByteRaw.html","n":"ByteRaw","t":"class ByteRaw[A <: Byte]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$ByteRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ByteRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$ByteRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$CharRaw.html","n":"CharRaw","t":"class CharRaw[A <: Char]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$CharRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$CharRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$CharRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ShortRaw.html","n":"ShortRaw","t":"class ShortRaw[A <: Short]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$ShortRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ShortRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$ShortRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$IntRaw.html","n":"IntRaw","t":"class IntRaw[A <: Int]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$IntRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$IntRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$IntRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$LongRaw.html","n":"LongRaw","t":"class LongRaw[A <: Long]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$LongRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$LongRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$LongRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$FloatRaw.html","n":"FloatRaw","t":"class FloatRaw[A <: Float]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$FloatRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$FloatRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$FloatRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$DoubleRaw.html","n":"DoubleRaw","t":"class DoubleRaw[A <: Double]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$DoubleRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$DoubleRaw.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$DoubleRaw"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$BooleanRef.html","n":"BooleanRef","t":"class BooleanRef[A <: Boolean]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$BooleanRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$BooleanRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$BooleanRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ByteRef.html","n":"ByteRef","t":"class ByteRef[A <: Byte]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$ByteRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ByteRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$ByteRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$CharRef.html","n":"CharRef","t":"class CharRef[A <: Char]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$CharRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$CharRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$CharRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ShortRef.html","n":"ShortRef","t":"class ShortRef[A <: Short]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$ShortRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$ShortRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$ShortRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$IntRef.html","n":"IntRef","t":"class IntRef[A <: Int]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$IntRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$IntRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$IntRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$LongRef.html","n":"LongRef","t":"class LongRef[A <: Long]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$LongRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$LongRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$LongRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$FloatRef.html","n":"FloatRef","t":"class FloatRef[A <: Float]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$FloatRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$FloatRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$FloatRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$DoubleRef.html","n":"DoubleRef","t":"class DoubleRef[A <: Double]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$DoubleRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$DoubleRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$DoubleRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$AnyRef.html","n":"AnyRef","t":"class AnyRef[A]() extends Opt[A, DEF[A]]","d":"scalqa/lang/any/specialized/Opt$$X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/Opt$$X$$AnyRef.html","n":"apply","t":"def apply[B](inline v: B, inline f: B => DEF[A]): DEF[A]","d":"scalqa/lang/any/specialized/Opt$$X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Primitive","t":"class Primitive[A] extends Specialized[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Array","t":"type Array <: Array[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Stream","t":"type Stream <: Stream[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Range","t":"type Range <: Range[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Pack","t":"type Pack <: Pack[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Buffer","t":"type Buffer <: Buffer[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Collection","t":"type Collection <: Collection[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Idx","t":"type Idx <: Idx[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Lookup","t":"type Lookup[B] <: Lookup[A, B]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Opt","t":"type Opt <: Opt[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Pro","t":"type Pro <: Pro[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/Primitive.html","n":"Set","t":"type Set <: Set[A]","d":"scalqa/lang/any/specialized/Primitive"},
{"l":"api/scalqa/lang/any/specialized/X$.html","n":"X","t":"object X","d":"scalqa/lang/any/specialized/X$"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"AnyRef","t":"class AnyRef[A] extends Specialized[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Array","t":"type Array = Array[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$AnyRef.html","n":"Lookup","t":"type Lookup[B] = Stable[A, B]","d":"scalqa/lang/any/specialized/X$$AnyRef"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Boolean","t":"class Boolean[A <: Boolean] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Stream","t":"type Stream = Stream[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Idx","t":"type Idx = Idx[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Array","t":"type Array = Array[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Range","t":"type Range = Range[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Opt","t":"type Opt = DEF[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Collection","t":"type Collection = Collection[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Pack","t":"type Pack = Pack[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Pro","t":"type Pro = Pro[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Buffer","t":"type Buffer = Buffer[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Set","t":"type Set = Set[A & Boolean]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Boolean.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Boolean, B]","d":"scalqa/lang/any/specialized/X$$Boolean"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Byte","t":"class Byte[A <: Byte] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Stream","t":"type Stream = Stream[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Idx","t":"type Idx = Idx[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Array","t":"type Array = Array[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Range","t":"type Range = Range[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Opt","t":"type Opt = DEF[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Collection","t":"type Collection = Collection[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Pack","t":"type Pack = Pack[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Pro","t":"type Pro = Pro[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Buffer","t":"type Buffer = Buffer[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Set","t":"type Set = Set[A & Byte]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Byte.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Byte, B]","d":"scalqa/lang/any/specialized/X$$Byte"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Char","t":"class Char[A <: Char] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Stream","t":"type Stream = Stream[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Idx","t":"type Idx = Idx[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Array","t":"type Array = Array[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Range","t":"type Range = Range[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Opt","t":"type Opt = DEF[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Collection","t":"type Collection = Collection[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Pack","t":"type Pack = Pack[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Pro","t":"type Pro = Pro[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Buffer","t":"type Buffer = Buffer[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Set","t":"type Set = Set[A & Char]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Char.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Char, B]","d":"scalqa/lang/any/specialized/X$$Char"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Short","t":"class Short[A <: Short] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Stream","t":"type Stream = Stream[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Idx","t":"type Idx = Idx[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Array","t":"type Array = Array[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Range","t":"type Range = Range[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Opt","t":"type Opt = DEF[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Collection","t":"type Collection = Collection[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Pack","t":"type Pack = Pack[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Pro","t":"type Pro = Pro[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Buffer","t":"type Buffer = Buffer[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Set","t":"type Set = Set[A & Short]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Short.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Short, B]","d":"scalqa/lang/any/specialized/X$$Short"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Int","t":"class Int[A <: Int] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Stream","t":"type Stream = Stream[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Idx","t":"type Idx = Idx[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Array","t":"type Array = Array[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Range","t":"type Range = Range[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Opt","t":"type Opt = DEF[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Collection","t":"type Collection = Collection[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Pack","t":"type Pack = Pack[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Pro","t":"type Pro = Pro[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Buffer","t":"type Buffer = Buffer[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Set","t":"type Set = Set[A & Int]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Int.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Int, B]","d":"scalqa/lang/any/specialized/X$$Int"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Long","t":"class Long[A <: Long] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Stream","t":"type Stream = Stream[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Idx","t":"type Idx = Idx[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Array","t":"type Array = Array[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Range","t":"type Range = Range[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Opt","t":"type Opt = DEF[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Collection","t":"type Collection = Collection[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Pack","t":"type Pack = Pack[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Pro","t":"type Pro = Pro[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Buffer","t":"type Buffer = Buffer[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Set","t":"type Set = Set[A & Long]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Long.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Long, B]","d":"scalqa/lang/any/specialized/X$$Long"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Float","t":"class Float[A <: Float] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Stream","t":"type Stream = Stream[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Idx","t":"type Idx = Idx[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Array","t":"type Array = Array[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Range","t":"type Range = Range[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Opt","t":"type Opt = DEF[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Collection","t":"type Collection = Collection[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Pack","t":"type Pack = Pack[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Pro","t":"type Pro = Pro[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Buffer","t":"type Buffer = Buffer[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Set","t":"type Set = Set[A & Float]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Float.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Float, B]","d":"scalqa/lang/any/specialized/X$$Float"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Double","t":"class Double[A <: Double] extends Primitive[A]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Stream","t":"type Stream = Stream[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Idx","t":"type Idx = Idx[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Array","t":"type Array = Array[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Range","t":"type Range = Range[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Opt","t":"type Opt = DEF[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Collection","t":"type Collection = Collection[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Pack","t":"type Pack = Pack[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Pro","t":"type Pro = Pro[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Buffer","t":"type Buffer = Buffer[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Set","t":"type Set = Set[A & Double]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/any/specialized/X$$Double.html","n":"Lookup","t":"type Lookup[B] = Stable[A & Double, B]","d":"scalqa/lang/any/specialized/X$$Double"},
{"l":"api/scalqa/lang/anyref.html","n":"scalqa.lang.anyref","t":"package scalqa.lang.anyref","d":"scalqa/lang/anyref"},
{"l":"api/scalqa/lang/anyref.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/anyref"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"Buffer","t":"class Buffer[A](arrayToUse: Array[AnyRef], sizeToStartWith: Int) extends Buffer[A]","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/anyref/Buffer"},
{"l":"api/scalqa/lang/anyref/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/anyref/Buffer$"},
{"l":"api/scalqa/lang/anyref/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A](inline v: NEW): Buffer[A]","d":"scalqa/lang/anyref/Buffer$"},
{"l":"api/scalqa/lang/anyref/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray[A](v: Stream[A])(using t: ClassTag[A]): Array[A]","d":"scalqa/lang/anyref/Buffer$"},
{"l":"api/scalqa/lang/anyref/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll[A](x: Array[A], v: Stream[A]): Array[A]","d":"scalqa/lang/anyref/Buffer$"},
{"l":"api/scalqa/lang/anyref/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[AnyRef], i: Int, v: Stream[AnyRef], sz: Int): Array[AnyRef]","d":"scalqa/lang/anyref/Buffer$"},
{"l":"api/scalqa/lang/anyref/G$.html","n":"G","t":"object G","d":"scalqa/lang/anyref/G$"},
{"l":"api/scalqa/lang/anyref/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/anyref/G$"},
{"l":"api/scalqa/lang/anyref/G$.html","n":"Range","t":"type Range[A] = Range[A]","d":"scalqa/lang/anyref/G$"},
{"l":"api/scalqa/lang/anyref/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/anyref/G$"},
{"l":"api/scalqa/lang/anyref/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/anyref/G$"},
{"l":"api/scalqa/lang/anyref/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/anyref/Opaque$"},
{"l":"api/scalqa/lang/anyref/Opaque$.html","n":"Base","t":"type Base[A <: Opaque, REAL <: AnyRef] = Base[A, REAL]","d":"scalqa/lang/anyref/Opaque$"},
{"l":"api/scalqa/lang/anyref/Opaque$.html","n":"Base","t":"def Base: Base","d":"scalqa/lang/anyref/Opaque$"},
{"l":"api/scalqa/lang/anyref/Opaque$.html","n":"Data","t":"type Data[A <: Opaque, REAL <: AnyRef] = Data[A, REAL]","d":"scalqa/lang/anyref/Opaque$"},
{"l":"api/scalqa/lang/anyref/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/anyref/Opaque$"},
{"l":"api/scalqa/lang/anyref/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/anyref/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/anyref/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/anyref/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/anyref/g.html","n":"scalqa.lang.anyref.g","t":"package scalqa.lang.anyref.g","d":"scalqa/lang/anyref/g"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Containers","t":"type Containers[A] = Containers[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Stream","t":"type Stream[A] = Stream[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Pack","t":"type Pack[A] = Pack[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Range","t":"type Range[A] = Range[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Opt","t":"type Opt[A] = Opt[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Buffer","t":"type Buffer[A] = Buffer[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Collection","t":"type Collection[A] = Collection[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Idx","t":"type Idx[A] = Idx[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Lookup","t":"type Lookup[A] = Lookup[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Set","t":"type Set[A] = Set[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Pro","t":"type Pro[A] = Pro[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Promise","t":"type Promise[A] = Promise[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Companion$.html","n":"Result","t":"type Result[A] = Result[A]","d":"scalqa/lang/anyref/g/Companion$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToByte","t":"type ToByte[A] = ToAnyByte[A, Byte]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToChar","t":"type ToChar[A] = ToAnyChar[A, Char]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToShort","t":"type ToShort[A] = ToAnyShort[A, Short]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToInt","t":"type ToInt[A] = ToAnyInt[A, Int]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToLong","t":"type ToLong[A] = ToAnyLong[A, Long]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A] = ToAnyFloat[A, Float]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A] = ToAnyDouble[A, Double]","d":"scalqa/lang/anyref/g/Fun$"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A, B <: Boolean]","d":"scalqa/lang/anyref/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A, B <: Byte]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A, B <: Char]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A, B <: Short]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A, B <: Int]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A, B <: Long]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A, B <: Float]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A, B <: Double]()","d":"scalqa/lang/anyref/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/anyref/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/anyref/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/anyref/g/Range.html","n":"Range","t":"class Range[A](val start: A, val end: A, val endIsIn: Boolean)(using val ordering: Ordering[A]) extends Abstract[A]","d":"scalqa/lang/anyref/g/Range"},
{"l":"api/scalqa/lang/anyref/g/Range.html","n":"start","t":"val start: A","d":"scalqa/lang/anyref/g/Range"},
{"l":"api/scalqa/lang/anyref/g/Range.html","n":"end","t":"val end: A","d":"scalqa/lang/anyref/g/Range"},
{"l":"api/scalqa/lang/anyref/g/Range.html","n":"endIsIn","t":"val endIsIn: Boolean","d":"scalqa/lang/anyref/g/Range"},
{"l":"api/scalqa/lang/anyref/g/Range.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/anyref/g/Range"},
{"l":"api/scalqa/lang/anyref/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/anyref/g/Range$"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$.html","n":"X","t":"object X","d":"scalqa/lang/anyref/g/Range$$X$"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"Base","t":"class Base[A, THIS <: Range[A]] extends Range[A]","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"THIS_TYPE","t":"type THIS_TYPE = THIS","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Base.html","n":"makeNew","t":"def makeNew(s: A, e: A, in: Boolean): THIS_TYPE","d":"scalqa/lang/anyref/g/Range$$X$$Base"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Base[A, Range[A]]","d":"scalqa/lang/anyref/g/Range$$X$$Abstract"},
{"l":"api/scalqa/lang/anyref/g/Range$$X$$Abstract.html","n":"makeNew","t":"def makeNew(s: A, e: A, in: Boolean): Range[A]","d":"scalqa/lang/anyref/g/Range$$X$$Abstract"},
{"l":"api/scalqa/lang/anyref/g/companion.html","n":"scalqa.lang.anyref.g.companion","t":"package scalqa.lang.anyref.g.companion","d":"scalqa/lang/anyref/g/companion"},
{"l":"api/scalqa/lang/anyref/g/companion/Buffer.html","n":"Buffer","t":"class Buffer[A]","d":"scalqa/lang/anyref/g/companion/Buffer"},
{"l":"api/scalqa/lang/anyref/g/companion/Buffer.html","n":"apply","t":"def apply(initSize: Int): Buffer[A]","d":"scalqa/lang/anyref/g/companion/Buffer"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"Collection","t":"class Collection[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"apply","t":"def apply(v: A): Collection[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"apply","t":"def apply(v1: A, v2: A): Collection[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"apply","t":"def apply(v1: A, v2: A, v3: A, vs: A*): Collection[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/anyref/g/companion/Collection$"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/anyref/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Containers","t":"trait Containers[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Range","t":"def Range: Range[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/anyref/g/companion/Containers"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"Idx","t":"class Idx[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"apply","t":"def apply(v: A): Idx[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"apply","t":"def apply(v1: A, v2: A): Idx[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"apply","t":"def apply(v1: A, v2: A, v3: A, vs: A*): Idx[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/anyref/g/companion/Idx$"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/anyref/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"apply","t":"def apply[B](v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"apply","t":"def apply[B](v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Lookup"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/anyref/g/companion/Lookup$"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A]","d":"scalqa/lang/anyref/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A]","d":"scalqa/lang/anyref/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](): Mutable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Mutable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Lookup$$Mutable.html","n":"concurrent","t":"def concurrent[B](): Mutable[A, B]","d":"scalqa/lang/anyref/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Opt.html","n":"Opt","t":"class Opt[A]","d":"scalqa/lang/anyref/g/companion/Opt"},
{"l":"api/scalqa/lang/anyref/g/companion/Opt.html","n":"apply","t":"def apply[A](v: A): DEF[A]","d":"scalqa/lang/anyref/g/companion/Opt"},
{"l":"api/scalqa/lang/anyref/g/companion/Opt.html","n":"option","t":"def option[A](v: Option[A]): DEF[A]","d":"scalqa/lang/anyref/g/companion/Opt"},
{"l":"api/scalqa/lang/anyref/g/companion/Opt.html","n":"optional","t":"def optional[A](v: Optional[A]): DEF[A]","d":"scalqa/lang/anyref/g/companion/Opt"},
{"l":"api/scalqa/lang/anyref/g/companion/Pack.html","n":"Pack","t":"class Pack[A]","d":"scalqa/lang/anyref/g/companion/Pack"},
{"l":"api/scalqa/lang/anyref/g/companion/Pack.html","n":"apply","t":"def apply(v: A): Pack[A]","d":"scalqa/lang/anyref/g/companion/Pack"},
{"l":"api/scalqa/lang/anyref/g/companion/Pack.html","n":"apply","t":"def apply(v1: A, v2: A): Pack[A]","d":"scalqa/lang/anyref/g/companion/Pack"},
{"l":"api/scalqa/lang/anyref/g/companion/Pack.html","n":"apply","t":"def apply(v1: A, v2: A, v3: A, vs: A*): Pack[A]","d":"scalqa/lang/anyref/g/companion/Pack"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"Pro","t":"class Pro[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"apply","t":"def apply[A](source: => A): Pro[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/anyref/g/companion/Pro$"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Mutable.html","n":"named","t":"def named(name: String, v: A): Mutable[A] & Name","d":"scalqa/lang/anyref/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"apply","t":"def apply(v: => A, dependencies: Stream[Observable]): Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"apply","t":"def apply(v: => A, dependencies: Observable*): Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"constant","t":"def constant(v: A): Observable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"named","t":"def named(name: String, v: => A, dependencies: Stream[Observable]): Observable[A] & Name","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"refreshable","t":"def refreshable(v: => A, dependencies: Stream[Observable]): Observable[A] & Refresh","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$Observable.html","n":"namedRefreshable","t":"def namedRefreshable(name: String, v: => A, dependencies: Stream[Observable]): Observable[A] & Name & Refresh","d":"scalqa/lang/anyref/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/anyref/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Pro$$ObservableMutable.html","n":"named","t":"def named(name: String, v: A): ObservableMutable[A] & Name","d":"scalqa/lang/anyref/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/anyref/g/companion/Promise.html","n":"Promise","t":"class Promise[A]","d":"scalqa/lang/anyref/g/companion/Promise"},
{"l":"api/scalqa/lang/anyref/g/companion/Promise.html","n":"apply","t":"def apply[A](calc: => A)(using e: ExecutionContext): Promise[A]","d":"scalqa/lang/anyref/g/companion/Promise"},
{"l":"api/scalqa/lang/anyref/g/companion/Promise.html","n":"ready","t":"def ready[A](v: A | Problem): Promise[A]","d":"scalqa/lang/anyref/g/companion/Promise"},
{"l":"api/scalqa/lang/anyref/g/companion/Range.html","n":"Range","t":"class Range[A]","d":"scalqa/lang/anyref/g/companion/Range"},
{"l":"api/scalqa/lang/anyref/g/companion/Range.html","n":"apply","t":"def apply(start: A, end: A, endIsIn: Boolean)(using Ordering[A]): Range[A]","d":"scalqa/lang/anyref/g/companion/Range"},
{"l":"api/scalqa/lang/anyref/g/companion/Result.html","n":"Result","t":"class Result[A]","d":"scalqa/lang/anyref/g/companion/Result"},
{"l":"api/scalqa/lang/anyref/g/companion/Result.html","n":"apply","t":"def apply(v: A | Problem): DEF[A]","d":"scalqa/lang/anyref/g/companion/Result"},
{"l":"api/scalqa/lang/anyref/g/companion/Result.html","n":"fail","t":"def fail(message: String): DEF[A]","d":"scalqa/lang/anyref/g/companion/Result"},
{"l":"api/scalqa/lang/anyref/g/companion/Set.html","n":"Set","t":"class Set[A]","d":"scalqa/lang/anyref/g/companion/Set"},
{"l":"api/scalqa/lang/anyref/g/companion/Set.html","n":"apply","t":"def apply(v: A*): Set[A]","d":"scalqa/lang/anyref/g/companion/Set"},
{"l":"api/scalqa/lang/anyref/g/companion/Set.html","n":"apply","t":"def apply(v: Stream[A]): Set[A]","d":"scalqa/lang/anyref/g/companion/Set"},
{"l":"api/scalqa/lang/anyref/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/anyref/g/companion/Set"},
{"l":"api/scalqa/lang/anyref/g/companion/Stream.html","n":"Stream","t":"class Stream[A]","d":"scalqa/lang/anyref/g/companion/Stream"},
{"l":"api/scalqa/lang/anyref/g/companion/Stream.html","n":"apply","t":"def apply: Stream[A]","d":"scalqa/lang/anyref/g/companion/Stream"},
{"l":"api/scalqa/lang/anyref/g/companion/Stream.html","n":"apply","t":"def apply(v: A): Stream[A]","d":"scalqa/lang/anyref/g/companion/Stream"},
{"l":"api/scalqa/lang/anyref/g/companion/Stream.html","n":"apply","t":"def apply(v1: A, v2: A): Stream[A]","d":"scalqa/lang/anyref/g/companion/Stream"},
{"l":"api/scalqa/lang/anyref/g/companion/Stream.html","n":"apply","t":"def apply(v1: A, v2: A, v3: A, vs: A*): Stream[A]","d":"scalqa/lang/anyref/g/companion/Stream"},
{"l":"api/scalqa/lang/anyref/opaque.html","n":"scalqa.lang.anyref.opaque","t":"package scalqa.lang.anyref.opaque","d":"scalqa/lang/anyref/opaque"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque, REAL <: AnyRef](name: String)(using ct: ClassTag[REAL]) extends OpaqueBase[A] with _methods[A, REAL]","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Void[A]","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base.html","n":"toOpaque","t":"def toOpaque[B >: REAL <: REAL]: THIS_OPAQUE","d":"scalqa/lang/anyref/opaque/Base"},
{"l":"api/scalqa/lang/anyref/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/anyref/opaque/Base$"},
{"l":"api/scalqa/lang/anyref/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods[A <: Opaque, REAL <: AnyRef]","d":"scalqa/lang/anyref/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: A]: THIS_REAL","d":"scalqa/lang/anyref/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque, REAL <: AnyRef](name: String)(using ct: ClassTag[REAL]) extends Base[A, REAL] with Containers[A] with _methods[A, REAL]","d":"scalqa/lang/anyref/opaque/Data"},
{"l":"api/scalqa/lang/anyref/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/anyref/opaque/Data$"},
{"l":"api/scalqa/lang/anyref/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque, REAL <: AnyRef] = Ordered[A, REAL]","d":"scalqa/lang/anyref/opaque/Data$"},
{"l":"api/scalqa/lang/anyref/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/anyref/opaque/Data$"},
{"l":"api/scalqa/lang/anyref/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods[A <: Opaque, REAL <: AnyRef] extends _methods[A, REAL]","d":"scalqa/lang/anyref/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data.html","n":"scalqa.lang.anyref.opaque.data","t":"package scalqa.lang.anyref.opaque.data","d":"scalqa/lang/anyref/opaque/data"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque, REAL <: AnyRef](name: String)(using realOrdering: Ordering[REAL], ct: ClassTag[REAL]) extends Data[A, REAL] with _methods[A, REAL]","d":"scalqa/lang/anyref/opaque/data/Ordered"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/anyref/opaque/data/Ordered"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/anyref/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods[A <: Opaque, REAL <: AnyRef] extends _methods[A, REAL]","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":"max","t":"def max(v: A): A","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":"min","t":"def min(v: A): A","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":"<","t":"def <(v: A): Boolean","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=(v: A): Boolean","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":">","t":"def >(v: A): Boolean","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/anyref/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=(v: A): Boolean","d":"scalqa/lang/anyref/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/array.html","n":"scalqa.lang.array","t":"package scalqa.lang.array","d":"scalqa/lang/array"},
{"l":"api/scalqa/lang/array/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"stream","t":"def stream[A](using inline A: Specialized[A]): Stream & Size","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"stream","t":"def stream[A](inline sz: Int)(using inline A: Specialized[A]): Stream & Size","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"pack","t":"def pack[A](using inline A: Specialized[A]): Pack","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"copyTo","t":"def copyTo[A](a: Array[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"copyTo","t":"def copyTo[A](a: Array[A], pos: Int): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"copyTo","t":"def copyTo[A](inline a: Array[A], inline pos: Int, inline from: Int, inline size: Int): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"newArray","t":"def newArray[A](inline size: Int)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"contains","t":"def contains[A](inline v: A)(using inline A: Specialized[A]): Boolean","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"+","t":"def +[A](inline v: A)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"++","t":"def ++[A](inline v: Stream[A])(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"+@","t":"def +@[A](inline i: Int, inline v: A)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"++@","t":"def ++@[A](inline i: Int, inline v: Stream[A])(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"copySize","t":"def copySize[A](inline size: Int)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"join","t":"def join[A](inline v: A)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"joinAll","t":"def joinAll[A](inline v: Stream[A])(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"joinAt","t":"def joinAt[A](inline i: Int, inline v: A)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"joinAllAt","t":"def joinAllAt[A](inline i: Int, inline v: Stream[A])(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"fill","t":"def fill[A](inline v: A)(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"fillRange","t":"def fillRange[A](inline start: Int, inline size: Int, inline v: A)(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"fillRange","t":"def fillRange[A](r: Range, inline v: A)(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"takeRange","t":"def takeRange[A](inline start: Int, inline size: Int)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"takeRange","t":"def takeRange[A](r: Range)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"dropRange","t":"def dropRange[A](inline start: Int, inline size: Int)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"dropRange","t":"def dropRange[A](r: Range)(using inline A: Specialized[A]): Array","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"sort","t":"def sort[A](using inline c: Ordering[A])(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"sortRange","t":"def sortRange[A](inline start: Int, inline size: Int)(using inline c: Ordering[A])(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/array/_methods.html","n":"sortRange","t":"def sortRange[A](r: Range)(using inline c: Ordering[A])(using inline A: Specialized[A]): Unit","d":"scalqa/lang/array/_methods"},
{"l":"api/scalqa/lang/boolean.html","n":"scalqa.lang.boolean","t":"package scalqa.lang.boolean","d":"scalqa/lang/boolean"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"?","t":"def ?(inline v: => A): DEF[A]","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"not","t":"def not: Boolean","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/_methods.html","n":"toRef","t":"def toRef: Boolean","d":"scalqa/lang/boolean/_methods"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"G","t":"object G","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/boolean/G$"},
{"l":"api/scalqa/lang/boolean/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/boolean/Opaque$"},
{"l":"api/scalqa/lang/boolean/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/boolean/Opaque$"},
{"l":"api/scalqa/lang/boolean/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/boolean/Opaque$"},
{"l":"api/scalqa/lang/boolean/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/boolean/Opaque$"},
{"l":"api/scalqa/lang/boolean/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/boolean/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/boolean/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/boolean/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/boolean/g.html","n":"scalqa.lang.boolean.g","t":"package scalqa.lang.boolean.g","d":"scalqa/lang/boolean/g"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/boolean/g/Buffer"},
{"l":"api/scalqa/lang/boolean/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/boolean/g/Buffer$"},
{"l":"api/scalqa/lang/boolean/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Buffer[A]","d":"scalqa/lang/boolean/g/Buffer$"},
{"l":"api/scalqa/lang/boolean/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/boolean/g/Buffer$"},
{"l":"api/scalqa/lang/boolean/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/boolean/g/Buffer$"},
{"l":"api/scalqa/lang/boolean/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/boolean/g/Buffer$"},
{"l":"api/scalqa/lang/boolean/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Boolean","d":"scalqa/lang/boolean/g/Collection"},
{"l":"api/scalqa/lang/boolean/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/boolean/g/Collection"},
{"l":"api/scalqa/lang/boolean/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/boolean/g/Collection"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/boolean/g/Collection$"},
{"l":"api/scalqa/lang/boolean/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/boolean/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/boolean/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/boolean/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/boolean/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/boolean/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/boolean/g/Companion$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/boolean/g/Fun$"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/boolean/g/Fun$$Fold"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/boolean/g/Fun$$Fold"},
{"l":"api/scalqa/lang/boolean/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/boolean/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/boolean/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/boolean/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/boolean/g/Fun$$Consume"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/boolean/g/Fun$$Consume"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/boolean/g/Fun$$Filter"},
{"l":"api/scalqa/lang/boolean/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/boolean/g/Fun$$Filter"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/boolean/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/boolean/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/boolean/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/boolean/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/boolean/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/boolean/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/boolean/g/Idx"},
{"l":"api/scalqa/lang/boolean/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/boolean/g/Idx"},
{"l":"api/scalqa/lang/boolean/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/boolean/g/Idx$"},
{"l":"api/scalqa/lang/boolean/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/boolean/g/Idx$"},
{"l":"api/scalqa/lang/boolean/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/boolean/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/boolean/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/boolean/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/boolean/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/boolean/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/boolean/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"TRUE","t":"def TRUE[A <: Raw]: DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"FALSE","t":"def FALSE[A <: Raw]: DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitFromBooleanTrue","t":"def implicitFromBooleanTrue[A <: Raw](inline v: true): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitFromBooleanFalse","t":"def implicitFromBooleanFalse[A <: Raw](inline v: false): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitFromBooleanRaw","t":"def implicitFromBooleanRaw[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Byte","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/boolean/g/Opt$"},
{"l":"api/scalqa/lang/boolean/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/boolean/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/boolean/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/boolean/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/boolean/g/Pack"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/boolean/g/Pack$"},
{"l":"api/scalqa/lang/boolean/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/boolean/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/boolean/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Boolean","d":"scalqa/lang/boolean/g/Pro"},
{"l":"api/scalqa/lang/boolean/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/boolean/g/Pro"},
{"l":"api/scalqa/lang/boolean/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/boolean/g/Pro$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/boolean/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/boolean/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/boolean/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/boolean/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/boolean/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/boolean/g/Pro$$Observable"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/boolean/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/boolean/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/boolean/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/boolean/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/boolean/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/boolean/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/boolean/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/boolean/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Boolean","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/boolean/g/Stream"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/boolean/g/Stream$"},
{"l":"api/scalqa/lang/boolean/g/companion.html","n":"scalqa.lang.boolean.g.companion","t":"package scalqa.lang.boolean.g.companion","d":"scalqa/lang/boolean/g/companion"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/boolean/g/companion/Collection"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Collection"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Collection"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Collection"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Collection"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/boolean/g/companion/Collection$"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/boolean/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/boolean/g/companion/Containers"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/boolean/g/companion/Fun"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/boolean/g/companion/Idx"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Idx"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Idx"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Idx"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Idx"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/boolean/g/companion/Idx$"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/boolean/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Opt"},
{"l":"api/scalqa/lang/boolean/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/boolean/g/companion/Opt"},
{"l":"api/scalqa/lang/boolean/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/boolean/g/companion/Pack"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/boolean/g/companion/Pro"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/boolean/g/companion/Pro$"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/boolean/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/boolean/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/boolean/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/boolean/g/companion/Stream"},
{"l":"api/scalqa/lang/boolean/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/boolean/g/companion/Stream"},
{"l":"api/scalqa/lang/boolean/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/boolean/g/companion/Stream"},
{"l":"api/scalqa/lang/boolean/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/boolean/g/companion/Stream"},
{"l":"api/scalqa/lang/boolean/opaque.html","n":"scalqa.lang.boolean.opaque","t":"package scalqa.lang.boolean.opaque","d":"scalqa/lang/boolean/opaque"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Boolean[A]","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Boolean[A]","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/boolean/opaque/Base"},
{"l":"api/scalqa/lang/boolean/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/boolean/opaque/Base$"},
{"l":"api/scalqa/lang/boolean/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/boolean/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/boolean/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Boolean","d":"scalqa/lang/boolean/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/boolean/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/boolean/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/boolean/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/boolean/opaque/Data"},
{"l":"api/scalqa/lang/boolean/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/boolean/opaque/Data$"},
{"l":"api/scalqa/lang/boolean/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/boolean/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/byte.html","n":"scalqa.lang.byte","t":"package scalqa.lang.byte","d":"scalqa/lang/byte"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"<>","t":"def <>(inline to: Byte): Range","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"<>>","t":"def <>>(inline to: Byte): Range","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"<>=","t":"def <>=(inline size: Int): Range","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"max","t":"def max(inline v: Byte): Byte","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"min","t":"def min(inline v: Byte): Byte","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Int)(using r: Rounding): Byte","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/_methods.html","n":"toNumber","t":"def toNumber: Byte","d":"scalqa/lang/byte/_methods"},
{"l":"api/scalqa/lang/byte/G$.html","n":"G","t":"object G","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Lookup","t":"type Lookup[A <: Raw, B] = Lookup[A, B]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Set","t":"def Set: Set","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/byte/G$"},
{"l":"api/scalqa/lang/byte/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/byte/Opaque$"},
{"l":"api/scalqa/lang/byte/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/byte/Opaque$"},
{"l":"api/scalqa/lang/byte/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/byte/Opaque$"},
{"l":"api/scalqa/lang/byte/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/byte/Opaque$"},
{"l":"api/scalqa/lang/byte/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/byte/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/byte/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/byte/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/byte/g.html","n":"scalqa.lang.byte.g","t":"package scalqa.lang.byte.g","d":"scalqa/lang/byte/g"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/byte/g/Buffer"},
{"l":"api/scalqa/lang/byte/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/byte/g/Buffer$"},
{"l":"api/scalqa/lang/byte/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Buffer[A]","d":"scalqa/lang/byte/g/Buffer$"},
{"l":"api/scalqa/lang/byte/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/byte/g/Buffer$"},
{"l":"api/scalqa/lang/byte/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/byte/g/Buffer$"},
{"l":"api/scalqa/lang/byte/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/byte/g/Buffer$"},
{"l":"api/scalqa/lang/byte/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Byte","d":"scalqa/lang/byte/g/Collection"},
{"l":"api/scalqa/lang/byte/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/byte/g/Collection"},
{"l":"api/scalqa/lang/byte/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/byte/g/Collection"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/byte/g/Collection$"},
{"l":"api/scalqa/lang/byte/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/byte/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/byte/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/byte/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/byte/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Lookup","t":"type Lookup[A <: Raw] = Lookup[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Companion$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/byte/g/Companion$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/byte/g/Fun$"},
{"l":"api/scalqa/lang/byte/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/byte/g/Fun$$Fold"},
{"l":"api/scalqa/lang/byte/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/byte/g/Fun$$Fold"},
{"l":"api/scalqa/lang/byte/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/byte/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/byte/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/byte/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/byte/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/byte/g/Fun$$Consume"},
{"l":"api/scalqa/lang/byte/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/byte/g/Fun$$Consume"},
{"l":"api/scalqa/lang/byte/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/byte/g/Fun$$Filter"},
{"l":"api/scalqa/lang/byte/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/byte/g/Fun$$Filter"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/byte/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/byte/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/byte/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/byte/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/byte/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/byte/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/byte/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/byte/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/byte/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/byte/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/byte/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/byte/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/byte/g/Idx"},
{"l":"api/scalqa/lang/byte/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/byte/g/Idx"},
{"l":"api/scalqa/lang/byte/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/byte/g/Idx$"},
{"l":"api/scalqa/lang/byte/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/byte/g/Idx$"},
{"l":"api/scalqa/lang/byte/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/byte/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/byte/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/byte/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/byte/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/byte/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Lookup.html","n":"Lookup","t":"trait Lookup[A <: Raw, +B] extends Lookup[A, B]","d":"scalqa/lang/byte/g/Lookup"},
{"l":"api/scalqa/lang/byte/g/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/byte/g/Lookup$"},
{"l":"api/scalqa/lang/byte/g/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Lookup[A, B]","d":"scalqa/lang/byte/g/Lookup$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw, B] extends Lookup[A, B] with Mutable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/lang/byte/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/lang/byte/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/byte/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](inline v: NEW): Mutable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw, B](iSz: Int) extends Mutable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"put","t":"def put(k: A, v: B): Unit","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/lang/byte/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw, B] extends Stable[A, B] with Lookup[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE = Stable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/lang/byte/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: (A, B)*): Stable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable$.html","n":"void","t":"def void[A <: Raw, B]: Stable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/byte/g/Lookup$$Stable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Stable[A, B]","d":"scalqa/lang/byte/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"implicitFromAnyByte","t":"def implicitFromAnyByte[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Short","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/byte/g/Opt$"},
{"l":"api/scalqa/lang/byte/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/byte/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/byte/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/byte/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/byte/g/Pack"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/byte/g/Pack$"},
{"l":"api/scalqa/lang/byte/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/byte/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/byte/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Byte","d":"scalqa/lang/byte/g/Pro"},
{"l":"api/scalqa/lang/byte/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/byte/g/Pro"},
{"l":"api/scalqa/lang/byte/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/byte/g/Pro$"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/byte/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/byte/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/byte/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/byte/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/byte/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/byte/g/Pro$$Observable"},
{"l":"api/scalqa/lang/byte/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/byte/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/byte/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/byte/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/byte/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/byte/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/byte/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/byte/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/byte/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/byte/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/byte/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/byte/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/byte/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/byte/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/byte/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/byte/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _size: Int) extends Range[A] with Size with Stream[A] with Byte","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"this","t":"def this(start: A, end: A, endIn: Boolean)","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"endX","t":"def endX: A","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"size","t":"def size: Int","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range.html","n":"streamStep","t":"def streamStep(step: Int): Stream[A]","d":"scalqa/lang/byte/g/Range"},
{"l":"api/scalqa/lang/byte/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/byte/g/Range$"},
{"l":"api/scalqa/lang/byte/g/Range$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Range$"},
{"l":"api/scalqa/lang/byte/g/Range$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Range$"},
{"l":"api/scalqa/lang/byte/g/Range$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Range$"},
{"l":"api/scalqa/lang/byte/g/Range$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): Unit","d":"scalqa/lang/byte/g/Range$"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"Set","t":"class Set[A <: Raw] extends Set[A] with Collection[A]","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE = Set[A]","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"size","t":"def size: Int","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"join","t":"def join(v: A): Set[A]","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Set[A]","d":"scalqa/lang/byte/g/Set"},
{"l":"api/scalqa/lang/byte/g/Set$.html","n":"Set","t":"object Set","d":"scalqa/lang/byte/g/Set$"},
{"l":"api/scalqa/lang/byte/g/Set$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Set[A]","d":"scalqa/lang/byte/g/Set$"},
{"l":"api/scalqa/lang/byte/g/Set$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Set[A]","d":"scalqa/lang/byte/g/Set$"},
{"l":"api/scalqa/lang/byte/g/Set$.html","n":"void","t":"def void[A <: Raw]: Set[A]","d":"scalqa/lang/byte/g/Set$"},
{"l":"api/scalqa/lang/byte/g/Set$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Set[A]","d":"scalqa/lang/byte/g/Set$"},
{"l":"api/scalqa/lang/byte/g/Set$$z_Void$.html","n":"z_Void","t":"object z_Void extends Set[Nothing] with Void","d":"scalqa/lang/byte/g/Set$$z_Void$"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Byte","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/byte/g/Stream"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/Stream$.html","n":"implicitFromRange","t":"def implicitFromRange[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/byte/g/Stream$"},
{"l":"api/scalqa/lang/byte/g/companion.html","n":"scalqa.lang.byte.g.companion","t":"package scalqa.lang.byte.g.companion","d":"scalqa/lang/byte/g/companion"},
{"l":"api/scalqa/lang/byte/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/byte/g/companion/Collection"},
{"l":"api/scalqa/lang/byte/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/byte/g/companion/Collection"},
{"l":"api/scalqa/lang/byte/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/byte/g/companion/Collection"},
{"l":"api/scalqa/lang/byte/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/byte/g/companion/Collection"},
{"l":"api/scalqa/lang/byte/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/byte/g/companion/Collection"},
{"l":"api/scalqa/lang/byte/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/byte/g/companion/Collection$"},
{"l":"api/scalqa/lang/byte/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/byte/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/byte/g/companion/Containers"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/byte/g/companion/Fun"},
{"l":"api/scalqa/lang/byte/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/byte/g/companion/Idx"},
{"l":"api/scalqa/lang/byte/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/byte/g/companion/Idx"},
{"l":"api/scalqa/lang/byte/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/byte/g/companion/Idx"},
{"l":"api/scalqa/lang/byte/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/byte/g/companion/Idx"},
{"l":"api/scalqa/lang/byte/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/byte/g/companion/Idx"},
{"l":"api/scalqa/lang/byte/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/byte/g/companion/Idx$"},
{"l":"api/scalqa/lang/byte/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/byte/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A <: Raw]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"void","t":"def void[B]: Lookup[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/byte/g/companion/Lookup"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/byte/g/companion/Lookup$"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](initSize: Int): Mutable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/byte/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/byte/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/byte/g/companion/Opt"},
{"l":"api/scalqa/lang/byte/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/byte/g/companion/Opt"},
{"l":"api/scalqa/lang/byte/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/byte/g/companion/Pack"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/byte/g/companion/Pro"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/byte/g/companion/Pro$"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/byte/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/byte/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/byte/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/byte/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/byte/g/companion/Set.html","n":"Set","t":"class Set[A <: Raw]","d":"scalqa/lang/byte/g/companion/Set"},
{"l":"api/scalqa/lang/byte/g/companion/Set.html","n":"apply","t":"def apply(inline v: A*): Set[A]","d":"scalqa/lang/byte/g/companion/Set"},
{"l":"api/scalqa/lang/byte/g/companion/Set.html","n":"apply","t":"def apply(inline v: Stream[A]): Set[A]","d":"scalqa/lang/byte/g/companion/Set"},
{"l":"api/scalqa/lang/byte/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/byte/g/companion/Set"},
{"l":"api/scalqa/lang/byte/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/byte/g/companion/Stream"},
{"l":"api/scalqa/lang/byte/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/byte/g/companion/Stream"},
{"l":"api/scalqa/lang/byte/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/byte/g/companion/Stream"},
{"l":"api/scalqa/lang/byte/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/byte/g/companion/Stream"},
{"l":"api/scalqa/lang/byte/opaque.html","n":"scalqa.lang.byte.opaque","t":"package scalqa.lang.byte.opaque","d":"scalqa/lang/byte/opaque"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Byte[A]","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Byte[A]","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/byte/opaque/Base"},
{"l":"api/scalqa/lang/byte/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/byte/opaque/Base$"},
{"l":"api/scalqa/lang/byte/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/byte/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/byte/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/byte/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/byte/opaque/Data"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/byte/opaque/Data$"},
{"l":"api/scalqa/lang/byte/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/byte/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data.html","n":"scalqa.lang.byte.opaque.data","t":"package scalqa.lang.byte.opaque.data","d":"scalqa/lang/byte/opaque/data"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/byte/opaque/data/Calculable"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/byte/opaque/data/Calculable"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/byte/opaque/data/Calculable"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/byte/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/byte/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualByte","t":"val z_CanEqualByte: CanEqual[A, Byte]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualShort","t":"val z_CanEqualShort: CanEqual[A, Short]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualInt","t":"val z_CanEqualInt: CanEqual[A, Int]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualLong","t":"val z_CanEqualLong: CanEqual[A, Long]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualFloat","t":"val z_CanEqualFloat: CanEqual[A, Float]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical.html","n":"z_CanEqualDouble","t":"val z_CanEqualDouble: CanEqual[A, Double]","d":"scalqa/lang/byte/opaque/data/Numerical"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/byte/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/byte/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/byte/opaque/data/Ordered"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/byte/opaque/data/Ordered"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/byte/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/byte/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/byte/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/byte/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/byte/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/byte/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"<>=","t":"def <>=[THIS_OPAQUE <: Opaque](inline sz: Int): Range[THIS_OPAQUE]","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/byte/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char.html","n":"scalqa.lang.char","t":"package scalqa.lang.char","d":"scalqa/lang/char"},
{"l":"api/scalqa/lang/char/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"<>","t":"def <>(inline to: Char): Range","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"<>>","t":"def <>>(inline to: Char): Range","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"<>=","t":"def <>=(inline size: Int): Range","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"max","t":"def max(inline v: Char): Char","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"min","t":"def min(inline v: Char): Char","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"name","t":"def name: String","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isAlphabetic","t":"def isAlphabetic: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isDigit","t":"def isDigit: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isLetter","t":"def isLetter: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isLetterOrDigit","t":"def isLetterOrDigit: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isLower","t":"def isLower: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isUpper","t":"def isUpper: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"isWhitespace","t":"def isWhitespace: Boolean","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"lower","t":"def lower: Char","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"upper","t":"def upper: Char","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/_methods.html","n":"toRef","t":"def toRef: Character","d":"scalqa/lang/char/_methods"},
{"l":"api/scalqa/lang/char/G$.html","n":"G","t":"object G","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Lookup","t":"type Lookup[A <: Raw, B] = Lookup[A, B]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Set","t":"def Set: Set","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/char/G$"},
{"l":"api/scalqa/lang/char/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/char/Opaque$"},
{"l":"api/scalqa/lang/char/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/char/Opaque$"},
{"l":"api/scalqa/lang/char/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/char/Opaque$"},
{"l":"api/scalqa/lang/char/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/char/Opaque$"},
{"l":"api/scalqa/lang/char/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/char/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/char/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/char/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/char/g.html","n":"scalqa.lang.char.g","t":"package scalqa.lang.char.g","d":"scalqa/lang/char/g"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/char/g/Buffer"},
{"l":"api/scalqa/lang/char/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/char/g/Buffer$"},
{"l":"api/scalqa/lang/char/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Buffer[A]","d":"scalqa/lang/char/g/Buffer$"},
{"l":"api/scalqa/lang/char/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/char/g/Buffer$"},
{"l":"api/scalqa/lang/char/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/char/g/Buffer$"},
{"l":"api/scalqa/lang/char/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/char/g/Buffer$"},
{"l":"api/scalqa/lang/char/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Char","d":"scalqa/lang/char/g/Collection"},
{"l":"api/scalqa/lang/char/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/char/g/Collection"},
{"l":"api/scalqa/lang/char/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/char/g/Collection"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/char/g/Collection$"},
{"l":"api/scalqa/lang/char/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/char/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/char/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/char/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/char/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/char/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/char/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Lookup","t":"type Lookup[A <: Raw] = Lookup[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Companion$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/char/g/Companion$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/char/g/Fun$"},
{"l":"api/scalqa/lang/char/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/char/g/Fun$$Fold"},
{"l":"api/scalqa/lang/char/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/char/g/Fun$$Fold"},
{"l":"api/scalqa/lang/char/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/char/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/char/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/char/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/char/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/char/g/Fun$$Consume"},
{"l":"api/scalqa/lang/char/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/char/g/Fun$$Consume"},
{"l":"api/scalqa/lang/char/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/char/g/Fun$$Filter"},
{"l":"api/scalqa/lang/char/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/char/g/Fun$$Filter"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/char/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/char/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/char/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/char/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/char/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/char/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/char/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/char/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/char/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/char/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/char/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/char/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/char/g/Idx"},
{"l":"api/scalqa/lang/char/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/char/g/Idx"},
{"l":"api/scalqa/lang/char/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/char/g/Idx$"},
{"l":"api/scalqa/lang/char/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/char/g/Idx$"},
{"l":"api/scalqa/lang/char/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/char/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/char/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/char/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/char/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/char/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/char/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/char/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/char/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Lookup.html","n":"Lookup","t":"trait Lookup[A <: Raw, +B] extends Lookup[A, B]","d":"scalqa/lang/char/g/Lookup"},
{"l":"api/scalqa/lang/char/g/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/char/g/Lookup$"},
{"l":"api/scalqa/lang/char/g/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Lookup[A, B]","d":"scalqa/lang/char/g/Lookup$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw, B] extends Lookup[A, B] with Mutable[A, B]","d":"scalqa/lang/char/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/lang/char/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/lang/char/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/char/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](inline v: NEW): Mutable[A, B]","d":"scalqa/lang/char/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw, B](iSz: Int) extends Mutable[A, B]","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"put","t":"def put(k: A, v: B): Unit","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/lang/char/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw, B] extends Stable[A, B] with Lookup[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE = Stable[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/lang/char/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: (A, B)*): Stable[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable$.html","n":"void","t":"def void[A <: Raw, B]: Stable[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/char/g/Lookup$$Stable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Stable[A, B]","d":"scalqa/lang/char/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"implicitFromAnyChar","t":"def implicitFromAnyChar[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Int","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/char/g/Opt$"},
{"l":"api/scalqa/lang/char/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/char/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/char/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/char/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/char/g/Pack"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/char/g/Pack$"},
{"l":"api/scalqa/lang/char/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/char/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/char/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Char","d":"scalqa/lang/char/g/Pro"},
{"l":"api/scalqa/lang/char/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/char/g/Pro"},
{"l":"api/scalqa/lang/char/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/char/g/Pro$"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/char/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/char/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/char/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/char/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/char/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/char/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/char/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/char/g/Pro$$Observable"},
{"l":"api/scalqa/lang/char/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/char/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/char/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/char/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/char/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/char/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/char/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/char/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/char/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/char/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/char/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/char/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/char/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/char/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/char/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/char/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _size: Int) extends Range[A] with Size with Stream[A] with Char","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"this","t":"def this(start: A, end: A, endIn: Boolean)","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"endX","t":"def endX: A","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"size","t":"def size: Int","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range.html","n":"streamStep","t":"def streamStep(step: Int): Stream[A]","d":"scalqa/lang/char/g/Range"},
{"l":"api/scalqa/lang/char/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/char/g/Range$"},
{"l":"api/scalqa/lang/char/g/Range$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Range$"},
{"l":"api/scalqa/lang/char/g/Range$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Range$"},
{"l":"api/scalqa/lang/char/g/Range$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Range$"},
{"l":"api/scalqa/lang/char/g/Range$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): Unit","d":"scalqa/lang/char/g/Range$"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"Set","t":"class Set[A <: Raw] extends Set[A] with Collection[A]","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE = Set[A]","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"size","t":"def size: Int","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"join","t":"def join(v: A): Set[A]","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Set[A]","d":"scalqa/lang/char/g/Set"},
{"l":"api/scalqa/lang/char/g/Set$.html","n":"Set","t":"object Set","d":"scalqa/lang/char/g/Set$"},
{"l":"api/scalqa/lang/char/g/Set$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Set[A]","d":"scalqa/lang/char/g/Set$"},
{"l":"api/scalqa/lang/char/g/Set$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Set[A]","d":"scalqa/lang/char/g/Set$"},
{"l":"api/scalqa/lang/char/g/Set$.html","n":"void","t":"def void[A <: Raw]: Set[A]","d":"scalqa/lang/char/g/Set$"},
{"l":"api/scalqa/lang/char/g/Set$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Set[A]","d":"scalqa/lang/char/g/Set$"},
{"l":"api/scalqa/lang/char/g/Set$$z_Void$.html","n":"z_Void","t":"object z_Void extends Set[Nothing] with Void","d":"scalqa/lang/char/g/Set$$z_Void$"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Char","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/char/g/Stream"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/Stream$.html","n":"implicitFromRange","t":"def implicitFromRange[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/char/g/Stream$"},
{"l":"api/scalqa/lang/char/g/companion.html","n":"scalqa.lang.char.g.companion","t":"package scalqa.lang.char.g.companion","d":"scalqa/lang/char/g/companion"},
{"l":"api/scalqa/lang/char/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/char/g/companion/Collection"},
{"l":"api/scalqa/lang/char/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/char/g/companion/Collection"},
{"l":"api/scalqa/lang/char/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/char/g/companion/Collection"},
{"l":"api/scalqa/lang/char/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/char/g/companion/Collection"},
{"l":"api/scalqa/lang/char/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/char/g/companion/Collection"},
{"l":"api/scalqa/lang/char/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/char/g/companion/Collection$"},
{"l":"api/scalqa/lang/char/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/char/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/char/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/char/g/companion/Containers"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/char/g/companion/Fun"},
{"l":"api/scalqa/lang/char/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/char/g/companion/Idx"},
{"l":"api/scalqa/lang/char/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/char/g/companion/Idx"},
{"l":"api/scalqa/lang/char/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/char/g/companion/Idx"},
{"l":"api/scalqa/lang/char/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/char/g/companion/Idx"},
{"l":"api/scalqa/lang/char/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/char/g/companion/Idx"},
{"l":"api/scalqa/lang/char/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/char/g/companion/Idx$"},
{"l":"api/scalqa/lang/char/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/char/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/char/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A <: Raw]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"void","t":"def void[B]: Lookup[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/char/g/companion/Lookup"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/char/g/companion/Lookup$"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/char/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](initSize: Int): Mutable[A, B]","d":"scalqa/lang/char/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw]","d":"scalqa/lang/char/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/char/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/char/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/char/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/char/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/char/g/companion/Opt"},
{"l":"api/scalqa/lang/char/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/char/g/companion/Opt"},
{"l":"api/scalqa/lang/char/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/char/g/companion/Pack"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/char/g/companion/Pro"},
{"l":"api/scalqa/lang/char/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/char/g/companion/Pro$"},
{"l":"api/scalqa/lang/char/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/char/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/char/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/char/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/char/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/char/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/char/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/char/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/char/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/char/g/companion/Set.html","n":"Set","t":"class Set[A <: Raw]","d":"scalqa/lang/char/g/companion/Set"},
{"l":"api/scalqa/lang/char/g/companion/Set.html","n":"apply","t":"def apply(inline v: A*): Set[A]","d":"scalqa/lang/char/g/companion/Set"},
{"l":"api/scalqa/lang/char/g/companion/Set.html","n":"apply","t":"def apply(inline v: Stream[A]): Set[A]","d":"scalqa/lang/char/g/companion/Set"},
{"l":"api/scalqa/lang/char/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/char/g/companion/Set"},
{"l":"api/scalqa/lang/char/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/char/g/companion/Stream"},
{"l":"api/scalqa/lang/char/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/char/g/companion/Stream"},
{"l":"api/scalqa/lang/char/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/char/g/companion/Stream"},
{"l":"api/scalqa/lang/char/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/char/g/companion/Stream"},
{"l":"api/scalqa/lang/char/opaque.html","n":"scalqa.lang.char.opaque","t":"package scalqa.lang.char.opaque","d":"scalqa/lang/char/opaque"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Char[A]","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Char[A]","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/char/opaque/Base"},
{"l":"api/scalqa/lang/char/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/char/opaque/Base$"},
{"l":"api/scalqa/lang/char/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/char/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/char/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/char/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/char/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/char/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/char/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/char/opaque/Data"},
{"l":"api/scalqa/lang/char/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/char/opaque/Data$"},
{"l":"api/scalqa/lang/char/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/char/opaque/Data$"},
{"l":"api/scalqa/lang/char/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/char/opaque/Data$"},
{"l":"api/scalqa/lang/char/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/char/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data.html","n":"scalqa.lang.char.opaque.data","t":"package scalqa.lang.char.opaque.data","d":"scalqa/lang/char/opaque/data"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/char/opaque/data/Ordered"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/char/opaque/data/Ordered"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/char/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/char/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/char/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/char/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/char/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/char/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"<>=","t":"def <>=[THIS_OPAQUE <: Opaque](inline sz: Int): Range[THIS_OPAQUE]","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/char/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/double.html","n":"scalqa.lang.double","t":"package scalqa.lang.double","d":"scalqa/lang/double"},
{"l":"api/scalqa/lang/double/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"<>","t":"def <>(inline to: Double): Range","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"<>>","t":"def <>>(inline to: Double): Range","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"max","t":"def max(inline v: Double): Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"min","t":"def min(inline v: Double): Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Double)(using inline r: Rounding): Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"roundToDecimal","t":"def roundToDecimal(inline d: Int)(using inline r: Rounding): Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Big","t":"def Big: BigDecimal","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Week","t":"def Week: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Weeks","t":"def Weeks: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Day","t":"def Day: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Days","t":"def Days: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Hour","t":"def Hour: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Hours","t":"def Hours: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Minute","t":"def Minute: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Minutes","t":"def Minutes: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Second","t":"def Second: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Seconds","t":"def Seconds: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Millis","t":"def Millis: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Micros","t":"def Micros: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"Nanos","t":"def Nanos: Length","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/_methods.html","n":"toNumber","t":"def toNumber: Double","d":"scalqa/lang/double/_methods"},
{"l":"api/scalqa/lang/double/G$.html","n":"G","t":"object G","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/double/G$"},
{"l":"api/scalqa/lang/double/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/double/Opaque$"},
{"l":"api/scalqa/lang/double/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/double/Opaque$"},
{"l":"api/scalqa/lang/double/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/double/Opaque$"},
{"l":"api/scalqa/lang/double/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/double/Opaque$"},
{"l":"api/scalqa/lang/double/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/double/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/double/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/double/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/double/g.html","n":"scalqa.lang.double.g","t":"package scalqa.lang.double.g","d":"scalqa/lang/double/g"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/double/g/Buffer"},
{"l":"api/scalqa/lang/double/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/double/g/Buffer$"},
{"l":"api/scalqa/lang/double/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Buffer[A]","d":"scalqa/lang/double/g/Buffer$"},
{"l":"api/scalqa/lang/double/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/double/g/Buffer$"},
{"l":"api/scalqa/lang/double/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/double/g/Buffer$"},
{"l":"api/scalqa/lang/double/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/double/g/Buffer$"},
{"l":"api/scalqa/lang/double/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Double","d":"scalqa/lang/double/g/Collection"},
{"l":"api/scalqa/lang/double/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/double/g/Collection"},
{"l":"api/scalqa/lang/double/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/double/g/Collection"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/double/g/Collection$"},
{"l":"api/scalqa/lang/double/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/double/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/double/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/double/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/double/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/double/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/double/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/double/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/double/g/Companion$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/double/g/Fun$"},
{"l":"api/scalqa/lang/double/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/double/g/Fun$$Fold"},
{"l":"api/scalqa/lang/double/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/double/g/Fun$$Fold"},
{"l":"api/scalqa/lang/double/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/double/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/double/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/double/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/double/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/double/g/Fun$$Consume"},
{"l":"api/scalqa/lang/double/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/double/g/Fun$$Consume"},
{"l":"api/scalqa/lang/double/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/double/g/Fun$$Filter"},
{"l":"api/scalqa/lang/double/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/double/g/Fun$$Filter"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/double/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/double/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/double/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/double/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/double/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/double/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/double/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/double/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/double/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/double/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/double/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/double/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/double/g/Idx"},
{"l":"api/scalqa/lang/double/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/double/g/Idx"},
{"l":"api/scalqa/lang/double/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/double/g/Idx$"},
{"l":"api/scalqa/lang/double/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/double/g/Idx$"},
{"l":"api/scalqa/lang/double/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/double/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/double/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/double/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/double/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/double/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/double/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/double/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/double/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/double/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"implicitFromAnyDouble","t":"def implicitFromAnyDouble[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Double","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/double/g/Opt$"},
{"l":"api/scalqa/lang/double/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/double/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/double/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/double/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/double/g/Pack"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/double/g/Pack$"},
{"l":"api/scalqa/lang/double/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/double/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/double/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Double","d":"scalqa/lang/double/g/Pro"},
{"l":"api/scalqa/lang/double/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/double/g/Pro"},
{"l":"api/scalqa/lang/double/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/double/g/Pro$"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/double/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/double/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/double/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/double/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/double/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/double/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/double/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/double/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/double/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/double/g/Pro$$Observable"},
{"l":"api/scalqa/lang/double/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/double/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/double/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/double/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/double/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/double/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/double/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/double/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/double/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/double/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/double/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/double/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/double/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/double/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/double/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/double/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _end: A, endIn: Boolean) extends Range[A] with Double","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range.html","n":"streamStep","t":"def streamStep(step: A): Stream[A]","d":"scalqa/lang/double/g/Range"},
{"l":"api/scalqa/lang/double/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/double/g/Range$"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Double","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/double/g/Stream"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/double/g/Stream$"},
{"l":"api/scalqa/lang/double/g/companion.html","n":"scalqa.lang.double.g.companion","t":"package scalqa.lang.double.g.companion","d":"scalqa/lang/double/g/companion"},
{"l":"api/scalqa/lang/double/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/double/g/companion/Collection"},
{"l":"api/scalqa/lang/double/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/double/g/companion/Collection"},
{"l":"api/scalqa/lang/double/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/double/g/companion/Collection"},
{"l":"api/scalqa/lang/double/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/double/g/companion/Collection"},
{"l":"api/scalqa/lang/double/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/double/g/companion/Collection"},
{"l":"api/scalqa/lang/double/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/double/g/companion/Collection$"},
{"l":"api/scalqa/lang/double/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/double/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/double/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/double/g/companion/Containers"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/double/g/companion/Fun"},
{"l":"api/scalqa/lang/double/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/double/g/companion/Idx"},
{"l":"api/scalqa/lang/double/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/double/g/companion/Idx"},
{"l":"api/scalqa/lang/double/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/double/g/companion/Idx"},
{"l":"api/scalqa/lang/double/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/double/g/companion/Idx"},
{"l":"api/scalqa/lang/double/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/double/g/companion/Idx"},
{"l":"api/scalqa/lang/double/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/double/g/companion/Idx$"},
{"l":"api/scalqa/lang/double/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/double/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/double/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/double/g/companion/Opt"},
{"l":"api/scalqa/lang/double/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/double/g/companion/Opt"},
{"l":"api/scalqa/lang/double/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/double/g/companion/Pack"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/double/g/companion/Pro"},
{"l":"api/scalqa/lang/double/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/double/g/companion/Pro$"},
{"l":"api/scalqa/lang/double/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/double/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/double/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/double/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/double/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/double/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/double/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/double/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/double/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/double/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/double/g/companion/Stream"},
{"l":"api/scalqa/lang/double/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/double/g/companion/Stream"},
{"l":"api/scalqa/lang/double/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/double/g/companion/Stream"},
{"l":"api/scalqa/lang/double/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/double/g/companion/Stream"},
{"l":"api/scalqa/lang/double/opaque.html","n":"scalqa.lang.double.opaque","t":"package scalqa.lang.double.opaque","d":"scalqa/lang/double/opaque"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Double[A]","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Double[A]","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/double/opaque/Base"},
{"l":"api/scalqa/lang/double/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/double/opaque/Base$"},
{"l":"api/scalqa/lang/double/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/double/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/double/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/double/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/double/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/double/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/double/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/double/opaque/Data"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/double/opaque/Data$"},
{"l":"api/scalqa/lang/double/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/double/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data.html","n":"scalqa.lang.double.opaque.data","t":"package scalqa.lang.double.opaque.data","d":"scalqa/lang/double/opaque/data"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/double/opaque/data/Calculable"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/double/opaque/data/Calculable"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/double/opaque/data/Calculable"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/double/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/double/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualByte","t":"val z_CanEqualByte: CanEqual[A, Byte]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualShort","t":"val z_CanEqualShort: CanEqual[A, Short]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualInt","t":"val z_CanEqualInt: CanEqual[A, Int]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualLong","t":"val z_CanEqualLong: CanEqual[A, Long]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualFloat","t":"val z_CanEqualFloat: CanEqual[A, Float]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical.html","n":"z_CanEqualDouble","t":"val z_CanEqualDouble: CanEqual[A, Double]","d":"scalqa/lang/double/opaque/data/Numerical"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/double/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"roundToDecimal","t":"def roundToDecimal[THIS_OPAQUE <: Opaque](inline d: Int)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/double/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/double/opaque/data/Ordered"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/double/opaque/data/Ordered"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/double/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/double/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/double/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/double/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/double/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/double/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/double/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/float.html","n":"scalqa.lang.float","t":"package scalqa.lang.float","d":"scalqa/lang/float"},
{"l":"api/scalqa/lang/float/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"<>","t":"def <>(inline to: Float): Range","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"<>>","t":"def <>>(inline to: Float): Range","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"max","t":"def max(inline v: Float): Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"min","t":"def min(inline v: Float): Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Float)(using inline r: Rounding): Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"roundToDecimal","t":"def roundToDecimal(inline d: Int)(using inline r: Rounding): Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Big","t":"def Big: BigDecimal","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Week","t":"def Week: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Weeks","t":"def Weeks: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Day","t":"def Day: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Days","t":"def Days: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Hour","t":"def Hour: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Hours","t":"def Hours: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Minute","t":"def Minute: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Minutes","t":"def Minutes: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Second","t":"def Second: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Seconds","t":"def Seconds: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Millis","t":"def Millis: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Micros","t":"def Micros: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"Nanos","t":"def Nanos: Length","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/_methods.html","n":"toNumber","t":"def toNumber: Float","d":"scalqa/lang/float/_methods"},
{"l":"api/scalqa/lang/float/G$.html","n":"G","t":"object G","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/float/G$"},
{"l":"api/scalqa/lang/float/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/float/Opaque$"},
{"l":"api/scalqa/lang/float/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/float/Opaque$"},
{"l":"api/scalqa/lang/float/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/float/Opaque$"},
{"l":"api/scalqa/lang/float/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/float/Opaque$"},
{"l":"api/scalqa/lang/float/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/float/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/float/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/float/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/float/g.html","n":"scalqa.lang.float.g","t":"package scalqa.lang.float.g","d":"scalqa/lang/float/g"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/float/g/Buffer"},
{"l":"api/scalqa/lang/float/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/float/g/Buffer$"},
{"l":"api/scalqa/lang/float/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: NEW): Buffer[A]","d":"scalqa/lang/float/g/Buffer$"},
{"l":"api/scalqa/lang/float/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/float/g/Buffer$"},
{"l":"api/scalqa/lang/float/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/float/g/Buffer$"},
{"l":"api/scalqa/lang/float/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/float/g/Buffer$"},
{"l":"api/scalqa/lang/float/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Float","d":"scalqa/lang/float/g/Collection"},
{"l":"api/scalqa/lang/float/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/float/g/Collection"},
{"l":"api/scalqa/lang/float/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/float/g/Collection"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/float/g/Collection$"},
{"l":"api/scalqa/lang/float/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/float/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/float/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/float/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/float/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/float/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/float/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/float/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/float/g/Companion$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/float/g/Fun$"},
{"l":"api/scalqa/lang/float/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/float/g/Fun$$Fold"},
{"l":"api/scalqa/lang/float/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/float/g/Fun$$Fold"},
{"l":"api/scalqa/lang/float/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/float/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/float/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/float/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/float/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/float/g/Fun$$Consume"},
{"l":"api/scalqa/lang/float/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/float/g/Fun$$Consume"},
{"l":"api/scalqa/lang/float/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/float/g/Fun$$Filter"},
{"l":"api/scalqa/lang/float/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/float/g/Fun$$Filter"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/float/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/float/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/float/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/float/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/float/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/float/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/float/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/float/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/float/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/float/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/float/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/float/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/float/g/Idx"},
{"l":"api/scalqa/lang/float/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/float/g/Idx"},
{"l":"api/scalqa/lang/float/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/float/g/Idx$"},
{"l":"api/scalqa/lang/float/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/float/g/Idx$"},
{"l":"api/scalqa/lang/float/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/float/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/float/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/float/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/float/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/float/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/float/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/float/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/float/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/float/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"implicitFromAnyFloat","t":"def implicitFromAnyFloat[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Float","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/float/g/Opt$"},
{"l":"api/scalqa/lang/float/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/float/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/float/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/float/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/float/g/Pack"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/float/g/Pack$"},
{"l":"api/scalqa/lang/float/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/float/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/float/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Float","d":"scalqa/lang/float/g/Pro"},
{"l":"api/scalqa/lang/float/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/float/g/Pro"},
{"l":"api/scalqa/lang/float/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/float/g/Pro$"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/float/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/float/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/float/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/float/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/float/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/float/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/float/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/float/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/float/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/float/g/Pro$$Observable"},
{"l":"api/scalqa/lang/float/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/float/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/float/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/float/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/float/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/float/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/float/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/float/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/float/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/float/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/float/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/float/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/float/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/float/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/float/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/float/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _end: A, endIn: Boolean) extends Range[A] with Float","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range.html","n":"streamStep","t":"def streamStep(step: A): Stream[A]","d":"scalqa/lang/float/g/Range"},
{"l":"api/scalqa/lang/float/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/float/g/Range$"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Float","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/float/g/Stream"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/float/g/Stream$"},
{"l":"api/scalqa/lang/float/g/companion.html","n":"scalqa.lang.float.g.companion","t":"package scalqa.lang.float.g.companion","d":"scalqa/lang/float/g/companion"},
{"l":"api/scalqa/lang/float/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/float/g/companion/Collection"},
{"l":"api/scalqa/lang/float/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/float/g/companion/Collection"},
{"l":"api/scalqa/lang/float/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/float/g/companion/Collection"},
{"l":"api/scalqa/lang/float/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/float/g/companion/Collection"},
{"l":"api/scalqa/lang/float/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/float/g/companion/Collection"},
{"l":"api/scalqa/lang/float/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/float/g/companion/Collection$"},
{"l":"api/scalqa/lang/float/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/float/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/float/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/float/g/companion/Containers"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/float/g/companion/Fun"},
{"l":"api/scalqa/lang/float/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/float/g/companion/Idx"},
{"l":"api/scalqa/lang/float/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/float/g/companion/Idx"},
{"l":"api/scalqa/lang/float/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/float/g/companion/Idx"},
{"l":"api/scalqa/lang/float/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/float/g/companion/Idx"},
{"l":"api/scalqa/lang/float/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/float/g/companion/Idx"},
{"l":"api/scalqa/lang/float/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/float/g/companion/Idx$"},
{"l":"api/scalqa/lang/float/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/float/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/float/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/float/g/companion/Opt"},
{"l":"api/scalqa/lang/float/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/float/g/companion/Opt"},
{"l":"api/scalqa/lang/float/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/float/g/companion/Pack"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/float/g/companion/Pro"},
{"l":"api/scalqa/lang/float/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/float/g/companion/Pro$"},
{"l":"api/scalqa/lang/float/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/float/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/float/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/float/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/float/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/float/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/float/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/float/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/float/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/float/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/float/g/companion/Stream"},
{"l":"api/scalqa/lang/float/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/float/g/companion/Stream"},
{"l":"api/scalqa/lang/float/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/float/g/companion/Stream"},
{"l":"api/scalqa/lang/float/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/float/g/companion/Stream"},
{"l":"api/scalqa/lang/float/opaque.html","n":"scalqa.lang.float.opaque","t":"package scalqa.lang.float.opaque","d":"scalqa/lang/float/opaque"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Float[A]","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Float[A]","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/float/opaque/Base"},
{"l":"api/scalqa/lang/float/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/float/opaque/Base$"},
{"l":"api/scalqa/lang/float/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/float/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/float/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/float/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/float/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/float/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/float/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/float/opaque/Data"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/float/opaque/Data$"},
{"l":"api/scalqa/lang/float/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/float/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data.html","n":"scalqa.lang.float.opaque.data","t":"package scalqa.lang.float.opaque.data","d":"scalqa/lang/float/opaque/data"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/float/opaque/data/Calculable"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/float/opaque/data/Calculable"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/float/opaque/data/Calculable"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/float/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/float/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Byte","t":"val z_CanEqual_Byte: CanEqual[A, Byte]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Short","t":"val z_CanEqual_Short: CanEqual[A, Short]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Int","t":"val z_CanEqual_Int: CanEqual[A, Int]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Long","t":"val z_CanEqual_Long: CanEqual[A, Long]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Float","t":"val z_CanEqual_Float: CanEqual[A, Float]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical.html","n":"z_CanEqual_Double","t":"val z_CanEqual_Double: CanEqual[A, Double]","d":"scalqa/lang/float/opaque/data/Numerical"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/float/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"roundToDecimal","t":"def roundToDecimal[THIS_OPAQUE <: Opaque](inline d: Int)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/float/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/float/opaque/data/Ordered"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/float/opaque/data/Ordered"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/float/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/float/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/float/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/float/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/float/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/float/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/float/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int.html","n":"scalqa.lang.int","t":"package scalqa.lang.int","d":"scalqa/lang/int"},
{"l":"api/scalqa/lang/int/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"<>","t":"def <>(inline to: Int): Range","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"<>>","t":"def <>>(inline to: Int): Range","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"<>=","t":"def <>=(inline size: Int): Range","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"max","t":"def max(inline v: Int): Int","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"min","t":"def min(inline v: Int): Int","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Int)(using r: Rounding): Int","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"ByteCount","t":"def ByteCount: ByteCount","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Year","t":"def Year: Year","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Big","t":"def Big: BigInteger","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Week","t":"def Week: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Weeks","t":"def Weeks: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Day","t":"def Day: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Days","t":"def Days: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Hour","t":"def Hour: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Hours","t":"def Hours: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Minute","t":"def Minute: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Minutes","t":"def Minutes: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Second","t":"def Second: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Seconds","t":"def Seconds: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Millis","t":"def Millis: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Micros","t":"def Micros: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"Nanos","t":"def Nanos: Length","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/_methods.html","n":"toNumber","t":"def toNumber: Integer","d":"scalqa/lang/int/_methods"},
{"l":"api/scalqa/lang/int/G$.html","n":"G","t":"object G","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Lookup","t":"type Lookup[A <: Raw, B] = Lookup[A, B]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Set","t":"def Set: Set","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/int/G$"},
{"l":"api/scalqa/lang/int/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/int/Opaque$"},
{"l":"api/scalqa/lang/int/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/int/Opaque$"},
{"l":"api/scalqa/lang/int/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/int/Opaque$"},
{"l":"api/scalqa/lang/int/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/int/Opaque$"},
{"l":"api/scalqa/lang/int/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/int/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/int/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/int/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/int/g.html","n":"scalqa.lang.int.g","t":"package scalqa.lang.int.g","d":"scalqa/lang/int/g"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/int/g/Buffer"},
{"l":"api/scalqa/lang/int/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/int/g/Buffer$"},
{"l":"api/scalqa/lang/int/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: NEW): Buffer[A]","d":"scalqa/lang/int/g/Buffer$"},
{"l":"api/scalqa/lang/int/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/int/g/Buffer$"},
{"l":"api/scalqa/lang/int/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/int/g/Buffer$"},
{"l":"api/scalqa/lang/int/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/int/g/Buffer$"},
{"l":"api/scalqa/lang/int/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Int","d":"scalqa/lang/int/g/Collection"},
{"l":"api/scalqa/lang/int/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/int/g/Collection"},
{"l":"api/scalqa/lang/int/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/int/g/Collection"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/int/g/Collection$"},
{"l":"api/scalqa/lang/int/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/int/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/int/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/int/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/int/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/int/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/int/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Lookup","t":"type Lookup[A <: Raw] = Lookup[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Companion$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/int/g/Companion$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/int/g/Fun$"},
{"l":"api/scalqa/lang/int/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/int/g/Fun$$Fold"},
{"l":"api/scalqa/lang/int/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/int/g/Fun$$Fold"},
{"l":"api/scalqa/lang/int/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/int/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/int/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/int/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/int/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/int/g/Fun$$Consume"},
{"l":"api/scalqa/lang/int/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/int/g/Fun$$Consume"},
{"l":"api/scalqa/lang/int/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/int/g/Fun$$Filter"},
{"l":"api/scalqa/lang/int/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/int/g/Fun$$Filter"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/int/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/int/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/int/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/int/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/int/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/int/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/int/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/int/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/int/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/int/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/int/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/int/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/int/g/Idx"},
{"l":"api/scalqa/lang/int/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/int/g/Idx"},
{"l":"api/scalqa/lang/int/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/int/g/Idx$"},
{"l":"api/scalqa/lang/int/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/int/g/Idx$"},
{"l":"api/scalqa/lang/int/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/int/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/int/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/int/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/int/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/int/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/int/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/int/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/int/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Lookup.html","n":"Lookup","t":"trait Lookup[A <: Raw, +B] extends Lookup[A, B]","d":"scalqa/lang/int/g/Lookup"},
{"l":"api/scalqa/lang/int/g/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/int/g/Lookup$"},
{"l":"api/scalqa/lang/int/g/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Lookup[A, B]","d":"scalqa/lang/int/g/Lookup$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw, B] extends Lookup[A, B] with Mutable[A, B]","d":"scalqa/lang/int/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/lang/int/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/lang/int/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/int/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](inline v: NEW): Mutable[A, B]","d":"scalqa/lang/int/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw, B](iSz: Int) extends Mutable[A, B]","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"put","t":"def put(k: A, v: B): Unit","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/lang/int/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw, B] extends Stable[A, B] with Lookup[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE = Stable[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/lang/int/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: (A, B)*): Stable[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable$.html","n":"void","t":"def void[A <: Raw, B]: Stable[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/int/g/Lookup$$Stable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Stable[A, B]","d":"scalqa/lang/int/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"implicitFromAnyInt","t":"def implicitFromAnyInt[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Long","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/int/g/Opt$"},
{"l":"api/scalqa/lang/int/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/int/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/int/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/int/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/int/g/Pack"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/int/g/Pack$"},
{"l":"api/scalqa/lang/int/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Int","d":"scalqa/lang/int/g/Pro"},
{"l":"api/scalqa/lang/int/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/int/g/Pro"},
{"l":"api/scalqa/lang/int/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/int/g/Pro$"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/int/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/int/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/int/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/int/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/int/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/int/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/int/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/int/g/Pro$$Observable"},
{"l":"api/scalqa/lang/int/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/int/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/int/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/int/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/int/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/int/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/int/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/int/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/int/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/int/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/int/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/int/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/int/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/int/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/int/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/int/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _size: Int) extends Range[A] with Size with Stream[A] with Int","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"this","t":"def this(start: A, end: A, endIn: Boolean)","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"endX","t":"def endX: A","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"size","t":"def size: Int","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"streamStep","t":"def streamStep(step: Int): Stream[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/int/g/Range"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): Unit","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":">>","t":"def >>(move: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"<<","t":"def <<(move: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"+","t":"def +(growBy: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"-","t":"def -(shrinkBy: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"checkIn","t":"def checkIn(size: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$.html","n":"default","t":"def default(size: Int): Range","d":"scalqa/lang/int/g/Range$"},
{"l":"api/scalqa/lang/int/g/Range$$z_Void$.html","n":"z_Void","t":"object z_Void extends Range[Int] with Void","d":"scalqa/lang/int/g/Range$$z_Void$"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"Set","t":"class Set[A <: Raw] extends Set[A] with Collection[A]","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE = Set[A]","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"size","t":"def size: Int","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"join","t":"def join(v: A): Set[A]","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Set[A]","d":"scalqa/lang/int/g/Set"},
{"l":"api/scalqa/lang/int/g/Set$.html","n":"Set","t":"object Set","d":"scalqa/lang/int/g/Set$"},
{"l":"api/scalqa/lang/int/g/Set$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Set[A]","d":"scalqa/lang/int/g/Set$"},
{"l":"api/scalqa/lang/int/g/Set$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Set[A]","d":"scalqa/lang/int/g/Set$"},
{"l":"api/scalqa/lang/int/g/Set$.html","n":"void","t":"def void[A <: Raw]: Set[A]","d":"scalqa/lang/int/g/Set$"},
{"l":"api/scalqa/lang/int/g/Set$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Set[A]","d":"scalqa/lang/int/g/Set$"},
{"l":"api/scalqa/lang/int/g/Set$$z_Void$.html","n":"z_Void","t":"object z_Void extends Set[Nothing] with Void","d":"scalqa/lang/int/g/Set$$z_Void$"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Int","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/int/g/Stream"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/Stream$.html","n":"implicitFromRange","t":"def implicitFromRange[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/int/g/Stream$"},
{"l":"api/scalqa/lang/int/g/companion.html","n":"scalqa.lang.int.g.companion","t":"package scalqa.lang.int.g.companion","d":"scalqa/lang/int/g/companion"},
{"l":"api/scalqa/lang/int/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/int/g/companion/Collection"},
{"l":"api/scalqa/lang/int/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/int/g/companion/Collection"},
{"l":"api/scalqa/lang/int/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/int/g/companion/Collection"},
{"l":"api/scalqa/lang/int/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/int/g/companion/Collection"},
{"l":"api/scalqa/lang/int/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/int/g/companion/Collection"},
{"l":"api/scalqa/lang/int/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/int/g/companion/Collection$"},
{"l":"api/scalqa/lang/int/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/int/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/int/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/int/g/companion/Containers"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/int/g/companion/Fun"},
{"l":"api/scalqa/lang/int/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/int/g/companion/Idx"},
{"l":"api/scalqa/lang/int/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/int/g/companion/Idx"},
{"l":"api/scalqa/lang/int/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/int/g/companion/Idx"},
{"l":"api/scalqa/lang/int/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/int/g/companion/Idx"},
{"l":"api/scalqa/lang/int/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/int/g/companion/Idx"},
{"l":"api/scalqa/lang/int/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/int/g/companion/Idx$"},
{"l":"api/scalqa/lang/int/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/int/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/int/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A <: Raw]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"void","t":"def void[B]: Lookup[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/int/g/companion/Lookup"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/int/g/companion/Lookup$"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/int/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](initSize: Int): Mutable[A, B]","d":"scalqa/lang/int/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw]","d":"scalqa/lang/int/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/int/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/int/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/int/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/int/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/int/g/companion/Opt"},
{"l":"api/scalqa/lang/int/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/int/g/companion/Opt"},
{"l":"api/scalqa/lang/int/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/int/g/companion/Pack"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/int/g/companion/Pro"},
{"l":"api/scalqa/lang/int/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/int/g/companion/Pro$"},
{"l":"api/scalqa/lang/int/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/int/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/int/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/int/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/int/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/int/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/int/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/int/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/int/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/int/g/companion/Set.html","n":"Set","t":"class Set[A <: Raw]","d":"scalqa/lang/int/g/companion/Set"},
{"l":"api/scalqa/lang/int/g/companion/Set.html","n":"apply","t":"def apply(inline v: A*): Set[A]","d":"scalqa/lang/int/g/companion/Set"},
{"l":"api/scalqa/lang/int/g/companion/Set.html","n":"apply","t":"def apply(inline v: Stream[A]): Set[A]","d":"scalqa/lang/int/g/companion/Set"},
{"l":"api/scalqa/lang/int/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/int/g/companion/Set"},
{"l":"api/scalqa/lang/int/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/int/g/companion/Stream"},
{"l":"api/scalqa/lang/int/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/int/g/companion/Stream"},
{"l":"api/scalqa/lang/int/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/int/g/companion/Stream"},
{"l":"api/scalqa/lang/int/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/int/g/companion/Stream"},
{"l":"api/scalqa/lang/int/opaque.html","n":"scalqa.lang.int.opaque","t":"package scalqa.lang.int.opaque","d":"scalqa/lang/int/opaque"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Int[A]","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Int[A]","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/int/opaque/Base"},
{"l":"api/scalqa/lang/int/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/int/opaque/Base$"},
{"l":"api/scalqa/lang/int/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/int/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/int/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/int/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/int/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/int/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/int/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/int/opaque/Data"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Sequential","t":"type Sequential[A <: Opaque] = Sequential[A]","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Sequential","t":"def Sequential: Sequential","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/int/opaque/Data$"},
{"l":"api/scalqa/lang/int/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/int/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data.html","n":"scalqa.lang.int.opaque.data","t":"package scalqa.lang.int.opaque.data","d":"scalqa/lang/int/opaque/data"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/int/opaque/data/Calculable"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/int/opaque/data/Calculable"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/int/opaque/data/Calculable"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/int/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/int/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Byte","t":"val z_CanEqual_Byte: CanEqual[A, Byte]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Short","t":"val z_CanEqual_Short: CanEqual[A, Short]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Int","t":"val z_CanEqual_Int: CanEqual[A, Int]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Long","t":"val z_CanEqual_Long: CanEqual[A, Long]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Float","t":"val z_CanEqual_Float: CanEqual[A, Float]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical.html","n":"z_CanEqual_Double","t":"val z_CanEqual_Double: CanEqual[A, Double]","d":"scalqa/lang/int/opaque/data/Numerical"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/int/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Integer","d":"scalqa/lang/int/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/int/opaque/data/Ordered"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/int/opaque/data/Ordered"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/int/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/int/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/int/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/int/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/int/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/int/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"<>=","t":"def <>=[THIS_OPAQUE <: Opaque](inline sz: Int): Range[THIS_OPAQUE]","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential.html","n":"Sequential","t":"class Sequential[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/int/opaque/data/Sequential"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential.html","n":"givenAbleSequence","t":"val givenAbleSequence: Sequence[A]","d":"scalqa/lang/int/opaque/data/Sequential"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$.html","n":"Sequential","t":"object Sequential","d":"scalqa/lang/int/opaque/data/Sequential$"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/int/opaque/data/Sequential$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline i: Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Sequential$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline i: Int): THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Sequential$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$$_methods.html","n":"next","t":"def next[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Sequential$$_methods"},
{"l":"api/scalqa/lang/int/opaque/data/Sequential$$_methods.html","n":"prior","t":"def prior[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/int/opaque/data/Sequential$$_methods"},
{"l":"api/scalqa/lang/long.html","n":"scalqa.lang.long","t":"package scalqa.lang.long","d":"scalqa/lang/long"},
{"l":"api/scalqa/lang/long/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"<>","t":"def <>(inline to: Long): Range","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"<>>","t":"def <>>(inline to: Long): Range","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"<>=","t":"def <>=(inline size: Int): Range","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"max","t":"def max(inline v: Long): Long","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"min","t":"def min(inline v: Long): Long","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"tagBrief","t":"def tagBrief: String","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Long)(using r: Rounding): Long","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"ByteCount","t":"def ByteCount: ByteCount","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Year","t":"def Year: Year","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Big","t":"def Big: BigInteger","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Percent","t":"def Percent: Percent","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Week","t":"def Week: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Weeks","t":"def Weeks: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Day","t":"def Day: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Days","t":"def Days: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Hour","t":"def Hour: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Hours","t":"def Hours: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Minute","t":"def Minute: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Minutes","t":"def Minutes: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Second","t":"def Second: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Seconds","t":"def Seconds: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Millis","t":"def Millis: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Micros","t":"def Micros: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"Nanos","t":"def Nanos: Length","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/_methods.html","n":"toNumber","t":"def toNumber: Long","d":"scalqa/lang/long/_methods"},
{"l":"api/scalqa/lang/long/G$.html","n":"G","t":"object G","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Lookup","t":"type Lookup[A <: Raw, B] = Lookup[A, B]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Set","t":"def Set: Set","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/long/G$"},
{"l":"api/scalqa/lang/long/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/long/Opaque$"},
{"l":"api/scalqa/lang/long/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/long/Opaque$"},
{"l":"api/scalqa/lang/long/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/long/Opaque$"},
{"l":"api/scalqa/lang/long/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/long/Opaque$"},
{"l":"api/scalqa/lang/long/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/long/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/long/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/long/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/long/g.html","n":"scalqa.lang.long.g","t":"package scalqa.lang.long.g","d":"scalqa/lang/long/g"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/long/g/Buffer"},
{"l":"api/scalqa/lang/long/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/long/g/Buffer$"},
{"l":"api/scalqa/lang/long/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: NEW): Buffer[A]","d":"scalqa/lang/long/g/Buffer$"},
{"l":"api/scalqa/lang/long/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/long/g/Buffer$"},
{"l":"api/scalqa/lang/long/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/long/g/Buffer$"},
{"l":"api/scalqa/lang/long/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/long/g/Buffer$"},
{"l":"api/scalqa/lang/long/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Long","d":"scalqa/lang/long/g/Collection"},
{"l":"api/scalqa/lang/long/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/long/g/Collection"},
{"l":"api/scalqa/lang/long/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/long/g/Collection"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/long/g/Collection$"},
{"l":"api/scalqa/lang/long/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/long/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/long/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/long/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/long/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/long/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/long/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Lookup","t":"type Lookup[A <: Raw] = Lookup[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Companion$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/long/g/Companion$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/long/g/Fun$"},
{"l":"api/scalqa/lang/long/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/long/g/Fun$$Fold"},
{"l":"api/scalqa/lang/long/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/long/g/Fun$$Fold"},
{"l":"api/scalqa/lang/long/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/long/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/long/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/long/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/long/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/long/g/Fun$$Consume"},
{"l":"api/scalqa/lang/long/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/long/g/Fun$$Consume"},
{"l":"api/scalqa/lang/long/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/long/g/Fun$$Filter"},
{"l":"api/scalqa/lang/long/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/long/g/Fun$$Filter"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/long/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/long/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/long/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/long/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/long/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/long/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/long/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/long/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/long/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/long/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/long/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/long/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/long/g/Idx"},
{"l":"api/scalqa/lang/long/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/long/g/Idx"},
{"l":"api/scalqa/lang/long/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/long/g/Idx$"},
{"l":"api/scalqa/lang/long/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/long/g/Idx$"},
{"l":"api/scalqa/lang/long/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/long/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/long/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/long/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/long/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/long/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/long/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/long/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/long/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Lookup.html","n":"Lookup","t":"trait Lookup[A <: Raw, +B] extends Lookup[A, B]","d":"scalqa/lang/long/g/Lookup"},
{"l":"api/scalqa/lang/long/g/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/long/g/Lookup$"},
{"l":"api/scalqa/lang/long/g/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Lookup[A, B]","d":"scalqa/lang/long/g/Lookup$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw, B] extends Lookup[A, B] with Mutable[A, B]","d":"scalqa/lang/long/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/lang/long/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/lang/long/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/long/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](inline v: NEW): Mutable[A, B]","d":"scalqa/lang/long/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw, B](iSz: Int) extends Mutable[A, B]","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"put","t":"def put(k: A, v: B): Unit","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/lang/long/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw, B] extends Stable[A, B] with Lookup[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE = Stable[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/lang/long/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: (A, B)*): Stable[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable$.html","n":"void","t":"def void[A <: Raw, B]: Stable[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/long/g/Lookup$$Stable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Stable[A, B]","d":"scalqa/lang/long/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"implicitFromAnyLong","t":"def implicitFromAnyLong[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Long","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/long/g/Opt$"},
{"l":"api/scalqa/lang/long/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/long/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/long/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/long/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/long/g/Pack"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/long/g/Pack$"},
{"l":"api/scalqa/lang/long/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/long/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/long/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Long","d":"scalqa/lang/long/g/Pro"},
{"l":"api/scalqa/lang/long/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/long/g/Pro"},
{"l":"api/scalqa/lang/long/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/long/g/Pro$"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/long/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/long/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/long/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/long/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/long/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/long/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/long/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/long/g/Pro$$Observable"},
{"l":"api/scalqa/lang/long/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/long/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/long/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/long/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/long/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/long/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/long/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/long/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/long/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/long/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/long/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/long/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/long/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/long/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/long/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/long/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _end: A, endIn: Boolean) extends Range[A] with Stream[A] with Long","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"streamStep","t":"def streamStep(step: A): Stream[A]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/long/g/Range"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"implicitToStream","t":"def implicitToStream[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Range$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): Unit","d":"scalqa/lang/long/g/Range$"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"Set","t":"class Set[A <: Raw] extends Set[A] with Collection[A]","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE = Set[A]","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"size","t":"def size: Int","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"join","t":"def join(v: A): Set[A]","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Set[A]","d":"scalqa/lang/long/g/Set"},
{"l":"api/scalqa/lang/long/g/Set$.html","n":"Set","t":"object Set","d":"scalqa/lang/long/g/Set$"},
{"l":"api/scalqa/lang/long/g/Set$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Set[A]","d":"scalqa/lang/long/g/Set$"},
{"l":"api/scalqa/lang/long/g/Set$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Set[A]","d":"scalqa/lang/long/g/Set$"},
{"l":"api/scalqa/lang/long/g/Set$.html","n":"void","t":"def void[A <: Raw]: Set[A]","d":"scalqa/lang/long/g/Set$"},
{"l":"api/scalqa/lang/long/g/Set$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Set[A]","d":"scalqa/lang/long/g/Set$"},
{"l":"api/scalqa/lang/long/g/Set$$z_Void$.html","n":"z_Void","t":"object z_Void extends Set[Nothing] with Void","d":"scalqa/lang/long/g/Set$$z_Void$"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Long","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/long/g/Stream"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/Stream$.html","n":"implicitFromRange","t":"def implicitFromRange[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/long/g/Stream$"},
{"l":"api/scalqa/lang/long/g/companion.html","n":"scalqa.lang.long.g.companion","t":"package scalqa.lang.long.g.companion","d":"scalqa/lang/long/g/companion"},
{"l":"api/scalqa/lang/long/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/long/g/companion/Collection"},
{"l":"api/scalqa/lang/long/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/long/g/companion/Collection"},
{"l":"api/scalqa/lang/long/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/long/g/companion/Collection"},
{"l":"api/scalqa/lang/long/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/long/g/companion/Collection"},
{"l":"api/scalqa/lang/long/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/long/g/companion/Collection"},
{"l":"api/scalqa/lang/long/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/long/g/companion/Collection$"},
{"l":"api/scalqa/lang/long/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/long/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/long/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/long/g/companion/Containers"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/long/g/companion/Fun"},
{"l":"api/scalqa/lang/long/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/long/g/companion/Idx"},
{"l":"api/scalqa/lang/long/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/long/g/companion/Idx"},
{"l":"api/scalqa/lang/long/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/long/g/companion/Idx"},
{"l":"api/scalqa/lang/long/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/long/g/companion/Idx"},
{"l":"api/scalqa/lang/long/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/long/g/companion/Idx"},
{"l":"api/scalqa/lang/long/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/long/g/companion/Idx$"},
{"l":"api/scalqa/lang/long/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/long/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/long/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A <: Raw]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"void","t":"def void[B]: Lookup[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/long/g/companion/Lookup"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/long/g/companion/Lookup$"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/long/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](initSize: Int): Mutable[A, B]","d":"scalqa/lang/long/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw]","d":"scalqa/lang/long/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/long/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/long/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/long/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/long/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/long/g/companion/Opt"},
{"l":"api/scalqa/lang/long/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/long/g/companion/Opt"},
{"l":"api/scalqa/lang/long/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/long/g/companion/Pack"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/long/g/companion/Pro"},
{"l":"api/scalqa/lang/long/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/long/g/companion/Pro$"},
{"l":"api/scalqa/lang/long/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/long/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/long/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/long/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/long/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/long/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/long/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/long/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/long/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/long/g/companion/Set.html","n":"Set","t":"class Set[A <: Raw]","d":"scalqa/lang/long/g/companion/Set"},
{"l":"api/scalqa/lang/long/g/companion/Set.html","n":"apply","t":"def apply(inline v: A*): Set[A]","d":"scalqa/lang/long/g/companion/Set"},
{"l":"api/scalqa/lang/long/g/companion/Set.html","n":"apply","t":"def apply(inline v: Stream[A]): Set[A]","d":"scalqa/lang/long/g/companion/Set"},
{"l":"api/scalqa/lang/long/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/long/g/companion/Set"},
{"l":"api/scalqa/lang/long/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/long/g/companion/Stream"},
{"l":"api/scalqa/lang/long/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/long/g/companion/Stream"},
{"l":"api/scalqa/lang/long/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/long/g/companion/Stream"},
{"l":"api/scalqa/lang/long/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/long/g/companion/Stream"},
{"l":"api/scalqa/lang/long/opaque.html","n":"scalqa.lang.long.opaque","t":"package scalqa.lang.long.opaque","d":"scalqa/lang/long/opaque"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Long[A]","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Long[A]","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/long/opaque/Base"},
{"l":"api/scalqa/lang/long/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/long/opaque/Base$"},
{"l":"api/scalqa/lang/long/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/long/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/long/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/long/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/long/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/long/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/long/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/long/opaque/Data"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/long/opaque/Data$"},
{"l":"api/scalqa/lang/long/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/long/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data.html","n":"scalqa.lang.long.opaque.data","t":"package scalqa.lang.long.opaque.data","d":"scalqa/lang/long/opaque/data"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/long/opaque/data/Calculable"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/long/opaque/data/Calculable"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/long/opaque/data/Calculable"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/long/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/long/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Byte","t":"val z_CanEqual_Byte: CanEqual[A, Byte]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Short","t":"val z_CanEqual_Short: CanEqual[A, Short]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Int","t":"val z_CanEqual_Int: CanEqual[A, Int]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Long","t":"val z_CanEqual_Long: CanEqual[A, Long]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Float","t":"val z_CanEqual_Float: CanEqual[A, Float]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical.html","n":"z_CanEqual_Double","t":"val z_CanEqual_Double: CanEqual[A, Double]","d":"scalqa/lang/long/opaque/data/Numerical"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/long/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/long/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/long/opaque/data/Ordered"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/long/opaque/data/Ordered"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/long/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/long/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/long/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/long/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/long/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/long/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/long/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short.html","n":"scalqa.lang.short","t":"package scalqa.lang.short","d":"scalqa/lang/short"},
{"l":"api/scalqa/lang/short/_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"?","t":"def ?: Opt","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"<>","t":"def <>(inline to: Short): Range","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"<>>","t":"def <>>(inline to: Short): Range","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"<>=","t":"def <>=(inline size: Int): Range","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"max","t":"def max(inline v: Short): Short","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"min","t":"def min(inline v: Short): Short","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"roundTo","t":"def roundTo(inline unit: Int)(using r: Rounding): Short","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toByte","t":"def toByte: Byte","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toChar","t":"def toChar: Char","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toShort","t":"def toShort: Short","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toInt","t":"def toInt: Int","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toLong","t":"def toLong: Long","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toFloat","t":"def toFloat: Float","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toDouble","t":"def toDouble: Double","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/_methods.html","n":"toNumber","t":"def toNumber: Short","d":"scalqa/lang/short/_methods"},
{"l":"api/scalqa/lang/short/G$.html","n":"G","t":"object G","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Stream","t":"def Stream: Stream","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Range","t":"def Range: Range","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Range","t":"type Range[A <: Raw] = Range[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Pack","t":"def Pack: Pack","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Opt","t":"def Opt: Opt","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Opt","t":"type Opt[A <: Raw] = DEF[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Buffer","t":"def Buffer: Buffer","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Buffer","t":"type Buffer[A <: Raw] = Buffer[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Lookup","t":"type Lookup[A <: Raw, B] = Lookup[A, B]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Set","t":"def Set: Set","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Fun","t":"def Fun: Fun","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/G$.html","n":"Companion","t":"def Companion: Companion","d":"scalqa/lang/short/G$"},
{"l":"api/scalqa/lang/short/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/short/Opaque$"},
{"l":"api/scalqa/lang/short/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/short/Opaque$"},
{"l":"api/scalqa/lang/short/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/short/Opaque$"},
{"l":"api/scalqa/lang/short/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/short/Opaque$"},
{"l":"api/scalqa/lang/short/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/short/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/short/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/short/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/short/g.html","n":"scalqa.lang.short.g","t":"package scalqa.lang.short.g","d":"scalqa/lang/short/g"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"Buffer","t":"class Buffer[A <: Raw](arrayToUse: Array[Primitive], sizeToStartWith: Int) extends Buffer[A] with Mutable[A]","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"this","t":"def this()","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"this","t":"def this(v: Stream[A])","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"size","t":"def size: Int","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/short/g/Buffer"},
{"l":"api/scalqa/lang/short/g/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/lang/short/g/Buffer$"},
{"l":"api/scalqa/lang/short/g/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: NEW): Buffer[A]","d":"scalqa/lang/short/g/Buffer$"},
{"l":"api/scalqa/lang/short/g/Buffer$.html","n":"z_StreamToArray","t":"def z_StreamToArray(v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/short/g/Buffer$"},
{"l":"api/scalqa/lang/short/g/Buffer$.html","n":"z_ArrayJoinAll","t":"def z_ArrayJoinAll(x: Array[Primitive], v: Stream[Primitive]): Array[Primitive]","d":"scalqa/lang/short/g/Buffer$"},
{"l":"api/scalqa/lang/short/g/Buffer$.html","n":"z_ArrayJoinAllAt","t":"def z_ArrayJoinAllAt(x: Array[Primitive], i: Int, v: Stream[Primitive], sz: Int): Array[Primitive]","d":"scalqa/lang/short/g/Buffer$"},
{"l":"api/scalqa/lang/short/g/Collection.html","n":"Collection","t":"trait Collection[A <: Raw] extends Collection[A] with Contain[A] with Short","d":"scalqa/lang/short/g/Collection"},
{"l":"api/scalqa/lang/short/g/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/short/g/Collection"},
{"l":"api/scalqa/lang/short/g/Collection.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/lang/short/g/Collection"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Collection[A]","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: Consume[A, U]): Unit","d":"scalqa/lang/short/g/Collection$"},
{"l":"api/scalqa/lang/short/g/Collection$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Collection[A] with Mutable[A]","d":"scalqa/lang/short/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/short/g/Collection$$Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/lang/short/g/Collection$$Mutable"},
{"l":"api/scalqa/lang/short/g/Collection$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/short/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Collection$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/short/g/Collection$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Companion","t":"object Companion","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Containers","t":"type Containers[A <: Raw] = Containers[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Stream","t":"type Stream[A <: Raw] = Stream[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Pack","t":"type Pack[A <: Raw] = Pack[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Opt","t":"type Opt[A <: Raw] = Opt[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Collection","t":"type Collection[A <: Raw] = Collection[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Collection","t":"def Collection: Collection","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Idx","t":"type Idx[A <: Raw] = Idx[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Idx","t":"def Idx: Idx","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Pro","t":"type Pro[A <: Raw] = Pro[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Pro","t":"def Pro: Pro","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Fun","t":"type Fun[A <: Raw] = Fun[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Lookup","t":"type Lookup[A <: Raw] = Lookup[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Lookup","t":"def Lookup: Lookup","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Companion$.html","n":"Set","t":"type Set[A <: Raw] = Set[A]","d":"scalqa/lang/short/g/Companion$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"Fun","t":"object Fun","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToBoolean","t":"type ToBoolean[A <: Raw] = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToByte","t":"type ToByte[A <: Raw] = ToAnyByte[A, Byte]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToChar","t":"type ToChar[A <: Raw] = ToAnyChar[A, Char]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToShort","t":"type ToShort[A <: Raw] = ToAnyShort[A, Short]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToInt","t":"type ToInt[A <: Raw] = ToAnyInt[A, Int]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToLong","t":"type ToLong[A <: Raw] = ToAnyLong[A, Long]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToFloat","t":"type ToFloat[A <: Raw] = ToAnyFloat[A, Float]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$.html","n":"ToDouble","t":"type ToDouble[A <: Raw] = ToAnyDouble[A, Double]","d":"scalqa/lang/short/g/Fun$"},
{"l":"api/scalqa/lang/short/g/Fun$$Fold.html","n":"Fold","t":"trait Fold[A <: Raw]","d":"scalqa/lang/short/g/Fun$$Fold"},
{"l":"api/scalqa/lang/short/g/Fun$$Fold.html","n":"apply","t":"def apply(v: A, w: A): A","d":"scalqa/lang/short/g/Fun$$Fold"},
{"l":"api/scalqa/lang/short/g/Fun$$FoldAs.html","n":"FoldAs","t":"trait FoldAs[B, A <: Raw]","d":"scalqa/lang/short/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/short/g/Fun$$FoldAs.html","n":"apply","t":"def apply(v: B, w: A): B","d":"scalqa/lang/short/g/Fun$$FoldAs"},
{"l":"api/scalqa/lang/short/g/Fun$$Consume.html","n":"Consume","t":"trait Consume[A <: Raw, U]","d":"scalqa/lang/short/g/Fun$$Consume"},
{"l":"api/scalqa/lang/short/g/Fun$$Consume.html","n":"apply","t":"def apply(v: A): U","d":"scalqa/lang/short/g/Fun$$Consume"},
{"l":"api/scalqa/lang/short/g/Fun$$Filter.html","n":"Filter","t":"trait Filter[A <: Raw]","d":"scalqa/lang/short/g/Fun$$Filter"},
{"l":"api/scalqa/lang/short/g/Fun$$Filter.html","n":"apply","t":"def apply(v: A): Boolean","d":"scalqa/lang/short/g/Fun$$Filter"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAny.html","n":"ToAny","t":"trait ToAny[A <: Raw, B]","d":"scalqa/lang/short/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAny.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAny"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyBoolean.html","n":"ToAnyBoolean","t":"trait ToAnyBoolean[A <: Raw, B <: Boolean]","d":"scalqa/lang/short/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyBoolean.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyBoolean"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyByte.html","n":"ToAnyByte","t":"trait ToAnyByte[A <: Raw, B <: Byte]()","d":"scalqa/lang/short/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyByte.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyByte"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyChar.html","n":"ToAnyChar","t":"trait ToAnyChar[A <: Raw, B <: Char]()","d":"scalqa/lang/short/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyChar.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyChar"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyShort.html","n":"ToAnyShort","t":"trait ToAnyShort[A <: Raw, B <: Short]()","d":"scalqa/lang/short/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyShort.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyShort"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyInt.html","n":"ToAnyInt","t":"trait ToAnyInt[A <: Raw, B <: Int]()","d":"scalqa/lang/short/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyInt.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyInt"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyLong.html","n":"ToAnyLong","t":"trait ToAnyLong[A <: Raw, B <: Long]()","d":"scalqa/lang/short/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyLong.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyLong"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyFloat.html","n":"ToAnyFloat","t":"trait ToAnyFloat[A <: Raw, B <: Float]()","d":"scalqa/lang/short/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyFloat.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyFloat"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyDouble.html","n":"ToAnyDouble","t":"trait ToAnyDouble[A <: Raw, B <: Double]()","d":"scalqa/lang/short/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/short/g/Fun$$ToAnyDouble.html","n":"apply","t":"def apply(v: A): B","d":"scalqa/lang/short/g/Fun$$ToAnyDouble"},
{"l":"api/scalqa/lang/short/g/Idx.html","n":"Idx","t":"trait Idx[A <: Raw] extends Idx[A] with Collection[A]","d":"scalqa/lang/short/g/Idx"},
{"l":"api/scalqa/lang/short/g/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/short/g/Idx"},
{"l":"api/scalqa/lang/short/g/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/short/g/Idx$"},
{"l":"api/scalqa/lang/short/g/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Idx[A]","d":"scalqa/lang/short/g/Idx$"},
{"l":"api/scalqa/lang/short/g/Idx$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Idx[A] with Mutable[A] with Mutable[A]","d":"scalqa/lang/short/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/short/g/Idx$$Mutable.html","n":"addAt","t":"def addAt(i: Int, v: A): Unit","d":"scalqa/lang/short/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/short/g/Idx$$Mutable.html","n":"updateAt","t":"def updateAt(i: Int, v: A): Unit","d":"scalqa/lang/short/g/Idx$$Mutable"},
{"l":"api/scalqa/lang/short/g/Idx$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/short/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Idx$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](inline v: NEW): Mutable[A]","d":"scalqa/lang/short/g/Idx$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Lookup.html","n":"Lookup","t":"trait Lookup[A <: Raw, +B] extends Lookup[A, B]","d":"scalqa/lang/short/g/Lookup"},
{"l":"api/scalqa/lang/short/g/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/short/g/Lookup$"},
{"l":"api/scalqa/lang/short/g/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Lookup[A, B]","d":"scalqa/lang/short/g/Lookup$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw, B] extends Lookup[A, B] with Mutable[A, B]","d":"scalqa/lang/short/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/lang/short/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/lang/short/g/Lookup$$Mutable"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/short/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](inline v: NEW): Mutable[A, B]","d":"scalqa/lang/short/g/Lookup$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw, B](iSz: Int) extends Mutable[A, B]","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"put","t":"def put(k: A, v: B): Unit","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/lang/short/g/Lookup$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw, B] extends Stable[A, B] with Lookup[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE = Stable[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/lang/short/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: (A, B)*): Stable[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable$.html","n":"apply","t":"def apply[A <: Raw, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable$.html","n":"void","t":"def void[A <: Raw, B]: Stable[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/short/g/Lookup$$Stable$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw, B](v: VOID): Stable[A, B]","d":"scalqa/lang/short/g/Lookup$$Stable$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"Opt","t":"object Opt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"void","t":"def void[A <: Raw]: DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"implicitFromAnyShort","t":"def implicitFromAnyShort[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A <: Raw](inline v: DEF[A]): Boolean","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"implicitToValOpt","t":"def implicitToValOpt[A <: Raw](inline v: DEF[A]): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"real","t":"def real[A <: Raw]: Int","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"ref","t":"def ref[A <: Raw]: DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"isEmpty","t":"def isEmpty[A <: Raw]: Boolean","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A <: Raw]: Boolean","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"take","t":"def take[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"takeOnly","t":"def takeOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"drop","t":"def drop[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"dropOnly","t":"def dropOnly[A <: Raw](inline v: A): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"default","t":"def default[A <: Raw](inline v: => A): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"orOpt","t":"def orOpt[A <: Raw](inline that: => DEF[A]): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"or","t":"def or[A <: Raw](inline default: => A): A","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"contains","t":"def contains[A <: Raw](v: A): Boolean","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"forval","t":"def forval[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"fornil","t":"def fornil[A <: Raw](inline f: => U): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"process","t":"def process[A <: Raw](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"filter","t":"def filter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: A => Boolean): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"raw","t":"def raw[A <: Raw]: DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"mapIf","t":"def mapIf[A <: Raw](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"mapOpt","t":"def mapOpt[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"mix","t":"def mix[A <: Raw](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"dropVoid","t":"def dropVoid[A <: Raw](using d: Void[A]): DEF[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"get","t":"def get[A <: Raw]: A","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"stream","t":"def stream[A <: Raw]: Stream[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"z_EmptyDef","t":"given z_EmptyDef","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/lang/short/g/Opt$"},
{"l":"api/scalqa/lang/short/g/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/short/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/short/g/Opt.html","n":"DEF","t":"type DEF[+A <: Raw]","d":"scalqa/lang/short/g/Opt$$TYPE$"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends Pack[A] with Idx[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE = Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"size","t":"def size: Int","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"takeRange","t":"def takeRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"dropRange","t":"def dropRange(from: Int, sz: Int): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"join","t":"def join(v: A): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, vs: Stream[A]): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"joinAll","t":"def joinAll(vs: Stream[A]): Pack[A]","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"z_foreachRaw","t":"def z_foreachRaw[U](f: Consume[A, U]): Unit","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/lang/short/g/Pack"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"fromVarArg","t":"def fromVarArg[A <: Raw](v: A, vs: Seq[A]): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive]): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"fromArray","t":"def fromArray[A <: Raw](v: Array[Primitive], sz: Int): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"void","t":"def void[A <: Raw]: Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$.html","n":"implicitFromStream","t":"def implicitFromStream[A <: Raw](inline v: Stream[A]): Pack[A]","d":"scalqa/lang/short/g/Pack$"},
{"l":"api/scalqa/lang/short/g/Pack$$z_Void$.html","n":"z_Void","t":"object z_Void extends Pack[Nothing] with Void","d":"scalqa/lang/short/g/Pack$$z_Void$"},
{"l":"api/scalqa/lang/short/g/Pro.html","n":"Pro","t":"trait Pro[A <: Raw] extends Pro[A] with Short","d":"scalqa/lang/short/g/Pro"},
{"l":"api/scalqa/lang/short/g/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/short/g/Pro"},
{"l":"api/scalqa/lang/short/g/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/short/g/Pro$"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable.html","n":"Mutable","t":"trait Mutable[A <: Raw] extends Pro[A] with Mutable[A]","d":"scalqa/lang/short/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/short/g/Pro$$Mutable"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/lang/short/g/Pro$$Mutable$"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/short/g/Pro$$Mutable$$X$"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Mutable[A]","d":"scalqa/lang/short/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable$$X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/lang/short/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Pro$$Mutable$$X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/lang/short/g/Pro$$Mutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Pro$$Observable.html","n":"Observable","t":"trait Observable[A <: Raw] extends Pro[A] with Observable[A]","d":"scalqa/lang/short/g/Pro$$Observable"},
{"l":"api/scalqa/lang/short/g/Pro$$Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/lang/short/g/Pro$$Observable$"},
{"l":"api/scalqa/lang/short/g/Pro$$Observable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/short/g/Pro$$Observable$$X$"},
{"l":"api/scalqa/lang/short/g/Pro$$Observable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with Observable[A]","d":"scalqa/lang/short/g/Pro$$Observable$$X$$Abstract"},
{"l":"api/scalqa/lang/short/g/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A <: Raw] extends Mutable[A] with Observable[A] with ObservableMutable[A]","d":"scalqa/lang/short/g/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/short/g/Pro$$ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/lang/short/g/Pro$$ObservableMutable$"},
{"l":"api/scalqa/lang/short/g/Pro$$ObservableMutable$$X$.html","n":"X","t":"object X","d":"scalqa/lang/short/g/Pro$$ObservableMutable$$X$"},
{"l":"api/scalqa/lang/short/g/Pro$$ObservableMutable$$X$$Abstract.html","n":"Abstract","t":"class Abstract[A <: Raw] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/lang/short/g/Pro$$ObservableMutable$$X$$Abstract"},
{"l":"api/scalqa/lang/short/g/Pro$$ObservableMutable$$X$$Basic.html","n":"Basic","t":"class Basic[A <: Raw](v: A) extends Basic[A] with Base[A] with ObservableMutable[A]","d":"scalqa/lang/short/g/Pro$$ObservableMutable$$X$$Basic"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"Range","t":"class Range[A <: Raw](_start: A, _size: Int) extends Range[A] with Size with Stream[A] with Short","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"this","t":"def this(start: A, end: A, endIn: Boolean)","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE = Range[A]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"start","t":"def start: A","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"end","t":"def end: A","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"endX","t":"def endX: A","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"size","t":"def size: Int","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"contains","t":"def contains(r: Range[A]): Boolean","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"join","t":"def join(r: Range[A]): THIS_TYPE","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range.html","n":"streamStep","t":"def streamStep(step: Int): Stream[A]","d":"scalqa/lang/short/g/Range"},
{"l":"api/scalqa/lang/short/g/Range$.html","n":"Range","t":"object Range","d":"scalqa/lang/short/g/Range$"},
{"l":"api/scalqa/lang/short/g/Range$.html","n":"map","t":"def map[A <: Raw](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Range$"},
{"l":"api/scalqa/lang/short/g/Range$.html","n":"flatMap","t":"def flatMap[A <: Raw](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Range$"},
{"l":"api/scalqa/lang/short/g/Range$.html","n":"withFilter","t":"def withFilter[A <: Raw](inline f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Range$"},
{"l":"api/scalqa/lang/short/g/Range$.html","n":"foreach","t":"def foreach[A <: Raw](inline f: A => U): Unit","d":"scalqa/lang/short/g/Range$"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"Set","t":"class Set[A <: Raw] extends Set[A] with Collection[A]","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE = Set[A]","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"size","t":"def size: Int","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"join","t":"def join(v: A): Set[A]","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Set[A]","d":"scalqa/lang/short/g/Set"},
{"l":"api/scalqa/lang/short/g/Set$.html","n":"Set","t":"object Set","d":"scalqa/lang/short/g/Set$"},
{"l":"api/scalqa/lang/short/g/Set$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Set[A]","d":"scalqa/lang/short/g/Set$"},
{"l":"api/scalqa/lang/short/g/Set$.html","n":"fromStream","t":"def fromStream[A <: Raw](v: Stream[A]): Set[A]","d":"scalqa/lang/short/g/Set$"},
{"l":"api/scalqa/lang/short/g/Set$.html","n":"void","t":"def void[A <: Raw]: Set[A]","d":"scalqa/lang/short/g/Set$"},
{"l":"api/scalqa/lang/short/g/Set$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Set[A]","d":"scalqa/lang/short/g/Set$"},
{"l":"api/scalqa/lang/short/g/Set$$z_Void$.html","n":"z_Void","t":"object z_Void extends Set[Nothing] with Void","d":"scalqa/lang/short/g/Set$$z_Void$"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"Stream","t":"class Stream[A <: Raw] extends Stream[A] with Discharge[A] with Short","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"readRawOpt","t":"def readRawOpt: DEF[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"filter","t":"def filter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"withFilter","t":"def withFilter(inline f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"take","t":"def take(f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"drop","t":"def drop(f: Filter[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"takeOnly","t":"def takeOnly(v: A): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"dropOnly","t":"def dropOnly(v: A): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"joinAll","t":"def joinAll(v: Stream[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"++","t":"def ++(inline v: Stream[A]): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"foreach","t":"def foreach[U](f: Consume[A, U]): Unit","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"foldAs","t":"def foldAs[B](start: B)(f: FoldAs[B, A]): B","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"fold","t":"def fold(start: A)(f: Fold[A]): A","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"reduce","t":"def reduce(f: Fold[A]): A","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"reduceOpt","t":"def reduceOpt(f: Fold[A]): DEF[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"count","t":"def count: Int","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"count","t":"def count(f: Filter[A]): Int","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"toSet","t":"def toSet: Set[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"toArray","t":"def toArray: Array[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"dischargeTo","t":"def dischargeTo(b: Buffer[A]): Unit","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"FILTER","t":"def FILTER(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"TAKE","t":"def TAKE(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"DROP","t":"def DROP(inline f: A => Boolean): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"FOREACH","t":"def FOREACH[U](inline f: A => U): Unit","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"FOLD_AS","t":"def FOLD_AS[B](inline s: B)(inline f: (B, A) => B): B","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"FOLD","t":"def FOLD(inline s: A)(inline f: (A, A) => A): A","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"REDUCE","t":"def REDUCE(inline f: (A, A) => A): A","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"REDUCE_OPT","t":"def REDUCE_OPT(inline f: (A, A) => A): DEF[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"mapIf","t":"def mapIf(inline f: A => Boolean, inline m: A => A): Stream[A]","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"map","t":"def map[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"MAP","t":"def MAP[B](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"flatMap","t":"def flatMap[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"FLAT_MAP","t":"def FLAT_MAP[B](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"mapOpt","t":"def mapOpt[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream.html","n":"MAP_OPT","t":"def MAP_OPT[B, OPT <: Opt[B]](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/lang/short/g/Stream"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"Stream","t":"object Stream","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](inline v: A): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"apply","t":"def apply[A <: Raw](v: A*): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"void","t":"def void[A <: Raw]: Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A <: Raw](v: VOID): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"implicitFromArray","t":"def implicitFromArray[A <: Raw](inline v: Array[A]): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"implicitFromOpt","t":"def implicitFromOpt[A <: Raw](inline v: DEF[A]): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"implicitFromCollection","t":"def implicitFromCollection[A <: Raw](inline v: Collection[A]): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/Stream$.html","n":"implicitFromRange","t":"def implicitFromRange[A <: Raw](inline v: Range[A]): Stream[A]","d":"scalqa/lang/short/g/Stream$"},
{"l":"api/scalqa/lang/short/g/companion.html","n":"scalqa.lang.short.g.companion","t":"package scalqa.lang.short.g.companion","d":"scalqa/lang/short/g/companion"},
{"l":"api/scalqa/lang/short/g/companion/Collection.html","n":"Collection","t":"class Collection[A <: Raw] extends z_Pack[A, Collection[A]]","d":"scalqa/lang/short/g/companion/Collection"},
{"l":"api/scalqa/lang/short/g/companion/Collection.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/short/g/companion/Collection"},
{"l":"api/scalqa/lang/short/g/companion/Collection.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/short/g/companion/Collection"},
{"l":"api/scalqa/lang/short/g/companion/Collection.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/short/g/companion/Collection"},
{"l":"api/scalqa/lang/short/g/companion/Collection.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/short/g/companion/Collection"},
{"l":"api/scalqa/lang/short/g/companion/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/lang/short/g/companion/Collection$"},
{"l":"api/scalqa/lang/short/g/companion/Collection$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/short/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Collection$$Mutable.html","n":"apply","t":"def apply(initSize: Int): Mutable[A]","d":"scalqa/lang/short/g/companion/Collection$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Containers","t":"trait Containers[A <: Raw]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Stream","t":"type Stream = Stream[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Stream","t":"def Stream: Stream[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Range","t":"type Range = Range[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Opt","t":"type Opt = DEF[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Opt","t":"def Opt: Opt[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Buffer","t":"type Buffer = Buffer[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Collection","t":"type Collection = Collection[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Collection","t":"val Collection: Collection[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Idx","t":"type Idx = Idx[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Idx","t":"val Idx: Idx[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Pack","t":"type Pack = Pack[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Pack","t":"def Pack: Pack[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Lookup","t":"type Lookup[B] = Lookup[A, B]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Lookup","t":"val Lookup: Lookup[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Pro","t":"type Pro = Pro[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Pro","t":"val Pro: Pro[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Promise","t":"type Promise = Promise[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Promise","t":"def Promise: Promise[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Result","t":"type Result = DEF[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Result","t":"def Result: Result[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Fun","t":"val Fun: Fun[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Set","t":"type Set = Set[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Containers.html","n":"Set","t":"def Set: Set[A]","d":"scalqa/lang/short/g/companion/Containers"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"Fun","t":"class Fun[A <: Raw]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"Fold","t":"type Fold = Fold[A]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"FoldAs","t":"type FoldAs[B] = FoldAs[B, A]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"Consume","t":"type Consume[U] = Consume[A, U]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"Filter","t":"type Filter = Filter[A]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAny","t":"type ToAny[B] = ToAny[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyBoolean","t":"type ToAnyBoolean[B <: Boolean] = ToAnyBoolean[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToBoolean","t":"type ToBoolean = ToAnyBoolean[A, Boolean]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyByte","t":"type ToAnyByte[B <: Byte] = ToAnyByte[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToByte","t":"type ToByte = ToAnyByte[A, Byte]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyChar","t":"type ToAnyChar[B <: Char] = ToAnyChar[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToChar","t":"type ToChar = ToAnyChar[A, Char]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyShort","t":"type ToAnyShort[B <: Short] = ToAnyShort[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToShort","t":"type ToShort = ToAnyShort[A, Short]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyInt","t":"type ToAnyInt[B <: Int] = ToAnyInt[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToInt","t":"type ToInt = ToAnyInt[A, Int]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyLong","t":"type ToAnyLong[B <: Long] = ToAnyLong[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToLong","t":"type ToLong = ToAnyLong[A, Long]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyFloat","t":"type ToAnyFloat[B <: Float] = ToAnyFloat[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToFloat","t":"type ToFloat = ToAnyFloat[A, Float]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToAnyDouble","t":"type ToAnyDouble[B <: Double] = ToAnyDouble[A, B]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Fun.html","n":"ToDouble","t":"type ToDouble = ToAnyDouble[A, Double]","d":"scalqa/lang/short/g/companion/Fun"},
{"l":"api/scalqa/lang/short/g/companion/Idx.html","n":"Idx","t":"class Idx[A <: Raw] extends z_Pack[A, Idx[A]]","d":"scalqa/lang/short/g/companion/Idx"},
{"l":"api/scalqa/lang/short/g/companion/Idx.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/short/g/companion/Idx"},
{"l":"api/scalqa/lang/short/g/companion/Idx.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/short/g/companion/Idx"},
{"l":"api/scalqa/lang/short/g/companion/Idx.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/short/g/companion/Idx"},
{"l":"api/scalqa/lang/short/g/companion/Idx.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/short/g/companion/Idx"},
{"l":"api/scalqa/lang/short/g/companion/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/lang/short/g/companion/Idx$"},
{"l":"api/scalqa/lang/short/g/companion/Idx$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/short/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Idx$$Mutable.html","n":"apply","t":"def apply(inline initSize: Int): Mutable[A]","d":"scalqa/lang/short/g/companion/Idx$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"Lookup","t":"class Lookup[A <: Raw]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Lookup[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"void","t":"def void[B]: Lookup[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"Mutable","t":"type Mutable[B] = Mutable[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"M","t":"type M[B] = Mutable[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"Stable","t":"type Stable[B] = Stable[A, B]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup.html","n":"Stable","t":"val Stable: Stable[A]","d":"scalqa/lang/short/g/companion/Lookup"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/lang/short/g/companion/Lookup$"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/short/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Mutable.html","n":"apply","t":"def apply[B](initSize: Int): Mutable[A, B]","d":"scalqa/lang/short/g/companion/Lookup$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Stable.html","n":"Stable","t":"class Stable[A <: Raw]","d":"scalqa/lang/short/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: (A, B)*): Stable[A, B]","d":"scalqa/lang/short/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Stable.html","n":"apply","t":"def apply[B](inline v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/lang/short/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/companion/Lookup$$Stable.html","n":"void","t":"def void[B]: Stable[A, B]","d":"scalqa/lang/short/g/companion/Lookup$$Stable"},
{"l":"api/scalqa/lang/short/g/companion/Opt.html","n":"Opt","t":"class Opt[A <: Raw]","d":"scalqa/lang/short/g/companion/Opt"},
{"l":"api/scalqa/lang/short/g/companion/Opt.html","n":"void","t":"def void: DEF[A]","d":"scalqa/lang/short/g/companion/Opt"},
{"l":"api/scalqa/lang/short/g/companion/Pack.html","n":"Pack","t":"class Pack[A <: Raw] extends z_Pack[A, Pack[A]]","d":"scalqa/lang/short/g/companion/Pack"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"Pro","t":"class Pro[A <: Raw]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"Mutable","t":"type Mutable = Mutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"Mutable","t":"val Mutable: Mutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"Observable","t":"type Observable = Observable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"Observable","t":"val Observable: Observable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"ObservableMutable","t":"type ObservableMutable = ObservableMutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"ObservableMutable","t":"val ObservableMutable: ObservableMutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"M","t":"type M = Mutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"M","t":"def M: Mutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"O","t":"type O = Observable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"O","t":"def O: Observable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"OM","t":"type OM = ObservableMutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro.html","n":"OM","t":"def OM: ObservableMutable[A]","d":"scalqa/lang/short/g/companion/Pro"},
{"l":"api/scalqa/lang/short/g/companion/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/lang/short/g/companion/Pro$"},
{"l":"api/scalqa/lang/short/g/companion/Pro$$Mutable.html","n":"Mutable","t":"class Mutable[A <: Raw]","d":"scalqa/lang/short/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Pro$$Mutable.html","n":"apply","t":"def apply(v: A): Mutable[A]","d":"scalqa/lang/short/g/companion/Pro$$Mutable"},
{"l":"api/scalqa/lang/short/g/companion/Pro$$Observable.html","n":"Observable","t":"class Observable[A <: Raw]","d":"scalqa/lang/short/g/companion/Pro$$Observable"},
{"l":"api/scalqa/lang/short/g/companion/Pro$$ObservableMutable.html","n":"ObservableMutable","t":"class ObservableMutable[A <: Raw]","d":"scalqa/lang/short/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/short/g/companion/Pro$$ObservableMutable.html","n":"apply","t":"def apply(v: A): ObservableMutable[A]","d":"scalqa/lang/short/g/companion/Pro$$ObservableMutable"},
{"l":"api/scalqa/lang/short/g/companion/Set.html","n":"Set","t":"class Set[A <: Raw]","d":"scalqa/lang/short/g/companion/Set"},
{"l":"api/scalqa/lang/short/g/companion/Set.html","n":"apply","t":"def apply(inline v: A*): Set[A]","d":"scalqa/lang/short/g/companion/Set"},
{"l":"api/scalqa/lang/short/g/companion/Set.html","n":"apply","t":"def apply(inline v: Stream[A]): Set[A]","d":"scalqa/lang/short/g/companion/Set"},
{"l":"api/scalqa/lang/short/g/companion/Set.html","n":"void","t":"def void: Set[A]","d":"scalqa/lang/short/g/companion/Set"},
{"l":"api/scalqa/lang/short/g/companion/Stream.html","n":"Stream","t":"class Stream[A <: Raw]","d":"scalqa/lang/short/g/companion/Stream"},
{"l":"api/scalqa/lang/short/g/companion/Stream.html","n":"apply","t":"def apply(inline v: A): Stream[A]","d":"scalqa/lang/short/g/companion/Stream"},
{"l":"api/scalqa/lang/short/g/companion/Stream.html","n":"apply","t":"def apply(v: A*): Stream[A]","d":"scalqa/lang/short/g/companion/Stream"},
{"l":"api/scalqa/lang/short/g/companion/Stream.html","n":"void","t":"def void: Stream[A]","d":"scalqa/lang/short/g/companion/Stream"},
{"l":"api/scalqa/lang/short/opaque.html","n":"scalqa.lang.short.opaque","t":"package scalqa.lang.short.opaque","d":"scalqa/lang/short/opaque"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends OpaqueBase[A] with _methods with Short[A]","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"value_isVoid","t":"def value_isVoid(v: A): Boolean","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"value_tag","t":"def value_tag(v: A): String","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"value_doc","t":"def value_doc(v: A): Doc","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"z_VoidDef","t":"val z_VoidDef: Short[A]","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base.html","n":"toOpaque","t":"def toOpaque: THIS_OPAQUE","d":"scalqa/lang/short/opaque/Base"},
{"l":"api/scalqa/lang/short/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/short/opaque/Base$"},
{"l":"api/scalqa/lang/short/opaque/Base$$_methods.html","n":"_methods","t":"trait _methods","d":"scalqa/lang/short/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/short/opaque/Base$$_methods.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/short/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/short/opaque/Base$$_methods.html","n":"?","t":"def ?[THIS_OPAQUE <: Opaque]: DEF[THIS_OPAQUE]","d":"scalqa/lang/short/opaque/Base$$_methods"},
{"l":"api/scalqa/lang/short/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/short/opaque/Data"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Ordered","t":"type Ordered[A <: Opaque] = Ordered[A]","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Ordered","t":"def Ordered: Ordered","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Calculable","t":"type Calculable[A <: Opaque] = Calculable[A]","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Calculable","t":"def Calculable: Calculable","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Numerical","t":"type Numerical[A <: Opaque] = Numerical[A]","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$.html","n":"Numerical","t":"def Numerical: Numerical","d":"scalqa/lang/short/opaque/Data$"},
{"l":"api/scalqa/lang/short/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/short/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data.html","n":"scalqa.lang.short.opaque.data","t":"package scalqa.lang.short.opaque.data","d":"scalqa/lang/short/opaque/data"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable.html","n":"Calculable","t":"class Calculable[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/short/opaque/data/Calculable"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/short/opaque/data/Calculable"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/short/opaque/data/Calculable"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$.html","n":"Calculable","t":"object Calculable","d":"scalqa/lang/short/opaque/data/Calculable$"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$$_methods.html","n":"_methods","t":"trait _methods extends _methods","d":"scalqa/lang/short/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Calculable$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Calculable$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"Numerical","t":"class Numerical[A <: Opaque](name: String) extends Ordered[A] with _methods","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"givenSum","t":"val givenSum: Sum[A]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"givenNumeric","t":"val givenNumeric: Numeric[A]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Byte","t":"val z_CanEqual_Byte: CanEqual[A, Byte]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Short","t":"val z_CanEqual_Short: CanEqual[A, Short]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Int","t":"val z_CanEqual_Int: CanEqual[A, Int]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Long","t":"val z_CanEqual_Long: CanEqual[A, Long]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Float","t":"val z_CanEqual_Float: CanEqual[A, Float]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical.html","n":"z_CanEqual_Double","t":"val z_CanEqual_Double: CanEqual[A, Double]","d":"scalqa/lang/short/opaque/data/Numerical"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$.html","n":"Numerical","t":"object Numerical","d":"scalqa/lang/short/opaque/data/Numerical$"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"abs","t":"def abs[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"unary_-","t":"def unary_-[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"*","t":"def *[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"/","t":"def /[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"-","t":"def -[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"%","t":"def %[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | Byte | Short | Int | Long | Float | Double): Boolean","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"sign","t":"def sign[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"roundTo","t":"def roundTo[THIS_OPAQUE <: Opaque](inline unit: THIS_OPAQUE)(using inline r: Rounding): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toByte","t":"def toByte[THIS_OPAQUE <: Opaque]: Byte","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toChar","t":"def toChar[THIS_OPAQUE <: Opaque]: Char","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toShort","t":"def toShort[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toInt","t":"def toInt[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toLong","t":"def toLong[THIS_OPAQUE <: Opaque]: Long","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toFloat","t":"def toFloat[THIS_OPAQUE <: Opaque]: Float","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toDouble","t":"def toDouble[THIS_OPAQUE <: Opaque]: Double","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Numerical$$_methods.html","n":"toNumber","t":"def toNumber[THIS_OPAQUE <: Opaque]: Short","d":"scalqa/lang/short/opaque/data/Numerical$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered.html","n":"Ordered","t":"class Ordered[A <: Opaque](name: String) extends Data[A] with _methods","d":"scalqa/lang/short/opaque/data/Ordered"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/short/opaque/data/Ordered"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$.html","n":"Ordered","t":"object Ordered","d":"scalqa/lang/short/opaque/data/Ordered$"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$_methods.html","n":"_methods","t":"trait _methods extends _methods with z_MethodsBase","d":"scalqa/lang/short/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$_methods.html","n":"<","t":"def <[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/short/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$_methods.html","n":"<=","t":"def <=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/short/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$_methods.html","n":">","t":"def >[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/short/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$_methods.html","n":">=","t":"def >=[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Boolean","d":"scalqa/lang/short/opaque/data/Ordered$$_methods"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"z_MethodsBase","t":"trait z_MethodsBase","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"<>","t":"def <>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"<>>","t":"def <>>[THIS_OPAQUE <: Opaque](inline to: THIS_OPAQUE): Range[THIS_OPAQUE]","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"<>=","t":"def <>=[THIS_OPAQUE <: Opaque](inline sz: Int): Range[THIS_OPAQUE]","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"max","t":"def max[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase.html","n":"min","t":"def min[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): THIS_OPAQUE","d":"scalqa/lang/short/opaque/data/Ordered$$z_MethodsBase"},
{"l":"api/scalqa/lang/string.html","n":"scalqa.lang.string","t":"package scalqa.lang.string","d":"scalqa/lang/string"},
{"l":"api/scalqa/lang/string.html","n":"Opaque","t":"type Opaque = DEF","d":"scalqa/lang/string"},
{"l":"api/scalqa/lang/string/_Methods.html","n":"_Methods","t":"trait _Methods extends _evaluate with _modify with _copy with _transform","d":"scalqa/lang/string/_Methods"},
{"l":"api/scalqa/lang/string/_Methods$.html","n":"_Methods","t":"object _Methods","d":"scalqa/lang/string/_Methods$"},
{"l":"api/scalqa/lang/string/_Methods$.html","n":"_evaluate","t":"type _evaluate = _evaluate","d":"scalqa/lang/string/_Methods$"},
{"l":"api/scalqa/lang/string/_Methods$.html","n":"_modify","t":"type _modify = _modify","d":"scalqa/lang/string/_Methods$"},
{"l":"api/scalqa/lang/string/_Methods$.html","n":"_copy","t":"type _copy = _copy","d":"scalqa/lang/string/_Methods$"},
{"l":"api/scalqa/lang/string/_Methods$.html","n":"_transform","t":"type _transform = _transform","d":"scalqa/lang/string/_Methods$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"Builder","t":"object Builder extends Base[Builder, StringBuilder]","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"apply","t":"def apply(): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"apply","t":"def apply(inline capacity: Int): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"+=","t":"def +=(inline v: A)(using inline tg: Doc[A]): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"+@=","t":"def +@=(inline off: Int, inline v: A)(using inline tg: Doc[A]): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"charAt","t":"def charAt(inline i: Int): Char","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"size","t":"def size: Int","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"removeRange","t":"def removeRange(v: Range): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"removeAt","t":"def removeAt(inline v: Int): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"tag","t":"def tag: String","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"add","t":"def add(inline w: A)(using inline tg: Tag[A]): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder$.html","n":"addAt","t":"def addAt(inline off: Int, inline w: A)(using inline tg: Tag[A]): Builder","d":"scalqa/lang/string/Builder$"},
{"l":"api/scalqa/lang/string/Builder.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/string/Builder$$TYPE$"},
{"l":"api/scalqa/lang/string/Builder.html","n":"DEF","t":"type DEF","d":"scalqa/lang/string/Builder$$TYPE$"},
{"l":"api/scalqa/lang/string/Opaque$.html","n":"Opaque","t":"object Opaque","d":"scalqa/lang/string/Opaque$"},
{"l":"api/scalqa/lang/string/Opaque$.html","n":"Base","t":"type Base[A <: Opaque] = Base[A]","d":"scalqa/lang/string/Opaque$"},
{"l":"api/scalqa/lang/string/Opaque$.html","n":"Base","t":"def Base: Base","d":"scalqa/lang/string/Opaque$"},
{"l":"api/scalqa/lang/string/Opaque$.html","n":"Data","t":"type Data[A <: Opaque] = Data[A]","d":"scalqa/lang/string/Opaque$"},
{"l":"api/scalqa/lang/string/Opaque$.html","n":"Data","t":"def Data: Data","d":"scalqa/lang/string/Opaque$"},
{"l":"api/scalqa/lang/string/Opaque.html","n":"TYPE","t":"object TYPE","d":"scalqa/lang/string/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/string/Opaque.html","n":"DEF","t":"type DEF","d":"scalqa/lang/string/Opaque$$TYPE$"},
{"l":"api/scalqa/lang/string/_methods.html","n":"scalqa.lang.string._methods","t":"package scalqa.lang.string._methods","d":"scalqa/lang/string/_methods"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"_copy","t":"trait _copy","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeBefore","t":"def takeBefore(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeBeforeLast","t":"def takeBeforeLast(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeFrom","t":"def takeFrom(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeFromLast","t":"def takeFromLast(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeAfter","t":"def takeAfter(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeAfterLast","t":"def takeAfterLast(inline v: String, inline dflt: DEF[String], inline fromPosition: Opt): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeRange","t":"def takeRange(start: Int, inline size: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeRange","t":"def takeRange(r: Range): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeFirst","t":"def takeFirst(inline cnt: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"dropFirst","t":"def dropFirst(inline cnt: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"takeLast","t":"def takeLast(inline cnt: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"dropRange","t":"def dropRange(start: Int, inline size: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"dropRange","t":"def dropRange(i: Range): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_copy.html","n":"dropLast","t":"def dropLast(inline cnt: Int): String","d":"scalqa/lang/string/_methods/_copy"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"_evaluate","t":"trait _evaluate","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"length","t":"def length: Int","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"contains","t":"def contains(inline v: String): Boolean","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"startsWith","t":"def startsWith(inline v: String): Boolean","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"endsWith","t":"def endsWith(inline v: String): Boolean","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"equalsIgnoreCase","t":"def equalsIgnoreCase(inline v: String): Boolean","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"compareTo","t":"def compareTo(inline v: String): Int","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"charAt","t":"def charAt(inline i: Int): Char","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"charAtOpt","t":"def charAtOpt(i: Int): Opt","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"indexOfOpt","t":"def indexOfOpt(inline v: String, inline from: Opt): Opt","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"indexOfStream","t":"def indexOfStream(inline v: String, inline from: Opt): Stream","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"lastIndexOfOpt","t":"def lastIndexOfOpt(inline v: String, inline from: Opt): Opt","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"charIndexOpt","t":"def charIndexOpt(inline f: Char => Boolean, inline from: Opt): Opt","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_evaluate.html","n":"lastCharIndexOpt","t":"def lastCharIndexOpt(inline f: Char => Boolean, inline from: Opt): Opt","d":"scalqa/lang/string/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"_modify","t":"trait _modify","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"++","t":"def ++(inline v: A)(using inline d: Tag[A]): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"+?","t":"def +?(inline v: DEF[A])(using inline d: Tag[A]): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"padStartTo","t":"def padStartTo(inline size: Int, inline pad: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"padEndTo","t":"def padEndTo(inline size: Int, inline pad: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"label","t":"def label: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"replace","t":"def replace(inline r: Range, inline v: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"replace","t":"def replace(inline v: String, inline target: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"replaceFirst","t":"def replaceFirst(inline v: String, inline v2: String, inline cnt: Int): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"replaceLast","t":"def replaceLast(inline v: String, inline v2: String, inline cnt: Int): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"insertAt","t":"def insertAt(inline i: Int, inline v: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"remove","t":"def remove(inline v: String): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"lower","t":"def lower: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"upper","t":"def upper: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trimStart","t":"def trimStart: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trimStart","t":"def trimStart(inline f: Char => Boolean): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trimEnd","t":"def trimEnd: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trimEnd","t":"def trimEnd(inline f: Char => Boolean): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trim","t":"def trim: String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_modify.html","n":"trimBoth","t":"def trimBoth(inline f: Char => Boolean): String","d":"scalqa/lang/string/_methods/_modify"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"_transform","t":"trait _transform","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"charStream","t":"def charStream: Stream","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"splitStream","t":"def splitStream(inline sep: Char, more: Char*): Stream[String]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"lineStream","t":"def lineStream: Stream[String]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"indent","t":"def indent(inline tag: String): String","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"tokenizedStream","t":"def tokenizedStream(inline separators: Stream[String]): Stream[(String, Range, String)]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toDoubleOpt","t":"def toDoubleOpt: Opt","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toDoubleResult","t":"def toDoubleResult: DEF[Double]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toIntOpt","t":"def toIntOpt: Opt","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toIntResult","t":"def toIntResult: DEF[Int]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toLongOpt","t":"def toLongOpt: Opt","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toLongResult","t":"def toLongResult: DEF[Long]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toBooleanOpt","t":"def toBooleanOpt: Opt","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"toBooleanResult","t":"def toBooleanResult: DEF[Boolean]","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/_methods/_transform.html","n":"Problem","t":"def Problem: Problem","d":"scalqa/lang/string/_methods/_transform"},
{"l":"api/scalqa/lang/string/opaque.html","n":"scalqa.lang.string.opaque","t":"package scalqa.lang.string.opaque","d":"scalqa/lang/string/opaque"},
{"l":"api/scalqa/lang/string/opaque/Base.html","n":"Base","t":"class Base[A <: Opaque](name: String) extends Base[A, String] with _Methods","d":"scalqa/lang/string/opaque/Base"},
{"l":"api/scalqa/lang/string/opaque/Base.html","n":"ordering","t":"val ordering: Ordering[A]","d":"scalqa/lang/string/opaque/Base"},
{"l":"api/scalqa/lang/string/opaque/Base.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): A","d":"scalqa/lang/string/opaque/Base"},
{"l":"api/scalqa/lang/string/opaque/Base.html","n":"z_CanEqualString","t":"val z_CanEqualString: CanEqual[A, String]","d":"scalqa/lang/string/opaque/Base"},
{"l":"api/scalqa/lang/string/opaque/Base.html","n":"real","t":"def real[THIS_OPAQUE <: Opaque]: String","d":"scalqa/lang/string/opaque/Base"},
{"l":"api/scalqa/lang/string/opaque/Base$.html","n":"Base","t":"object Base","d":"scalqa/lang/string/opaque/Base$"},
{"l":"api/scalqa/lang/string/opaque/Base$.html","n":"_methods","t":"type _methods = _Methods","d":"scalqa/lang/string/opaque/Base$"},
{"l":"api/scalqa/lang/string/opaque/Data.html","n":"Data","t":"class Data[A <: Opaque](name: String) extends Base[A] with _methods with Containers[A]","d":"scalqa/lang/string/opaque/Data"},
{"l":"api/scalqa/lang/string/opaque/Data$.html","n":"Data","t":"object Data","d":"scalqa/lang/string/opaque/Data$"},
{"l":"api/scalqa/lang/string/opaque/Data$$_methods.html","n":"_methods","t":"trait _methods extends _evaluate with _modify with _copy","d":"scalqa/lang/string/opaque/Data$$_methods"},
{"l":"api/scalqa/lang/string/opaque/Data$$_methods$.html","n":"_methods","t":"object _methods","d":"scalqa/lang/string/opaque/Data$$_methods$"},
{"l":"api/scalqa/lang/string/opaque/Data$$_methods$$_evaluate.html","n":"_evaluate","t":"trait _evaluate extends _evaluate","d":"scalqa/lang/string/opaque/Data$$_methods$$_evaluate"},
{"l":"api/scalqa/lang/string/opaque/Data$$_methods$$_modify.html","n":"_modify","t":"trait _modify extends _modify","d":"scalqa/lang/string/opaque/Data$$_methods$$_modify"},
{"l":"api/scalqa/lang/string/opaque/Data$$_methods$$_copy.html","n":"_copy","t":"trait _copy extends _copy","d":"scalqa/lang/string/opaque/Data$$_methods$$_copy"},
{"l":"api/scalqa/lang/string/opaque/base.html","n":"scalqa.lang.string.opaque.base","t":"package scalqa.lang.string.opaque.base","d":"scalqa/lang/string/opaque/base"},
{"l":"api/scalqa/lang/string/opaque/base/_Methods.html","n":"_Methods","t":"trait _Methods extends _evaluate with _modify with _copy","d":"scalqa/lang/string/opaque/base/_Methods"},
{"l":"api/scalqa/lang/string/opaque/base/_Methods$.html","n":"_Methods","t":"object _Methods","d":"scalqa/lang/string/opaque/base/_Methods$"},
{"l":"api/scalqa/lang/string/opaque/base/_Methods$.html","n":"_evaluate","t":"type _evaluate = _evaluate","d":"scalqa/lang/string/opaque/base/_Methods$"},
{"l":"api/scalqa/lang/string/opaque/base/_Methods$.html","n":"_modify","t":"type _modify = _modify","d":"scalqa/lang/string/opaque/base/_Methods$"},
{"l":"api/scalqa/lang/string/opaque/base/_Methods$.html","n":"_copy","t":"type _copy = _copy","d":"scalqa/lang/string/opaque/base/_Methods$"},
{"l":"api/scalqa/lang/string/opaque/base/_methods.html","n":"scalqa.lang.string.opaque.base._methods","t":"package scalqa.lang.string.opaque.base._methods","d":"scalqa/lang/string/opaque/base/_methods"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"_copy","t":"trait _copy","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeBefore","t":"def takeBefore[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeBeforeLast","t":"def takeBeforeLast[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeFrom","t":"def takeFrom[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeFromLast","t":"def takeFromLast[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeAfter","t":"def takeAfter[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeAfterLast","t":"def takeAfterLast[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline dflt: DEF[THIS_OPAQUE], inline from: Opt): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeRange","t":"def takeRange[THIS_OPAQUE <: Opaque](start: Int, inline size: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeRange","t":"def takeRange[THIS_OPAQUE <: Opaque](r: Range): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeFirst","t":"def takeFirst[THIS_OPAQUE <: Opaque](inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"dropFirst","t":"def dropFirst[THIS_OPAQUE <: Opaque](inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"takeLast","t":"def takeLast[THIS_OPAQUE <: Opaque](inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"dropRange","t":"def dropRange[THIS_OPAQUE <: Opaque](start: Int, inline size: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"dropRange","t":"def dropRange[THIS_OPAQUE <: Opaque](r: Range): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_copy.html","n":"dropLast","t":"def dropLast[THIS_OPAQUE <: Opaque](inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_copy"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"_evaluate","t":"trait _evaluate","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"length","t":"def length[THIS_OPAQUE <: Opaque]: Int","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"contains","t":"def contains[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): Boolean","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"startsWith","t":"def startsWith[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): Boolean","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"endsWith","t":"def endsWith[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): Boolean","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"equalsIgnoreCase","t":"def equalsIgnoreCase[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): Boolean","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"compareTo","t":"def compareTo[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE): Int","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"charAt","t":"def charAt[THIS_OPAQUE <: Opaque](inline i: Int): Char","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"charAtOpt","t":"def charAtOpt[THIS_OPAQUE <: Opaque](i: Int): Opt","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"indexOfOpt","t":"def indexOfOpt[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline from: Opt): Opt","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"indexOfStream","t":"def indexOfStream[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline from: Opt): Stream","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"lastIndexOfOpt","t":"def lastIndexOfOpt[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline from: Opt): Opt","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"charIndexOpt","t":"def charIndexOpt[THIS_OPAQUE <: Opaque](inline f: Char => Boolean, inline from: Opt): Opt","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_evaluate.html","n":"lastCharIndexOpt","t":"def lastCharIndexOpt[THIS_OPAQUE <: Opaque](inline f: Char => Boolean, inline from: Opt): Opt","d":"scalqa/lang/string/opaque/base/_methods/_evaluate"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"_modify","t":"trait _modify","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"+","t":"def +[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"+?","t":"def +?[THIS_OPAQUE <: Opaque](inline v: DEF[THIS_OPAQUE | String])(using inline d: Tag[A]): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"padStartTo","t":"def padStartTo[THIS_OPAQUE <: Opaque](inline size: Int, inline pad: String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"padEndTo","t":"def padEndTo[THIS_OPAQUE <: Opaque](inline size: Int, inline pad: String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"label","t":"def label[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"replace","t":"def replace[THIS_OPAQUE <: Opaque](inline r: Range, inline v: THIS_OPAQUE | String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"replace","t":"def replace[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline target: THIS_OPAQUE | String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"replaceFirst","t":"def replaceFirst[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline v2: THIS_OPAQUE | String, inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"replaceLast","t":"def replaceLast[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String, inline v2: THIS_OPAQUE | String, inline cnt: Int): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"insertAt","t":"def insertAt[THIS_OPAQUE <: Opaque](inline i: Int, inline v: THIS_OPAQUE | String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"remove","t":"def remove[THIS_OPAQUE <: Opaque](inline v: THIS_OPAQUE | String): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"lower","t":"def lower[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"upper","t":"def upper[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trimStart","t":"def trimStart[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trimStart","t":"def trimStart[THIS_OPAQUE <: Opaque](inline f: Char => Boolean): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trimEnd","t":"def trimEnd[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trimEnd","t":"def trimEnd[THIS_OPAQUE <: Opaque](inline f: Char => Boolean): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trim","t":"def trim[THIS_OPAQUE <: Opaque]: THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/lang/string/opaque/base/_methods/_modify.html","n":"trimBoth","t":"def trimBoth[THIS_OPAQUE <: Opaque](inline f: Char => Boolean): THIS_OPAQUE","d":"scalqa/lang/string/opaque/base/_methods/_modify"},
{"l":"api/scalqa/val.html","n":"scalqa.val","t":"package scalqa.val","d":"scalqa/val"},
{"l":"api/scalqa/val/Buffer.html","n":"Buffer","t":"class Buffer[A] extends Mutable[A] with Contain[A]","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer.html","n":"pack","t":"def pack: Pack[A]","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer.html","n":"removeRange","t":"def removeRange(v: Range): Unit","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer.html","n":"foreach","t":"def foreach[U](inline f: A => U): Unit","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer.html","n":"addArray_trusted","t":"def addArray_trusted(a: Array[A], start: Int, len: Int): Unit","d":"scalqa/val/Buffer"},
{"l":"api/scalqa/val/Buffer$.html","n":"Buffer","t":"object Buffer","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$.html","n":"apply","t":"def apply[A](): Buffer[A]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$.html","n":"apply","t":"def apply[A](inline initSize: Int): Buffer[A]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$.html","n":"apply","t":"def apply[A](inline a: Array[A], inline s: Int): Buffer[A]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$.html","n":"implicitRequest","t":"def implicitRequest[A](v: NEW): Buffer[A]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"z_Doc","t":"given z_Doc[A](using val t: Doc[A]): Doc[Buffer[A]]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"t","t":"val t: Doc[A]","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"value_tag","t":"def value_tag(v: Buffer[A]): String","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"value_doc","t":"def value_doc(v: Buffer[A]): Doc","d":"scalqa/val/Buffer$"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"z_Doc","t":"given z_Doc[A](using val t: Doc[A]): Doc[Buffer[A]]","d":"scalqa/val/Buffer$$z_Doc"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"t","t":"val t: Doc[A]","d":"scalqa/val/Buffer$$z_Doc"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"value_tag","t":"def value_tag(v: Buffer[A]): String","d":"scalqa/val/Buffer$$z_Doc"},
{"l":"api/scalqa/val/Buffer$$z_Doc.html","n":"value_doc","t":"def value_doc(v: Buffer[A]): Doc","d":"scalqa/val/Buffer$$z_Doc"},
{"l":"api/scalqa/val/Collection.html","n":"Collection","t":"trait Collection[+A] extends Stream[A] with Size","d":"scalqa/val/Collection"},
{"l":"api/scalqa/val/Collection.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/val/Collection"},
{"l":"api/scalqa/val/Collection.html","n":"size","t":"def size: Int","d":"scalqa/val/Collection"},
{"l":"api/scalqa/val/Collection$.html","n":"Collection","t":"object Collection","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"apply","t":"def apply[A](v: A): Collection[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"apply","t":"def apply[A](v1: A, v2: A): Collection[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"apply","t":"def apply[A](v1: A, v2: A, v3: A, vs: A*): Collection[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"void","t":"def void[A]: Collection[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"unapplySeq","t":"def unapplySeq[A](v: Collection[A]): Option[Seq[A]]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Collection[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"contains","t":"def contains[A](inline v: A): Boolean","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"withFilter","t":"def withFilter[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"mapView","t":"def mapView[A](inline f: A => B): Collection[B]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"map","t":"def map[A](inline f: A => B): Stream[B]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"flatMap","t":"def flatMap[A](inline f: A => Stream[B]): Stream[B]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"foreach","t":"def foreach[A](inline f: A => U): Unit","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"Mutable","t":"type Mutable[A] = Mutable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"Mutable","t":"def Mutable: Mutable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"Observable","t":"type Observable[A] = Observable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"Observable","t":"def Observable: Observable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"ObservableMutable","t":"type ObservableMutable[A] = ObservableMutable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"ObservableMutable","t":"def ObservableMutable: ObservableMutable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"M","t":"type M[A] = Mutable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"M","t":"def M: Mutable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"O","t":"type O[A] = Observable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"O","t":"def O: Observable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"OM","t":"type OM[A] = ObservableMutable[A]","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Collection$.html","n":"OM","t":"def OM: ObservableMutable","d":"scalqa/val/Collection$"},
{"l":"api/scalqa/val/Idx.html","n":"Idx","t":"trait Idx[+A] extends Collection[A]","d":"scalqa/val/Idx"},
{"l":"api/scalqa/val/Idx.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/val/Idx"},
{"l":"api/scalqa/val/Idx.html","n":"size","t":"def size: Int","d":"scalqa/val/Idx"},
{"l":"api/scalqa/val/Idx.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/val/Idx"},
{"l":"api/scalqa/val/Idx$.html","n":"Idx","t":"object Idx","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"apply","t":"def apply[A](v: A): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"apply","t":"def apply[A](v1: A, v2: A): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"apply","t":"def apply[A](v1: A, v2: A, v3: A, vs: A*): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"wrap","t":"def wrap[A](v: List[A]): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"void","t":"def void[A]: Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"unapplySeq","t":"def unapplySeq[A](v: Idx[A]): Option[Seq[A]]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"applyOpt","t":"def applyOpt[A](position: Int): DEF[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"contains","t":"def contains[A](v: A): Boolean","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"head","t":"def head[A]: A","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"headOpt","t":"def headOpt[A]: DEF[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"tail","t":"def tail[A]: Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"last","t":"def last[A]: A","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"lastOpt","t":"def lastOpt[A]: DEF[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"rangeView","t":"def rangeView[A](r: Range): Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"reversedView","t":"def reversedView[A]: Idx[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"mapView","t":"def mapView[A](f: A => B): Idx[B]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"toJavaListView","t":"def toJavaListView[A]: List[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"toProductView","t":"def toProductView[A]: Product","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"toSeqView","t":"def toSeqView[A]: IndexedSeq[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"orderedContains","t":"def orderedContains[A](v: A)(using Ordering[A]): Boolean","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"orderedSearch","t":"def orderedSearch[A](v: A, max: Int)(using Ordering[A]): Range","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"orderedSearchBy","t":"def orderedSearchBy[A](map: A => B, v: B, max: Int, extraFilter: A => Boolean)(using Ordering[B]): Range","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Mutable","t":"def Mutable: Mutable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Mutable","t":"type Mutable[A] = Mutable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"M","t":"def M: Mutable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"M","t":"type M[A] = Mutable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Observable","t":"def Observable: Observable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Observable","t":"type Observable[A] = Observable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"O","t":"def O: Observable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"O","t":"type O[A] = Observable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"ObservableMutable","t":"def ObservableMutable: ObservableMutable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"ObservableMutable","t":"type ObservableMutable[A] = ObservableMutable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"OM","t":"def OM: ObservableMutable","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"OM","t":"type OM[A] = ObservableMutable[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Selection","t":"def Selection: Selection","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Selection","t":"type Selection[A] = Selection[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Event","t":"def Event: Event","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Event","t":"type Event[A] = Event[A]","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Permutation","t":"def Permutation: Permutation","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"Permutation","t":"type Permutation = Permutation","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Idx$.html","n":"X","t":"def X: X","d":"scalqa/val/Idx$"},
{"l":"api/scalqa/val/Lookup.html","n":"Lookup","t":"trait Lookup[A, +B] extends Collection[B]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"getStream","t":"def getStream(keys: Stream[A]): Stream[B]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"get","t":"def get(v: A): B","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"keyStream","t":"def keyStream: Stream[A]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup.html","n":"stream","t":"def stream: Stream[B]","d":"scalqa/val/Lookup"},
{"l":"api/scalqa/val/Lookup$.html","n":"Lookup","t":"object Lookup","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"lazySource","t":"def lazySource[A, B](createFunOpt: A => DEF[B]): Lookup[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"apply","t":"def apply[A, B](v: Stream[(A, B)]): Lookup[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"apply","t":"def apply[A, B](vs: (A, B)*): Lookup[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"void","t":"def void[A, B]: Lookup[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"implicitRequest","t":"def implicitRequest[A, B](v: VOID): Lookup[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"mapView","t":"def mapView[A, B](f: B => C): Lookup[A, C]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"toMapView","t":"def toMapView[A, B]: Map[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"toPartialFunctionView","t":"def toPartialFunctionView[A, B]: PartialFunction[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"Stable","t":"def Stable: Stable","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"Stable","t":"type Stable[A, B] = Stable[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"Mutable","t":"def Mutable: Mutable","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"Mutable","t":"type Mutable[A, B] = Mutable[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"M","t":"def M: Mutable","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Lookup$.html","n":"M","t":"type M[A, B] = Mutable[A, B]","d":"scalqa/val/Lookup$"},
{"l":"api/scalqa/val/Opt$.html","n":"Opt","t":"object Opt extends z_ValOptDefailts","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"apply","t":"def apply[A](v: A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"fromScala","t":"def fromScala[A](v: Option[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"fromJava","t":"def fromJava[A](v: Optional[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"void","t":"def void[A]: DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"unapply","t":"def unapply[A](inline v: DEF[A]): Option[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"isEmpty","t":"def isEmpty[A]: Boolean","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"nonEmpty","t":"def nonEmpty[A]: Boolean","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"take","t":"def take[A](inline f: A => Boolean): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"takeOnly","t":"def takeOnly[A](inline v: A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"takeType","t":"def takeType[A](using inline t: ClassTag[B]): DEF[B]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"drop","t":"def drop[A](inline f: A => Boolean): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"dropOnly","t":"def dropOnly[A](inline v: A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"dropVoid","t":"def dropVoid[A](using inline d: Void[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"default","t":"def default[A](inline dv: => A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"contains","t":"def contains[A](value: A): Boolean","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"foldAs","t":"def foldAs[A](inline v: => B)(inline f: A => B): B","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"or","t":"def or[A](inline default: => A): A","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"orOpt","t":"def orOpt[A](inline that: => DEF[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"forval","t":"def forval[A](inline f: A => U): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"foreach","t":"def foreach[A](inline f: A => U): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"fornil","t":"def fornil[A](inline f: => U): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"process","t":"def process[A](inline f: A => U, inline fNil: => W): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"filter","t":"def filter[A](inline f: A => Boolean): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"withFilter","t":"def withFilter[A](inline f: A => Boolean): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"collect","t":"def collect[A](inline f: PartialFunction[A, B]): DEF[B]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"get","t":"def get[A]: A","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"toScala","t":"def toScala[A]: Option[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"toJava","t":"def toJava[A]: Optional[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"mapIf","t":"def mapIf[A](inline f: A => Boolean, inline m: A => A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"map","t":"def map[A](inline f: A => B)(using inline B: Specialized[B]): Opt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"mapOpt","t":"def mapOpt[A](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"flatMap","t":"def flatMap[A](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Opt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"mix","t":"def mix[A](inline o: Opt[B], inline f: (A, B) => C)(using inline C: Specialized[C]): Opt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"raw","t":"def raw[A](using inline A: Primitive[A]): Opt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitFromAny","t":"def implicitFromAny[A](inline v: A): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitFromScala","t":"def implicitFromScala[A](inline v: Option[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitFromJava","t":"def implicitFromJava[A](inline v: Optional[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitFromResult","t":"def implicitFromResult[A](inline v: DEF[A]): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): DEF[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A](inline v: DEF[A]): Boolean","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_CanEqualOpt","t":"given z_CanEqualOpt","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_ClassTag","t":"given z_ClassTag","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_VoidDef","t":"given z_VoidDef","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_GivenAnyOfAnyOpt","t":"given z_GivenAnyOfAnyOpt: DEF[A[B]]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt$.html","n":"z_GivenAnyDefEmptyOpt","t":"given z_GivenAnyDefEmptyOpt: DEF[Empty[A]]","d":"scalqa/val/Opt$"},
{"l":"api/scalqa/val/Opt.html","n":"TYPE","t":"object TYPE","d":"scalqa/val/Opt$$TYPE$"},
{"l":"api/scalqa/val/Opt.html","n":"DEF","t":"type DEF[+A]","d":"scalqa/val/Opt$$TYPE$"},
{"l":"api/scalqa/val/Pack.html","n":"Pack","t":"class Pack[A] extends Idx[A]","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"THIS_TYPE","t":"type THIS_TYPE <: Pack[A]","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"joinAll","t":"def joinAll(v: Stream[A]): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"joinAt","t":"def joinAt(i: Int, v: A): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"joinAllAt","t":"def joinAllAt(i: Int, v: Stream[A]): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"+","t":"def +(inline v: A): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"++","t":"def ++(inline v: Stream[A]): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"+@","t":"def +@(inline i: Int, inline v: A): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"++@","t":"def ++@(inline i: Int, inline v: Stream[A]): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"takeFirst","t":"def takeFirst(cnt: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"takeLast","t":"def takeLast(cnt: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"takeRange","t":"def takeRange(from: Int, size: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"takeRange","t":"def takeRange(r: Range): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"dropFirst","t":"def dropFirst(cnt: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"dropLast","t":"def dropLast(cnt: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"dropRange","t":"def dropRange(from: Int, size: Int): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"dropRange","t":"def dropRange(r: Range): THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"toBuffer","t":"def toBuffer: Buffer[A]","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"raw","t":"def raw(using inline A: Primitive[A]): Pack","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"pack","t":"def pack: THIS_TYPE","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"foreach","t":"def foreach[U](inline f: A => U): Unit","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack.html","n":"z_foreach","t":"def z_foreach[U](f: A => U): Unit","d":"scalqa/val/Pack"},
{"l":"api/scalqa/val/Pack$.html","n":"Pack","t":"object Pack","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"apply","t":"def apply[A](v: A): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"apply","t":"def apply[A](v1: A, v2: A): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"apply","t":"def apply[A](v1: A, v2: A, v3: A, vs: A*): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"void","t":"def void[A]: Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"fromArray","t":"def fromArray[A](a: Array[AnyRef]): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"fromArray","t":"def fromArray[A](a: Array[AnyRef], sz: Int): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"unapplySeq","t":"def unapplySeq[A](v: Pack[A]): Option[Seq[A]]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pack$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Pack[A]","d":"scalqa/val/Pack$"},
{"l":"api/scalqa/val/Pro.html","n":"Pro","t":"trait Pro[+A]","d":"scalqa/val/Pro"},
{"l":"api/scalqa/val/Pro.html","n":"apply","t":"def apply(): A","d":"scalqa/val/Pro"},
{"l":"api/scalqa/val/Pro$.html","n":"Pro","t":"object Pro","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"apply","t":"def apply[A](source: => A): Pro[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"unapply","t":"def unapply[A](v: Pro[A]): Option[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"implicitToFunction","t":"def implicitToFunction[A](v: Pro[A]): () => A","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"mapView","t":"def mapView[A](f: A => B): Pro[B]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"observableView","t":"def observableView[A](v1: Observable, v2: DEF[Observable]): Observable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"contains","t":"def contains[A](inline v: A): Boolean","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"Mutable","t":"def Mutable: Mutable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"Mutable","t":"type Mutable[A] = Mutable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"M","t":"def M: Mutable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"M","t":"type M[A] = Mutable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"Observable","t":"def Observable: Observable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"Observable","t":"type Observable[A] = Observable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"O","t":"def O: Observable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"O","t":"type O[A] = Observable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"ObservableMutable","t":"def ObservableMutable: ObservableMutable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"ObservableMutable","t":"type ObservableMutable[A] = ObservableMutable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"OM","t":"def OM: ObservableMutable","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"OM","t":"type OM[A] = ObservableMutable[A]","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Pro$.html","n":"X","t":"def X: X","d":"scalqa/val/Pro$"},
{"l":"api/scalqa/val/Promise.html","n":"Promise","t":"trait Promise[+A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"resultOpt","t":"def resultOpt: DEF[DEF[A]]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"take","t":"def take(f: A => Boolean, p: A => Problem)(using c: Context): Promise[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"drop","t":"def drop(f: A => Boolean, p: A => Problem)(using c: Context): Promise[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"map","t":"def map[B](f: A => B)(using c: Context): Promise[B]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"mapResult","t":"def mapResult[B](f: A => DEF[B])(using c: Context): Promise[B]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"mapWith","t":"def mapWith[B](f: A => Promise[B])(using c: Context): Promise[B]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"mapAll","t":"def mapAll[B](f: DEF[A] => DEF[B])(using c: Context): Promise[B]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"zip","t":"def zip[B](v: Promise[B])(using c: Context): Promise[(A, B)]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"onResult","t":"def onResult[U](f: DEF[A] => U)(using c: Context): Unit","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"forval","t":"def forval[U](f: A => U)(using c: Context): Promise[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"fornil","t":"def fornil[U](p: Problem => U)(using c: Context): Promise[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"process","t":"def process[U, W](f: A => U, p: Problem => W)(using c: Context): Promise[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise.html","n":"await","t":"def await(v: Length)(using c: Context): DEF[A]","d":"scalqa/val/Promise"},
{"l":"api/scalqa/val/Promise$.html","n":"Promise","t":"object Promise","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"apply","t":"def apply[A](calc: => A)(using c: Context): Promise[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"ready","t":"def ready[A](v: A | Problem): Promise[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"unapply","t":"def unapply[A](v: Promise[A]): Option[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"withFilter","t":"def withFilter[A](inline f: A => Boolean)(using inline c: Context): Promise[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"flatMap","t":"def flatMap[A](f: A => Promise[B])(using inline c: Context): Promise[B]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"foreach","t":"def foreach[A](inline f: A => U)(using inline c: Context): Unit","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"z_TagDef","t":"given z_TagDef[A](using val t: Tag[A]): Tag[Promise[A]]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"t","t":"val t: Tag[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"value_tag","t":"def value_tag(v: Promise[A]): String","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"z_CanEqualPromise","t":"given z_CanEqualPromise","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"Control","t":"def Control: Control","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"Control","t":"type Control[A] = Control[A]","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"Context","t":"def Context: Context","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$.html","n":"Context","t":"type Context = DEF","d":"scalqa/val/Promise$"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"z_TagDef","t":"given z_TagDef[A](using val t: Tag[A]): Tag[Promise[A]]","d":"scalqa/val/Promise$$z_TagDef"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"t","t":"val t: Tag[A]","d":"scalqa/val/Promise$$z_TagDef"},
{"l":"api/scalqa/val/Promise$$z_TagDef.html","n":"value_tag","t":"def value_tag(v: Promise[A]): String","d":"scalqa/val/Promise$$z_TagDef"},
{"l":"api/scalqa/val/Range.html","n":"Range","t":"class Range[A] extends Contain[A] with Empty","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"THIS_TYPE","t":"type THIS_TYPE <: Range[A]","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"start","t":"def start: A","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"end","t":"def end: A","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"endIsIn","t":"def endIsIn: Boolean","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"ordering","t":"def ordering: Ordering[A]","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"join","t":"def join(v: Range[A]): THIS_TYPE","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"overlaps","t":"def overlaps(r: Range[A]): Boolean","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"overlapOpt","t":"def overlapOpt(r: Range[A]): DEF[THIS_TYPE]","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"streamStep","t":"def streamStep(f: A => A): Stream[A]","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"streamStep","t":"def streamStep(step: Int)(using Sequence[A]): Stream[A]","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"contains","t":"def contains(v: Range[A]): Boolean","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range.html","n":"raw","t":"def raw(using inline A: Primitive[A]): Range","d":"scalqa/val/Range"},
{"l":"api/scalqa/val/Range$.html","n":"Range","t":"object Range","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"apply","t":"def apply[A](start: A, end: A, endIn: Boolean)(using Ordering[A]): Range[A]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"singleValue","t":"def singleValue[A](v: A, endIn: Boolean)(using Ordering[A]): Range[A]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"stream","t":"def stream[A](using Sequence[A]): Stream[A]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"convert","t":"def convert[A](f: A => B)(using s: Ordering[B]): Range[B]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"withFilter","t":"def withFilter[A](inline f: A => Boolean)(using inline s: Sequence[A]): Stream[A]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"map","t":"def map[A](inline f: A => B)(using inline s: Sequence[A]): Stream[B]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"flatMap","t":"def flatMap[A](inline f: A => Stream[B])(using inline s: Sequence[A]): Stream[B]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"foreach","t":"def foreach[A](inline f: A => U)(using inline s: Sequence[A]): Unit","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"z_CanEqualRange","t":"given z_CanEqualRange","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Range$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/val/Range$"},
{"l":"api/scalqa/val/Result$.html","n":"Result","t":"object Result","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"apply","t":"def apply[A](inline v: A | Problem): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"fail","t":"def fail[A](message: String): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"implicitFromAny","t":"def implicitFromAny[A](inline v: A): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"implicitFromProblem","t":"def implicitFromProblem[A](inline v: Problem): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"implicitToBoolean","t":"def implicitToBoolean[A](inline v: DEF[A]): Boolean","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"unapply","t":"def unapply[A](v: DEF[A]): Option[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"take","t":"def take[A](inline f: A => Boolean, inline p: A => Problem): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"drop","t":"def drop[A](inline f: A => Boolean, inline p: A => Problem): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"recover","t":"def recover[A](inline f: Problem => DEF[A]): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"orResult","t":"def orResult[A](inline default: => DEF[A]): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"or","t":"def or[A](inline default: => A): A","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"isProblem","t":"def isProblem[A]: Boolean","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"isValue","t":"def isValue[A]: Boolean","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"contains","t":"def contains[A](v: A): Boolean","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"value","t":"def value[A]: A","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"problem","t":"def problem[A]: Problem","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"valueOpt","t":"def valueOpt[A]: DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"problemOpt","t":"def problemOpt[A]: DEF[Problem]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"stream","t":"def stream[A]: Stream[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"toTry","t":"def toTry[A]: Try[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"map","t":"def map[A](inline f: A => B): DEF[B]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"mapResult","t":"def mapResult[A](inline f: A => DEF[B]): DEF[B]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"forval","t":"def forval[A](inline f: A => U): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"fornil","t":"def fornil[A](inline f: Problem => U): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"flatMap","t":"def flatMap[A](inline f: A => DEF[B]): DEF[B]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"process","t":"def process[A](inline f: A => U, inline pf: Problem => W): DEF[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"z_NameDef","t":"given z_NameDef","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"z_ClassTag","t":"given z_ClassTag","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"z_CanEqualResult","t":"given z_CanEqualResult","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"givenFilter","t":"val givenFilter: Filter","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"Problem","t":"def Problem: Problem","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result$.html","n":"Problem","t":"type Problem = Problem","d":"scalqa/val/Result$"},
{"l":"api/scalqa/val/Result.html","n":"TYPE","t":"object TYPE","d":"scalqa/val/Result$$TYPE$"},
{"l":"api/scalqa/val/Result.html","n":"DEF","t":"type DEF[+A]","d":"scalqa/val/Result$$TYPE$"},
{"l":"api/scalqa/val/Set.html","n":"Set","t":"class Set[A] extends Collection[A] with Contain[A]","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"THIS_TYPE","t":"type THIS_TYPE <: Set[A]","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"join","t":"def join(v: A): THIS_TYPE","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"joinAll","t":"def joinAll(v: Stream[A]): THIS_TYPE","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"+","t":"def +(inline v: A): THIS_TYPE","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"++","t":"def ++(inline v: Stream[A]): THIS_TYPE","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/val/Set"},
{"l":"api/scalqa/val/Set$.html","n":"Set","t":"object Set","d":"scalqa/val/Set$"},
{"l":"api/scalqa/val/Set$.html","n":"apply","t":"def apply[A](v: A*): Set[A]","d":"scalqa/val/Set$"},
{"l":"api/scalqa/val/Set$.html","n":"fromStream","t":"def fromStream[A](v: Stream[A]): Set[A]","d":"scalqa/val/Set$"},
{"l":"api/scalqa/val/Set$.html","n":"void","t":"def void[A]: Set[A]","d":"scalqa/val/Set$"},
{"l":"api/scalqa/val/Set$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Set[A]","d":"scalqa/val/Set$"},
{"l":"api/scalqa/val/Stream.html","n":"Stream","t":"trait Stream[+A]","d":"scalqa/val/Stream"},
{"l":"api/scalqa/val/Stream.html","n":"readOpt","t":"def readOpt: DEF[A]","d":"scalqa/val/Stream"},
{"l":"api/scalqa/val/Stream$.html","n":"Stream","t":"object Stream extends z_StreamDefaults with _Build with _Use","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"apply","t":"def apply[A](inline v: A): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"apply","t":"def apply[A](inline v1: A, inline v2: A): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"apply","t":"def apply[A](v1: A, v2: A, v3: A, vs: A*): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromIterator","t":"def fromIterator[A](inline v: Iterator[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromSpliterator","t":"def fromSpliterator[A](inline v: Spliterator[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromEnumeration","t":"def fromEnumeration[A](inline v: Enumeration[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromIterable","t":"def fromIterable[A](inline v: Iterable[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromProduct","t":"def fromProduct(inline v: Product): Stream[(String, Any)]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"fromIterableOnce","t":"def fromIterableOnce[A](inline v: IterableOnce[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"unapplySeq","t":"def unapplySeq[A](v: Stream[A]): Option[Seq[A]]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"void","t":"def void[A]: Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"implicitRequest","t":"def implicitRequest[A](v: EMPTY): Stream[A] & Size","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"implicitFromAbleStream","t":"def implicitFromAbleStream[A](inline v: Stream[A]): Stream[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"z_CanEqualStream","t":"given z_CanEqualStream","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"z_Doc","t":"given z_Doc: Tag[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"_build","t":"def _build: _Build","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"_build","t":"type _build = _Build","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"_use","t":"def _use: _Use","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"_use","t":"type _use = _Use","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"Flow","t":"def Flow: Flow","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"Flow","t":"type Flow[A] = Flow[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"Preview","t":"def Preview: Preview","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"Preview","t":"type Preview[A] = Preview[A]","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/Stream$.html","n":"Custom","t":"def Custom: Custom","d":"scalqa/val/Stream$"},
{"l":"api/scalqa/val/collection.html","n":"scalqa.val.collection","t":"package scalqa.val.collection","d":"scalqa/val/collection"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"Mutable","t":"trait Mutable[A] extends Collection[A] with Add[A]","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"remove","t":"def remove(v: A): Int","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"removeAll","t":"def removeAll(v: Stream[A]): Int","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"clear","t":"def clear: Unit","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"replaceWith","t":"def replaceWith(v: Stream[A]): Unit","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"-=","t":"def -=(v: A): Mutable[A]","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable.html","n":"--=","t":"def --=(v: Stream[A]): Mutable[A]","d":"scalqa/val/collection/Mutable"},
{"l":"api/scalqa/val/collection/Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/val/collection/Mutable$"},
{"l":"api/scalqa/val/collection/Mutable$.html","n":"apply","t":"def apply[A](initSize: Int): Collection[A]","d":"scalqa/val/collection/Mutable$"},
{"l":"api/scalqa/val/collection/Mutable$.html","n":"noDuplicates","t":"def noDuplicates[A](initSize: Int): Collection[A]","d":"scalqa/val/collection/Mutable$"},
{"l":"api/scalqa/val/collection/Observable.html","n":"Observable","t":"trait Observable[A] extends Collection[A] with Observable","d":"scalqa/val/collection/Observable"},
{"l":"api/scalqa/val/collection/Observable.html","n":"onAdd","t":"def onAdd[U](l: A => U): Control","d":"scalqa/val/collection/Observable"},
{"l":"api/scalqa/val/collection/Observable.html","n":"onRemove","t":"def onRemove[U](l: A => U): Control","d":"scalqa/val/collection/Observable"},
{"l":"api/scalqa/val/collection/Observable.html","n":"onObservableChange","t":"def onObservableChange[U](l: () => U): Control","d":"scalqa/val/collection/Observable"},
{"l":"api/scalqa/val/collection/Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/val/collection/Observable$"},
{"l":"api/scalqa/val/collection/ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A] extends Observable[A] with Mutable[A]","d":"scalqa/val/collection/ObservableMutable"},
{"l":"api/scalqa/val/collection/ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/val/collection/ObservableMutable$"},
{"l":"api/scalqa/val/collection/ObservableMutable$.html","n":"apply","t":"def apply[A](inline initSize: Int): ObservableMutable[A]","d":"scalqa/val/collection/ObservableMutable$"},
{"l":"api/scalqa/val/idx.html","n":"scalqa.val.idx","t":"package scalqa.val.idx","d":"scalqa/val/idx"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"Mutable","t":"trait Mutable[A] extends Idx[A] with Mutable[A] with Contain[A]","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"+@=","t":"def +@=(inline position: Int, inline v: A): Mutable[A]","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"++@=","t":"def ++@=(inline position: Int, inline v: Stream[A]): Mutable[A]","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"add","t":"def add(v: A): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"addAt","t":"def addAt(position: Int, v: A): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"addAllAt","t":"def addAllAt(position: Int, v: Stream[A]): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"updateAt","t":"def updateAt(position: Int, s: A): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"updateAllAt","t":"def updateAllAt(position: Int, s: Stream[A]): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"reposition","t":"def reposition(v: Permutation): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"sort","t":"def sort(using c: Ordering[A]): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"remove","t":"def remove(v: A): Int","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"removeAt","t":"def removeAt(position: Int): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable.html","n":"removeRange","t":"def removeRange(range: Range): Unit","d":"scalqa/val/idx/Mutable"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"apply","t":"def apply[A](inline initSize: Int): Mutable[A]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"sealable","t":"def sealable[A](initSize: Int): Mutable[A] & Seal","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"wrap","t":"def wrap[A](v: List[A]): Mutable[A]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"wrap","t":"def wrap[A](v: Idx[A]): Mutable[A]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A](v: NEW): Mutable[A]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"updateFor","t":"def updateFor[A](f: A => Boolean, value: A): Int","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"removeFor","t":"def removeFor[A](f: A => Boolean): Int","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"sortReversed","t":"def sortReversed[A](using o: Ordering[A]): Unit","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"readOnlyView","t":"def readOnlyView[A]: Idx[A]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"mutableMapView","t":"def mutableMapView[A](m: A => B, r: B => A): Mutable[B]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"mutableMapView","t":"def mutableMapView[A](using m: TwoWayFunction[A, B]): Mutable[B]","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"sortBy","t":"def sortBy[A](f: A => B)(using o: Ordering[B]): Unit","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"sortBy","t":"def sortBy[A](f1: A => B, f2: A => C)(using Ordering[B], Ordering[C]): Unit","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"sortBy","t":"def sortBy[A](f1: A => B, f2: A => C, f3: A => D)(using Ordering[B], Ordering[C], Ordering[D]): Unit","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"update","t":"def update[SELF <: Mutable[A], A](inline position: Int, inline v: A): Unit","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Mutable$.html","n":"X","t":"def X: X","d":"scalqa/val/idx/Mutable$"},
{"l":"api/scalqa/val/idx/Observable.html","n":"Observable","t":"trait Observable[A] extends Idx[A] with Observable[A]","d":"scalqa/val/idx/Observable"},
{"l":"api/scalqa/val/idx/Observable.html","n":"onChange","t":"def onChange[U](l: Pack[Event[A]] => U): Control","d":"scalqa/val/idx/Observable"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"void","t":"def void[A]: Observable[A]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"wrap","t":"def wrap[A](v: Idx[A]): Observable[A]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Observable[A]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"reversedView","t":"def reversedView[A]: Observable[A]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"statefulMapView","t":"def statefulMapView[A](f: A => B): Observable[B]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"mapView","t":"def mapView[A](f: A => B): Observable[B]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"Event","t":"def Event: Event","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"Event","t":"type Event[A] = Event[A]","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/Observable$.html","n":"X","t":"def X: X","d":"scalqa/val/idx/Observable$"},
{"l":"api/scalqa/val/idx/ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A] extends Observable[A] with Mutable[A] with ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable"},
{"l":"api/scalqa/val/idx/ObservableMutable.html","n":"refreshRange","t":"def refreshRange(r: Range): Unit","d":"scalqa/val/idx/ObservableMutable"},
{"l":"api/scalqa/val/idx/ObservableMutable.html","n":"refreshAt","t":"def refreshAt(i: Int): Unit","d":"scalqa/val/idx/ObservableMutable"},
{"l":"api/scalqa/val/idx/ObservableMutable.html","n":"modify","t":"def modify(multiChangeFun: Mutable[A] => Unit): Unit","d":"scalqa/val/idx/ObservableMutable"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"apply","t":"def apply[A](inline initSize: Int): ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"void","t":"def void[A]: ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"wrap","t":"def wrap[A](v: Idx[A]): ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"implicitRequest","t":"def implicitRequest[A](inline v: NEW): ObservableMutable[A]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"mutableMapView","t":"def mutableMapView[A](m: A => B, r: B => A): ObservableMutable[B]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"mutableMapView","t":"def mutableMapView[A](using bm: TwoWayFunction[A, B]): ObservableMutable[B]","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/ObservableMutable$.html","n":"X","t":"def X: X","d":"scalqa/val/idx/ObservableMutable$"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"Permutation","t":"trait Permutation","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"range","t":"def range: Range","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"positions","t":"def positions: Pack","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"position","t":"def position(old: Int): Int","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"pairStream","t":"def pairStream: Stream[(Int, Int)]","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"reposition","t":"def reposition[B](l: Mutable[B]): Unit","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"reposition","t":"def reposition[B](l: Idx[B], update: (Int, B) => Unit): Unit","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation.html","n":"validate","t":"def validate: Unit","d":"scalqa/val/idx/Permutation"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"Permutation","t":"object Permutation extends Setup[Permutation]","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"apply","t":"def apply(r: Range, positions: Pack): Permutation","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"empty","t":"def empty(i: Range): Permutation","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"pairs","t":"def pairs(s: (Int, Int)*): Permutation","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"random","t":"def random(r: Range): Permutation","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$.html","n":"sorting","t":"def sorting[A](idx: Idx[A], full: Boolean)(using c: Ordering[A]): Permutation","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"z_Doc","t":"given z_Doc: Doc[Permutation]","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"value_tag","t":"def value_tag(v: Permutation): String","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"value_doc","t":"def value_doc(v: Permutation): Doc","d":"scalqa/val/idx/Permutation$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"z_Doc","t":"given z_Doc: Doc[Permutation]","d":"scalqa/val/idx/Permutation$$z_Doc$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"value_tag","t":"def value_tag(v: Permutation): String","d":"scalqa/val/idx/Permutation$$z_Doc$"},
{"l":"api/scalqa/val/idx/Permutation$$z_Doc$.html","n":"value_doc","t":"def value_doc(v: Permutation): Doc","d":"scalqa/val/idx/Permutation$$z_Doc$"},
{"l":"api/scalqa/val/idx/Selection.html","n":"Selection","t":"trait Selection[A] extends Idx[A] with Doc","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"target","t":"def target: Idx[A]","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"indexes","t":"def indexes: Idx[Int]","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"size","t":"def size: Int","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"valueOpt","t":"def valueOpt: DEF[A]","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"value","t":"def value: A","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"property","t":"def property(dflt: A): Pro[A]","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection.html","n":"doc","t":"def doc: Doc","d":"scalqa/val/idx/Selection"},
{"l":"api/scalqa/val/idx/Selection$.html","n":"Selection","t":"object Selection","d":"scalqa/val/idx/Selection$"},
{"l":"api/scalqa/val/idx/Selection$.html","n":"apply","t":"def apply[A](targetIndex: Idx[A], idx: Idx[Int]): Selection[A]","d":"scalqa/val/idx/Selection$"},
{"l":"api/scalqa/val/idx/Selection$.html","n":"void","t":"def void[A]: Selection[A]","d":"scalqa/val/idx/Selection$"},
{"l":"api/scalqa/val/idx/Selection$.html","n":"implicitRequest","t":"def implicitRequest[A](v: VOID): Selection[A]","d":"scalqa/val/idx/Selection$"},
{"l":"api/scalqa/val/idx/Selection$.html","n":"Observable","t":"type Observable[A] = Observable[A]","d":"scalqa/val/idx/Selection$"},
{"l":"api/scalqa/val/idx/X$.html","n":"X","t":"object X","d":"scalqa/val/idx/X$"},
{"l":"api/scalqa/val/idx/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Idx[A] with Contain[A]","d":"scalqa/val/idx/X$$Abstract"},
{"l":"api/scalqa/val/idx/X$$Abstract.html","n":"contains","t":"def contains(v: A): Boolean","d":"scalqa/val/idx/X$$Abstract"},
{"l":"api/scalqa/val/idx/mutable.html","n":"scalqa.val.idx.mutable","t":"package scalqa.val.idx.mutable","d":"scalqa/val/idx/mutable"},
{"l":"api/scalqa/val/idx/mutable/X$.html","n":"X","t":"object X","d":"scalqa/val/idx/mutable/X$"},
{"l":"api/scalqa/val/idx/mutable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Abstract[A] with Mutable[A]","d":"scalqa/val/idx/mutable/X$$Abstract"},
{"l":"api/scalqa/val/idx/observable.html","n":"scalqa.val.idx.observable","t":"package scalqa.val.idx.observable","d":"scalqa/val/idx/observable"},
{"l":"api/scalqa/val/idx/observable/Event.html","n":"Event","t":"class Event[A] extends Doc","d":"scalqa/val/idx/observable/Event"},
{"l":"api/scalqa/val/idx/observable/Event.html","n":"name","t":"val name: String","d":"scalqa/val/idx/observable/Event"},
{"l":"api/scalqa/val/idx/observable/Event.html","n":"range","t":"def range: Range","d":"scalqa/val/idx/observable/Event"},
{"l":"api/scalqa/val/idx/observable/Event.html","n":"convert","t":"def convert[B](f: A => B): Event[B]","d":"scalqa/val/idx/observable/Event"},
{"l":"api/scalqa/val/idx/observable/Event.html","n":"projectOpt","t":"def projectOpt(i: Range): DEF[Event[A]]","d":"scalqa/val/idx/observable/Event"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Event","t":"object Event","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Add","t":"type Add[A] = Add[A]","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Add","t":"def Add: Add","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Remove","t":"type Remove[A] = Remove[A]","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Remove","t":"def Remove: Remove","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Update","t":"type Update[A] = Update[A]","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Update","t":"def Update: Update","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Reposition","t":"type Reposition[A] = Reposition[A]","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Reposition","t":"def Reposition: Reposition","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/Event$.html","n":"Recorder","t":"type Recorder[A] = Recorder[A]","d":"scalqa/val/idx/observable/Event$"},
{"l":"api/scalqa/val/idx/observable/X$.html","n":"X","t":"object X","d":"scalqa/val/idx/observable/X$"},
{"l":"api/scalqa/val/idx/observable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Observable[A]","d":"scalqa/val/idx/observable/X$$Abstract"},
{"l":"api/scalqa/val/idx/observable/X$$Base.html","n":"Base","t":"trait Base[A] extends Observable[A] with Provider","d":"scalqa/val/idx/observable/X$$Base"},
{"l":"api/scalqa/val/idx/observable/X$$Base.html","n":"onChange","t":"def onChange[U](l: Pack[Event[A]] => U): Control","d":"scalqa/val/idx/observable/X$$Base"},
{"l":"api/scalqa/val/idx/observable/X$$Base.html","n":"fireChange","t":"def fireChange(v: Pack[Event[A]]): Unit","d":"scalqa/val/idx/observable/X$$Base"},
{"l":"api/scalqa/val/idx/observable/event.html","n":"scalqa.val.idx.observable.event","t":"package scalqa.val.idx.observable.event","d":"scalqa/val/idx/observable/event"},
{"l":"api/scalqa/val/idx/observable/event/Add.html","n":"Add","t":"class Add[A] extends Event[A]","d":"scalqa/val/idx/observable/event/Add"},
{"l":"api/scalqa/val/idx/observable/event/Add.html","n":"items","t":"def items: Idx[A]","d":"scalqa/val/idx/observable/event/Add"},
{"l":"api/scalqa/val/idx/observable/event/Add.html","n":"convert","t":"def convert[B](f: A => B): Add[B]","d":"scalqa/val/idx/observable/event/Add"},
{"l":"api/scalqa/val/idx/observable/event/Add.html","n":"projectOpt","t":"def projectOpt(i: Range): DEF[Add[A]]","d":"scalqa/val/idx/observable/event/Add"},
{"l":"api/scalqa/val/idx/observable/event/Add$.html","n":"Add","t":"object Add","d":"scalqa/val/idx/observable/event/Add$"},
{"l":"api/scalqa/val/idx/observable/event/Add$.html","n":"apply","t":"def apply[A](i: Int, items: Idx[A]): Add[A]","d":"scalqa/val/idx/observable/event/Add$"},
{"l":"api/scalqa/val/idx/observable/event/Add$.html","n":"apply","t":"def apply[A](i: Range, items: Idx[A]): Add[A]","d":"scalqa/val/idx/observable/event/Add$"},
{"l":"api/scalqa/val/idx/observable/event/Add$.html","n":"apply","t":"def apply[A](i: Int, item: A): Add[A]","d":"scalqa/val/idx/observable/event/Add$"},
{"l":"api/scalqa/val/idx/observable/event/Recorder.html","n":"Recorder","t":"class Recorder[A](val real: Mutable[A]) extends Abstract[A] with Base[A]","d":"scalqa/val/idx/observable/event/Recorder"},
{"l":"api/scalqa/val/idx/observable/event/Recorder.html","n":"pack","t":"def pack: Pack[Event[A]]","d":"scalqa/val/idx/observable/event/Recorder"},
{"l":"api/scalqa/val/idx/observable/event/Recorder.html","n":"removeRange","t":"def removeRange(r: Range): Unit","d":"scalqa/val/idx/observable/event/Recorder"},
{"l":"api/scalqa/val/idx/observable/event/Remove.html","n":"Remove","t":"class Remove[A] extends Event[A]","d":"scalqa/val/idx/observable/event/Remove"},
{"l":"api/scalqa/val/idx/observable/event/Remove.html","n":"items","t":"def items: Idx[A]","d":"scalqa/val/idx/observable/event/Remove"},
{"l":"api/scalqa/val/idx/observable/event/Remove.html","n":"convert","t":"def convert[B](f: A => B): Remove[B]","d":"scalqa/val/idx/observable/event/Remove"},
{"l":"api/scalqa/val/idx/observable/event/Remove.html","n":"projectOpt","t":"def projectOpt(i: Range): DEF[Remove[A]]","d":"scalqa/val/idx/observable/event/Remove"},
{"l":"api/scalqa/val/idx/observable/event/Remove$.html","n":"Remove","t":"object Remove","d":"scalqa/val/idx/observable/event/Remove$"},
{"l":"api/scalqa/val/idx/observable/event/Remove$.html","n":"apply","t":"def apply[A](i: Int, items: Idx[A]): Remove[A]","d":"scalqa/val/idx/observable/event/Remove$"},
{"l":"api/scalqa/val/idx/observable/event/Remove$.html","n":"apply","t":"def apply[A](i: Range, items: Idx[A]): Remove[A]","d":"scalqa/val/idx/observable/event/Remove$"},
{"l":"api/scalqa/val/idx/observable/event/Remove$.html","n":"apply","t":"def apply[A](i: Int, item: A): Remove[A]","d":"scalqa/val/idx/observable/event/Remove$"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"Reposition","t":"class Reposition[A] extends Event[A]","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"permutation","t":"def permutation: Permutation","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"range","t":"def range: Range","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"positions","t":"def positions: Pack","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"convert","t":"def convert[B](f: A => B): Reposition[B]","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition.html","n":"projectOpt","t":"def projectOpt(i: Range): DEF[Reposition[A]]","d":"scalqa/val/idx/observable/event/Reposition"},
{"l":"api/scalqa/val/idx/observable/event/Reposition$.html","n":"Reposition","t":"object Reposition","d":"scalqa/val/idx/observable/event/Reposition$"},
{"l":"api/scalqa/val/idx/observable/event/Reposition$.html","n":"apply","t":"def apply[A](v: Permutation): Reposition[A]","d":"scalqa/val/idx/observable/event/Reposition$"},
{"l":"api/scalqa/val/idx/observable/event/Reposition$.html","n":"apply","t":"def apply[A](i: Range, positions: Pack): Reposition[A]","d":"scalqa/val/idx/observable/event/Reposition$"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"Update","t":"class Update[A] extends Event[A]","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"isRefresh","t":"def isRefresh: Boolean","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"items","t":"def items: Idx[A]","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"oldItems","t":"def oldItems: Idx[A]","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"convert","t":"def convert[B](f: A => B): Update[B]","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update.html","n":"projectOpt","t":"def projectOpt(r: Range): DEF[Update[A]]","d":"scalqa/val/idx/observable/event/Update"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"Update","t":"object Update","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"refresh","t":"def refresh[A](r: Range, items: Idx[A]): Update[A]","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"refresh","t":"def refresh[A](i: Int, item: A): Update[A]","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"apply","t":"def apply[A](i: Int, items: Idx[A], oldItems: Idx[A]): Update[A]","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"apply","t":"def apply[A](r: Range, items: Idx[A], oldItems: Idx[A]): Update[A]","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observable/event/Update$.html","n":"apply","t":"def apply[A](i: Int, item: A, oldItem: A): Update[A]","d":"scalqa/val/idx/observable/event/Update$"},
{"l":"api/scalqa/val/idx/observableMutable.html","n":"scalqa.val.idx.observableMutable","t":"package scalqa.val.idx.observableMutable","d":"scalqa/val/idx/observableMutable"},
{"l":"api/scalqa/val/idx/observableMutable/X$.html","n":"X","t":"object X","d":"scalqa/val/idx/observableMutable/X$"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Abstract[A] with ObservableMutable[A]","d":"scalqa/val/idx/observableMutable/X$$Abstract"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"Basic","t":"class Basic[A](target: Mutable[A]) extends Abstract[A]","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"this","t":"def this(initSize: Int)","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"apply","t":"def apply(i: Int): A","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"onChange","t":"def onChange[U](l: Pack[Event[A]] => U): Control","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"removeRange","t":"def removeRange(i: Range): Unit","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"refreshRange","t":"def refreshRange(r: Range): Unit","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic.html","n":"modify","t":"def modify(updates: Mutable[A] => Unit): Unit","d":"scalqa/val/idx/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/idx/observableMutable/X$$Basic$.html","n":"Basic","t":"object Basic","d":"scalqa/val/idx/observableMutable/X$$Basic$"},
{"l":"api/scalqa/val/idx/selection.html","n":"scalqa.val.idx.selection","t":"package scalqa.val.idx.selection","d":"scalqa/val/idx/selection"},
{"l":"api/scalqa/val/idx/selection/Observable.html","n":"Observable","t":"trait Observable[A] extends Selection[A] with Observable","d":"scalqa/val/idx/selection/Observable"},
{"l":"api/scalqa/val/idx/selection/Observable.html","n":"THIS_TYPE","t":"type THIS_TYPE <: Observable[A]","d":"scalqa/val/idx/selection/Observable"},
{"l":"api/scalqa/val/idx/selection/Observable.html","n":"onChange","t":"def onChange[U](f: THIS_TYPE => U): Control","d":"scalqa/val/idx/selection/Observable"},
{"l":"api/scalqa/val/idx/selection/Observable.html","n":"onChangeRun","t":"def onChangeRun[U](f: => U): Control","d":"scalqa/val/idx/selection/Observable"},
{"l":"api/scalqa/val/idx/selection/Observable.html","n":"onObservableChange","t":"def onObservableChange[U](l: () => U): Control","d":"scalqa/val/idx/selection/Observable"},
{"l":"api/scalqa/val/lookup.html","n":"scalqa.val.lookup","t":"package scalqa.val.lookup","d":"scalqa/val/lookup"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"Mutable","t":"trait Mutable[A, B] extends Lookup[A, B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"getOrPut","t":"def getOrPut(key: A, v: => B): B","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"putAll","t":"def putAll(s: Stream[(A, B)]): Unit","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"update","t":"def update(key: A, value: B): DEF[B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"updateAll","t":"def updateAll(s: Stream[(A, B)]): Stream[B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"remove","t":"def remove(v: A): DEF[B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"removeAll","t":"def removeAll(keys: Stream[A]): Stream[B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"clear","t":"def clear: Unit","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"+=","t":"def +=(v: (A, B)): Mutable[A, B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"++=","t":"def ++=(inline s: Stream[(A, B)]): Mutable[A, B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"-=","t":"def -=(inline key: A): Mutable[A, B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable.html","n":"--=","t":"def --=(inline keys: Stream[A]): Mutable[A, B]","d":"scalqa/val/lookup/Mutable"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"apply","t":"def apply[A, B](): Mutable[A, B]","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"apply","t":"def apply[A, B](v: Stream[(A, B)]): Mutable[A, B]","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"concurrent","t":"def concurrent[A, B](): Mutable[A, B]","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"implicitRequest","t":"def implicitRequest[A, B](v: NEW): Mutable[A, B]","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Mutable$.html","n":"X","t":"def X: X","d":"scalqa/val/lookup/Mutable$"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"Stable","t":"class Stable[A, B] extends Lookup[A, B]","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"THIS_TYPE","t":"type THIS_TYPE <: Stable[A, B]","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"join","t":"def join(key: A, v: B): THIS_TYPE","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"joinAll","t":"def joinAll(v: Stream[(A, B)]): THIS_TYPE","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"+","t":"def +(inline key: A, inline v: B): THIS_TYPE","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable.html","n":"++","t":"def ++(inline v: Stream[(A, B)]): THIS_TYPE","d":"scalqa/val/lookup/Stable"},
{"l":"api/scalqa/val/lookup/Stable$.html","n":"Stable","t":"object Stable","d":"scalqa/val/lookup/Stable$"},
{"l":"api/scalqa/val/lookup/Stable$.html","n":"apply","t":"def apply[A, B](v: Stream[(A, B)]): Stable[A, B]","d":"scalqa/val/lookup/Stable$"},
{"l":"api/scalqa/val/lookup/Stable$.html","n":"apply","t":"def apply[A, B](v: (A, B)*): Stable[A, B]","d":"scalqa/val/lookup/Stable$"},
{"l":"api/scalqa/val/lookup/Stable$.html","n":"void","t":"def void[A, B]: Stable[A, B]","d":"scalqa/val/lookup/Stable$"},
{"l":"api/scalqa/val/lookup/Stable$.html","n":"implicitRequest","t":"def implicitRequest[A, B](v: VOID): Stable[A, B]","d":"scalqa/val/lookup/Stable$"},
{"l":"api/scalqa/val/lookup/mutable.html","n":"scalqa.val.lookup.mutable","t":"package scalqa.val.lookup.mutable","d":"scalqa/val/lookup/mutable"},
{"l":"api/scalqa/val/lookup/mutable/X$.html","n":"X","t":"object X","d":"scalqa/val/lookup/mutable/X$"},
{"l":"api/scalqa/val/lookup/mutable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A, B] extends Mutable[A, B]","d":"scalqa/val/lookup/mutable/X$$Abstract"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"Concurrent","t":"class Concurrent[A, B](root: Map[A, B]) extends Abstract[A, B]","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"size","t":"def size: Int","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"clear","t":"def clear: Unit","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Concurrent.html","n":"remove","t":"def remove(k: A): DEF[B]","d":"scalqa/val/lookup/mutable/X$$Concurrent"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"Basic","t":"class Basic[A, B](val real: HashMap[A, B]) extends Abstract[A, B]","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"this","t":"def this()","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"size","t":"def size: Int","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"getOpt","t":"def getOpt(key: A): DEF[B]","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"pairStream","t":"def pairStream: Stream[(A, B)]","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"clear","t":"def clear: Unit","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"put","t":"def put(key: A, value: B): Unit","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/lookup/mutable/X$$Basic.html","n":"remove","t":"def remove(key: A): DEF[B]","d":"scalqa/val/lookup/mutable/X$$Basic"},
{"l":"api/scalqa/val/pro.html","n":"scalqa.val.pro","t":"package scalqa.val.pro","d":"scalqa/val/pro"},
{"l":"api/scalqa/val/pro/Mutable.html","n":"Mutable","t":"trait Mutable[A] extends Pro[A]","d":"scalqa/val/pro/Mutable"},
{"l":"api/scalqa/val/pro/Mutable.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/val/pro/Mutable"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"Mutable","t":"object Mutable","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"apply","t":"def apply[A](value: A): Mutable[A]","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"named","t":"def named[A](pName: String, value: A): Mutable[A] & Name","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"sealable","t":"def sealable[A](value: A): Mutable[A] & Seal","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"mutableMapView","t":"def mutableMapView[A](m: A => B, r: B => A): Mutable[B]","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"mutableMapView","t":"def mutableMapView[A](using bm: TwoWayFunction[A, B]): Mutable[B]","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"bindTo","t":"def bindTo[A](v: Observable[_ <: A]): Control","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"bindTo","t":"def bindTo[A](v: Observable[B], dflt: A): Control","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Mutable$.html","n":"X","t":"def X: X","d":"scalqa/val/pro/Mutable$"},
{"l":"api/scalqa/val/pro/Observable.html","n":"Observable","t":"trait Observable[+A] extends Pro[A] with Observable","d":"scalqa/val/pro/Observable"},
{"l":"api/scalqa/val/pro/Observable.html","n":"onChange","t":"def onChange[U](l: () => U): Control","d":"scalqa/val/pro/Observable"},
{"l":"api/scalqa/val/pro/Observable.html","n":"onObservableChange","t":"def onObservableChange[U](l: () => U): Control","d":"scalqa/val/pro/Observable"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"Observable","t":"object Observable","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"apply","t":"def apply[A](v: => A, dependencies: Stream[Observable]): Observable[A]","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"apply","t":"def apply[A](v: => A, dependencies: Observable*): Observable[A]","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"constant","t":"def constant[A](v: A): Observable[A]","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"named","t":"def named[A](name: String, v: => A, dependencies: Stream[Observable]): Observable[A] & Name","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"refreshable","t":"def refreshable[A](v: => A, dependencies: Stream[Observable]): Observable[A] & Refresh","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"namedRefreshable","t":"def namedRefreshable[A](name: String, v: => A, dependencies: Stream[Observable]): Observable[A] & Name & Refresh","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"onChangeRun","t":"def onChangeRun[A](f: => U): Control","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"onValueChange","t":"def onValueChange[A](l: A => U): Control","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"onValueChangeWithOld","t":"def onValueChangeWithOld[A](l: (A, A) => U): Control","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"mapView","t":"def mapView[A](f: A => B): Observable[B]","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"mixView","t":"def mixView[A](v: Observable[B], mix: (A, B) => C): Observable[C]","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/Observable$.html","n":"X","t":"def X: X","d":"scalqa/val/pro/Observable$"},
{"l":"api/scalqa/val/pro/ObservableMutable.html","n":"ObservableMutable","t":"trait ObservableMutable[A] extends Observable[A] with Mutable[A]","d":"scalqa/val/pro/ObservableMutable"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"ObservableMutable","t":"object ObservableMutable","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"apply","t":"def apply[A](v: A): ObservableMutable[A]","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"named","t":"def named[A](pName: String, v: A): ObservableMutable[A] & Name","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"mutableMapView","t":"def mutableMapView[A](m: A => B, r: B => A): ObservableMutable[B]","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"mutableMapView","t":"def mutableMapView[A](using m: TwoWayFunction[A, B]): ObservableMutable[B]","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/ObservableMutable$.html","n":"X","t":"def X: X","d":"scalqa/val/pro/ObservableMutable$"},
{"l":"api/scalqa/val/pro/X$.html","n":"X","t":"object X","d":"scalqa/val/pro/X$"},
{"l":"api/scalqa/val/pro/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Base[A]","d":"scalqa/val/pro/X$$Abstract"},
{"l":"api/scalqa/val/pro/X$$Base.html","n":"Base","t":"trait Base[A] extends Pro[A] with Doc","d":"scalqa/val/pro/X$$Base"},
{"l":"api/scalqa/val/pro/X$$Base.html","n":"doc","t":"def doc: Doc","d":"scalqa/val/pro/X$$Base"},
{"l":"api/scalqa/val/pro/mutable.html","n":"scalqa.val.pro.mutable","t":"package scalqa.val.pro.mutable","d":"scalqa/val/pro/mutable"},
{"l":"api/scalqa/val/pro/mutable/X$.html","n":"X","t":"object X","d":"scalqa/val/pro/mutable/X$"},
{"l":"api/scalqa/val/pro/mutable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Abstract[A] with Mutable[A]","d":"scalqa/val/pro/mutable/X$$Abstract"},
{"l":"api/scalqa/val/pro/mutable/X$$Basic.html","n":"Basic","t":"class Basic[A](_value: A) extends Mutable[A]","d":"scalqa/val/pro/mutable/X$$Basic"},
{"l":"api/scalqa/val/pro/mutable/X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/val/pro/mutable/X$$Basic"},
{"l":"api/scalqa/val/pro/mutable/X$$Basic.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/val/pro/mutable/X$$Basic"},
{"l":"api/scalqa/val/pro/observable.html","n":"scalqa.val.pro.observable","t":"package scalqa.val.pro.observable","d":"scalqa/val/pro/observable"},
{"l":"api/scalqa/val/pro/observable/X$.html","n":"X","t":"object X","d":"scalqa/val/pro/observable/X$"},
{"l":"api/scalqa/val/pro/observable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Abstract[A] with Base[A]","d":"scalqa/val/pro/observable/X$$Abstract"},
{"l":"api/scalqa/val/pro/observable/X$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with Observable[A] with Provider","d":"scalqa/val/pro/observable/X$$Base"},
{"l":"api/scalqa/val/pro/observable/X$$Base.html","n":"fireChange","t":"def fireChange: Int","d":"scalqa/val/pro/observable/X$$Base"},
{"l":"api/scalqa/val/pro/observable/X$$ActivationBase.html","n":"ActivationBase","t":"trait ActivationBase[A] extends Base[A]","d":"scalqa/val/pro/observable/X$$ActivationBase"},
{"l":"api/scalqa/val/pro/observable/X$$ActivationBase.html","n":"_afterFirstListenerAdded","t":"def _afterFirstListenerAdded: Unit","d":"scalqa/val/pro/observable/X$$ActivationBase"},
{"l":"api/scalqa/val/pro/observable/X$$ActivationBase.html","n":"_afterLastListenerRemoved","t":"def _afterLastListenerRemoved: Unit","d":"scalqa/val/pro/observable/X$$ActivationBase"},
{"l":"api/scalqa/val/pro/observable/X$$Basic.html","n":"Basic","t":"class Basic[A](source: => A) extends Abstract[A]","d":"scalqa/val/pro/observable/X$$Basic"},
{"l":"api/scalqa/val/pro/observable/X$$Basic.html","n":"this","t":"def this(source: => A, dependencies: Stream[Observable])","d":"scalqa/val/pro/observable/X$$Basic"},
{"l":"api/scalqa/val/pro/observable/X$$Basic.html","n":"apply","t":"def apply(): A","d":"scalqa/val/pro/observable/X$$Basic"},
{"l":"api/scalqa/val/pro/observableMutable.html","n":"scalqa.val.pro.observableMutable","t":"package scalqa.val.pro.observableMutable","d":"scalqa/val/pro/observableMutable"},
{"l":"api/scalqa/val/pro/observableMutable/X$.html","n":"X","t":"object X","d":"scalqa/val/pro/observableMutable/X$"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Abstract.html","n":"Abstract","t":"class Abstract[A] extends Abstract[A] with Base[A] with ObservableMutable[A]","d":"scalqa/val/pro/observableMutable/X$$Abstract"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Abstract.html","n":"apply","t":"def apply(): A","d":"scalqa/val/pro/observableMutable/X$$Abstract"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Abstract.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/val/pro/observableMutable/X$$Abstract"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Base.html","n":"Base","t":"trait Base[A] extends Base[A] with ObservableMutable[A]","d":"scalqa/val/pro/observableMutable/X$$Base"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Base.html","n":"apply","t":"def apply(): A","d":"scalqa/val/pro/observableMutable/X$$Base"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Base.html","n":"update","t":"def update(v: A): Unit","d":"scalqa/val/pro/observableMutable/X$$Base"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Basic.html","n":"Basic","t":"class Basic[A] extends Abstract[A]","d":"scalqa/val/pro/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/pro/observableMutable/X$$Basic.html","n":"this","t":"def this(v: A)","d":"scalqa/val/pro/observableMutable/X$$Basic"},
{"l":"api/scalqa/val/promise.html","n":"scalqa.val.promise","t":"package scalqa.val.promise","d":"scalqa/val/promise"},
{"l":"api/scalqa/val/promise/Context$.html","n":"Context","t":"object Context","d":"scalqa/val/promise/Context$"},
{"l":"api/scalqa/val/promise/Context$.html","n":"Context","t":"given Context: Context","d":"scalqa/val/promise/Context$"},
{"l":"api/scalqa/val/promise/Context$.html","n":"real","t":"def real: ExecutionContext","d":"scalqa/val/promise/Context$"},
{"l":"api/scalqa/val/promise/Context$.html","n":"execute","t":"def execute(inline r: Runnable): Unit","d":"scalqa/val/promise/Context$"},
{"l":"api/scalqa/val/promise/Context$.html","n":"reportFailure","t":"def reportFailure(inline cause: Throwable): Unit","d":"scalqa/val/promise/Context$"},
{"l":"api/scalqa/val/promise/Context.html","n":"TYPE","t":"object TYPE","d":"scalqa/val/promise/Context$$TYPE$"},
{"l":"api/scalqa/val/promise/Context.html","n":"DEF","t":"type DEF","d":"scalqa/val/promise/Context$$TYPE$"},
{"l":"api/scalqa/val/promise/Control.html","n":"Control","t":"trait Control[A]","d":"scalqa/val/promise/Control"},
{"l":"api/scalqa/val/promise/Control.html","n":"promise","t":"def promise: Promise[A]","d":"scalqa/val/promise/Control"},
{"l":"api/scalqa/val/promise/Control.html","n":"complete","t":"def complete(v: DEF[A]): Boolean","d":"scalqa/val/promise/Control"},
{"l":"api/scalqa/val/promise/Control.html","n":"tryComplete","t":"def tryComplete(expression: => DEF[A]): Boolean","d":"scalqa/val/promise/Control"},
{"l":"api/scalqa/val/promise/Control$.html","n":"Control","t":"object Control","d":"scalqa/val/promise/Control$"},
{"l":"api/scalqa/val/promise/Control$.html","n":"apply","t":"def apply[B](): Control[B]","d":"scalqa/val/promise/Control$"},
{"l":"api/scalqa/val/result.html","n":"scalqa.val.result","t":"package scalqa.val.result","d":"scalqa/val/result"},
{"l":"api/scalqa/val/result/Problem.html","n":"Problem","t":"trait Problem","d":"scalqa/val/result/Problem"},
{"l":"api/scalqa/val/result/Problem.html","n":"message","t":"def message: String","d":"scalqa/val/result/Problem"},
{"l":"api/scalqa/val/result/Problem.html","n":"exceptionOpt","t":"def exceptionOpt: DEF[Exception]","d":"scalqa/val/result/Problem"},
{"l":"api/scalqa/val/result/Problem$.html","n":"Problem","t":"object Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"nullValue","t":"val nullValue: Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"noMessage","t":"val noMessage: Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"failedFilter","t":"val failedFilter: Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"apply","t":"def apply(inline message: String): Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"apply","t":"def apply(t: Throwable): Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"implicitFromString","t":"def implicitFromString(inline v: String): Problem","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"implicitToThrowable","t":"def implicitToThrowable(inline v: Problem): Throwable","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$.html","n":"unapply","t":"def unapply(v: Problem): Option[String]","d":"scalqa/val/result/Problem$"},
{"l":"api/scalqa/val/result/Problem$$X$.html","n":"X","t":"object X","d":"scalqa/val/result/Problem$$X$"},
{"l":"api/scalqa/val/result/Problem$$X$$NotValid.html","n":"NotValid","t":"class NotValid(val message: String) extends Problem","d":"scalqa/val/result/Problem$$X$$NotValid"},
{"l":"api/scalqa/val/result/Problem$$X$$NotValid.html","n":"message","t":"val message: String","d":"scalqa/val/result/Problem$$X$$NotValid"},
{"l":"api/scalqa/val/result/Problem$$X$$NotValid.html","n":"exceptionOpt","t":"def exceptionOpt: DEF[Exception]","d":"scalqa/val/result/Problem$$X$$NotValid"},
{"l":"api/scalqa/val/result/Problem$$X$$NotValid$.html","n":"NotValid","t":"object NotValid","d":"scalqa/val/result/Problem$$X$$NotValid$"},
{"l":"api/scalqa/val/result/Problem$$X$$NotValid$.html","n":"unapply","t":"def unapply(v: NotValid): Option[String]","d":"scalqa/val/result/Problem$$X$$NotValid$"},
{"l":"api/scalqa/val/result/Problem$$X$$Timeout.html","n":"Timeout","t":"class Timeout(val message: String) extends Problem","d":"scalqa/val/result/Problem$$X$$Timeout"},
{"l":"api/scalqa/val/result/Problem$$X$$Timeout.html","n":"message","t":"val message: String","d":"scalqa/val/result/Problem$$X$$Timeout"},
{"l":"api/scalqa/val/result/Problem$$X$$Timeout.html","n":"exceptionOpt","t":"def exceptionOpt: DEF[Exception]","d":"scalqa/val/result/Problem$$X$$Timeout"},
{"l":"api/scalqa/val/result/Problem$$X$$Timeout$.html","n":"Timeout","t":"object Timeout","d":"scalqa/val/result/Problem$$X$$Timeout$"},
{"l":"api/scalqa/val/result/Problem$$X$$Timeout$.html","n":"unapply","t":"def unapply(v: Timeout): Option[String]","d":"scalqa/val/result/Problem$$X$$Timeout$"},
{"l":"api/scalqa/val/stream.html","n":"scalqa.val.stream","t":"package scalqa.val.stream","d":"scalqa/val/stream"},
{"l":"api/scalqa/val/stream/_Build.html","n":"_Build","t":"trait _Build extends _extend with _Filter with _group with _map with _mutate with _order with _parallel with _peek with _zip","d":"scalqa/val/stream/_Build"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_Build","t":"object _Build","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_extend","t":"type _extend = _extend","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_filter","t":"type _filter = _Filter","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_filter","t":"val _filter: _Filter","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_mutate","t":"type _mutate = _mutate","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_parallel","t":"type _parallel = _parallel","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_group","t":"type _group = _group","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_map","t":"type _map = _map","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_order","t":"type _order = _order","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_peek","t":"type _peek = _peek","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Build$.html","n":"_zip","t":"type _zip = _zip","d":"scalqa/val/stream/_Build$"},
{"l":"api/scalqa/val/stream/_Use.html","n":"_Use","t":"trait _Use extends _aggregate with _calculate with _evaluate with _metadata with _print with _process with _read with _Transform","d":"scalqa/val/stream/_Use"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_Use","t":"object _Use","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_aggregate","t":"type _aggregate = _aggregate","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_calculate","t":"type _calculate = _calculate","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_evaluate","t":"type _evaluate = _evaluate","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_metadata","t":"type _metadata = _metadata","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_print","t":"type _print = _print","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_process","t":"type _process = _process","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_read","t":"type _read = _read","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_transform","t":"type _transform = _Transform","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/_Use$.html","n":"_transform","t":"def _transform: _Transform","d":"scalqa/val/stream/_Use$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Custom","t":"object Custom","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Discharge","t":"type Discharge[A] = Discharge[A]","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Pipeline","t":"type Pipeline = Pipeline","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Pipeline","t":"def Pipeline: Pipeline","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Event","t":"type Event = Event","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Event","t":"def Event: Event","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Monitor","t":"type Monitor = Monitor","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Monitor","t":"def Monitor: Monitor","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Custom$.html","n":"Ordering","t":"type Ordering[A] = Ordering[A]","d":"scalqa/val/stream/Custom$"},
{"l":"api/scalqa/val/stream/Flow.html","n":"Flow","t":"class Flow[A] extends _build[A] with _use[A] with _metadata[A]","d":"scalqa/val/stream/Flow"},
{"l":"api/scalqa/val/stream/Flow$.html","n":"Flow","t":"object Flow","d":"scalqa/val/stream/Flow$"},
{"l":"api/scalqa/val/stream/Flow$.html","n":"_build","t":"type _build[A] = _build[A]","d":"scalqa/val/stream/Flow$"},
{"l":"api/scalqa/val/stream/Flow$.html","n":"_metadata","t":"type _metadata[A] = _metadata[A]","d":"scalqa/val/stream/Flow$"},
{"l":"api/scalqa/val/stream/Flow$.html","n":"_use","t":"type _use[A] = _use[A]","d":"scalqa/val/stream/Flow$"},
{"l":"api/scalqa/val/stream/Preview.html","n":"Preview","t":"trait Preview[A] extends Stream[A] with Empty","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"preview","t":"def preview: A","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"previewOpt","t":"def previewOpt: DEF[A]","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"previewStream","t":"def previewStream(cnt: Int): Stream[A] & Size","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"previewSize","t":"def previewSize: LazySize","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"readWhileStream","t":"def readWhileStream(f: A => Boolean): Stream[A] & Size","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview.html","n":"isEmpty","t":"def isEmpty: Boolean","d":"scalqa/val/stream/Preview"},
{"l":"api/scalqa/val/stream/Preview$.html","n":"Preview","t":"object Preview","d":"scalqa/val/stream/Preview$"},
{"l":"api/scalqa/val/stream/Preview$.html","n":"LazySize","t":"type LazySize = LazySize","d":"scalqa/val/stream/Preview$"},
{"l":"api/scalqa/val/stream/_build.html","n":"scalqa.val.stream._build","t":"package scalqa.val.stream._build","d":"scalqa/val/stream/_build"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"_extend","t":"trait _extend","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"+","t":"def +[A](inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"++","t":"def ++[A](inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"+@","t":"def +@[A](inline index: Int, inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"++@","t":"def ++@[A](inline index: Int, inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"join","t":"def join[A](inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"joinAll","t":"def joinAll[A](inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"joinAt","t":"def joinAt[A](inline index: Int, inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"joinAllAt","t":"def joinAllAt[A](inline index: Int, inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"default","t":"def default[A](inline v: => A): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"unfold","t":"def unfold[A](f: Stream[A] => DEF[A]): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_extend.html","n":"repeat","t":"def repeat[A](inline times: Int): Stream[A]","d":"scalqa/val/stream/_build/_extend"},
{"l":"api/scalqa/val/stream/_build/_Filter.html","n":"_Filter","t":"trait _Filter extends _take with _drop","d":"scalqa/val/stream/_build/_Filter"},
{"l":"api/scalqa/val/stream/_build/_Filter.html","n":"filter","t":"def filter[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_Filter"},
{"l":"api/scalqa/val/stream/_build/_Filter.html","n":"withFilter","t":"def withFilter[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_Filter"},
{"l":"api/scalqa/val/stream/_build/_Filter.html","n":"FILTER","t":"def FILTER[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_Filter"},
{"l":"api/scalqa/val/stream/_build/_Filter$.html","n":"_Filter","t":"object _Filter","d":"scalqa/val/stream/_build/_Filter$"},
{"l":"api/scalqa/val/stream/_build/_Filter$.html","n":"_take","t":"type _take = _take","d":"scalqa/val/stream/_build/_Filter$"},
{"l":"api/scalqa/val/stream/_build/_Filter$.html","n":"_drop","t":"type _drop = _drop","d":"scalqa/val/stream/_build/_Filter$"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"_group","t":"trait _group","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"group","t":"def group[A]: Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"group","t":"def group[A](inline f: (A, A) => Boolean, inline peek: (A, Boolean) => U): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"groupWith","t":"def groupWith[A](f: A => B): Stream[(B, Stream[A])]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"groupEvery","t":"def groupEvery[A](inline cnt: Int): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"groupBy","t":"def groupBy[A](inline f: A => Any, inline more: A => Any*): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"partition","t":"def partition[A](inline p: A => Boolean, inline more: A => Boolean*): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"sliding","t":"def sliding[A](inline size: Int, inline step: Int): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_group.html","n":"splitAt","t":"def splitAt[A](inline positions: Int*): Stream[Stream[A]]","d":"scalqa/val/stream/_build/_group"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"_map","t":"trait _map","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"map","t":"def map[A](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"MAP","t":"def MAP[A](inline f: A => B)(using inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"mapIf","t":"def mapIf[A](inline condition: A => Boolean, inline fun: A => A): Stream[A]","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"flatMap","t":"def flatMap[A](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"FLAT_MAP","t":"def FLAT_MAP[A](inline f: A => Stream[B])(using inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"mapOpt","t":"def mapOpt[A](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"MAP_OPT","t":"def MAP_OPT[A](inline f: A => OPT)(using inline o: Opt[B, OPT], inline B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"collect","t":"def collect[A](inline f: PartialFunction[A, B]): Stream[B]","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_map.html","n":"flatten","t":"def flatten[A](using d: ToStream[A, B], B: Specialized[B]): Stream","d":"scalqa/val/stream/_build/_map"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"_mutate","t":"trait _mutate","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"ref","t":"def ref[A]: Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"raw","t":"def raw[A](using inline A: Primitive[A]): Stream","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"reverse","t":"def reverse[A]: Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"reverseEvery","t":"def reverseEvery[A](inline size: Int): Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"shuffle","t":"def shuffle[A]: Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"transpose","t":"def transpose[A](using inline f: A => Stream[B]): Stream[Stream[B]]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"synchronize","t":"def synchronize[A]: Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"load","t":"def load[A]: Stream[A] & Size","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"hideSizeData","t":"def hideSizeData[A]: Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"enablePreview","t":"def enablePreview[A]: Stream[A] & Preview[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"enableSize","t":"def enableSize[A]: Stream[A] & Size","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"replaceSequence","t":"def replaceSequence[A](inline seq: Stream[A], inline to: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"replaceSequenceBy","t":"def replaceSequenceBy[A](inline f: A => B, inline seq: Stream[B], inline to: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_mutate.html","n":"nonEmptyOpt","t":"def nonEmptyOpt[A]: DEF[Stream[A]]","d":"scalqa/val/stream/_build/_mutate"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"_order","t":"trait _order","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"sort","t":"def sort[A](using inline o: Ordering[A]): Stream[A]","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"sortReversed","t":"def sortReversed[A](using inline o: Ordering[A]): Stream[A]","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"sortBy","t":"def sortBy[A](inline f: A => B)(using inline o: Ordering[B]): Stream[A]","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"sortBy","t":"def sortBy[A](f1: A => B, f2: A => C)(using Ordering[B], Ordering[C]): Stream[A]","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_order.html","n":"sortBy","t":"def sortBy[A](f1: A => B, f2: A => C, f3: A => D)(using Ordering[B], Ordering[C], Ordering[D]): Stream[A]","d":"scalqa/val/stream/_build/_order"},
{"l":"api/scalqa/val/stream/_build/_parallel.html","n":"_parallel","t":"trait _parallel","d":"scalqa/val/stream/_build/_parallel"},
{"l":"api/scalqa/val/stream/_build/_parallel.html","n":"parallel","t":"def parallel[A]: Flow[A]","d":"scalqa/val/stream/_build/_parallel"},
{"l":"api/scalqa/val/stream/_build/_parallel.html","n":"parallelIf","t":"def parallelIf[A](v: Boolean): Flow[A]","d":"scalqa/val/stream/_build/_parallel"},
{"l":"api/scalqa/val/stream/_build/_parallel.html","n":"parallelIfOver","t":"def parallelIfOver[A](threshold: Int): Flow[A]","d":"scalqa/val/stream/_build/_parallel"},
{"l":"api/scalqa/val/stream/_build/_parallel.html","n":"parallelWithPriority","t":"def parallelWithPriority[A](p: Priority, parallelism: Int): Flow[A]","d":"scalqa/val/stream/_build/_parallel"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"_peek","t":"trait _peek","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peek","t":"def peek[A](inline f: A => U): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekIndexed","t":"def peekIndexed[A](inline f: (Int, A) => U, inline start: Int): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekStart","t":"def peekStart[A](inline f: Time => U): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekEnd","t":"def peekEnd[A](inline f: (Int, Length) => U): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekEmpty","t":"def peekEmpty[A](inline f: => U): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekEvents","t":"def peekEvents[A](inline f: Event => U): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_peek.html","n":"peekMonitor","t":"def peekMonitor[A](inline v: Monitor): Stream[A]","d":"scalqa/val/stream/_build/_peek"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"_zip","t":"trait _zip","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"unzip","t":"def unzip[A](using inline f: A => (B, C)): (Stream[B], Stream[C])","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zip","t":"def zip[A](inline that: Stream[B]): Stream[(A, B)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipAll","t":"def zipAll[A](inline that: Stream[B], thisDflt: DEF[A], thatDflt: DEF[B]): Stream[(A, B)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipKey","t":"def zipKey[A](inline f: A => B): Stream[(B, A)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipValue","t":"def zipValue[A](inline f: A => B): Stream[(A, B)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipNext","t":"def zipNext[A]: Stream[(A, DEF[A])]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipPrior","t":"def zipPrior[A]: Stream[(DEF[A], A)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipFoldAs","t":"def zipFoldAs[A](inline start: B, inline f: (B, A) => B): Stream[(A, B)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipIndex","t":"def zipIndex[A]: Stream[(Int, A)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_zip.html","n":"zipIndex","t":"def zipIndex[A](inline start: Int): Stream[(Int, A)]","d":"scalqa/val/stream/_build/_zip"},
{"l":"api/scalqa/val/stream/_build/_filter.html","n":"scalqa.val.stream._build._filter","t":"package scalqa.val.stream._build._filter","d":"scalqa/val/stream/_build/_filter"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"_drop","t":"trait _drop","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"drop","t":"def drop[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropWhile","t":"def dropWhile[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropFirst","t":"def dropFirst[A](inline n: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropRange","t":"def dropRange[A](inline i: Range): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropLast","t":"def dropLast[A](n: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropEvery","t":"def dropEvery[A](nTh: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropDuplicates","t":"def dropDuplicates[A]: Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropDuplicatesBy","t":"def dropDuplicatesBy[A](inline f: A => B): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropSequence","t":"def dropSequence[A](inline seq: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropSequenceBy","t":"def dropSequenceBy[A](inline f: A => B, inline seq: Stream[B]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropOnly","t":"def dropOnly[A](inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropValues","t":"def dropValues[A](inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropValuesBy","t":"def dropValuesBy[A](inline f: A => B, inline v: Stream[B]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"dropVoid","t":"def dropVoid[A](using inline d: Void[A]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_drop.html","n":"DROP","t":"def DROP[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_drop"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"_take","t":"trait _take","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"take","t":"def take[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeType","t":"def takeType[A](using inline t: ClassTag[B]): Stream[B]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeWhile","t":"def takeWhile[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeFirst","t":"def takeFirst[A](n: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeRange","t":"def takeRange[A](inline i: Range): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeLast","t":"def takeLast[A](inline n: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeEvery","t":"def takeEvery[A](inline nTh: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeIndexed","t":"def takeIndexed[A](inline f: (Int, A) => Boolean, inline start: Int): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeDuplicates","t":"def takeDuplicates[A]: Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeDuplicatesBy","t":"def takeDuplicatesBy[A](inline f: A => B): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeOnly","t":"def takeOnly[A](inline v: A): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeValues","t":"def takeValues[A](inline v: Stream[A]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"takeValuesBy","t":"def takeValuesBy[A](inline f: A => B, inline v: Stream[B]): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_build/_filter/_take.html","n":"TAKE","t":"def TAKE[A](inline f: A => Boolean): Stream[A]","d":"scalqa/val/stream/_build/_filter/_take"},
{"l":"api/scalqa/val/stream/_use.html","n":"scalqa.val.stream._use","t":"package scalqa.val.stream._use","d":"scalqa/val/stream/_use"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"_aggregate","t":"trait _aggregate","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"fold","t":"def fold[A](inline start: A)(inline f: (A, A) => A): A","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"foldAs","t":"def foldAs[A](inline start: B)(inline f: (B, A) => B): B","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"FOLD","t":"def FOLD[A](inline start: A)(inline f: (A, A) => A): A","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"FOLD_AS","t":"def FOLD_AS[A](inline start: B)(inline f: (B, A) => B): B","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"reduceOpt","t":"def reduceOpt[A](inline f: (A, A) => A): DEF[A]","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"reduce","t":"def reduce[A](inline f: (A, A) => A): A","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"REDUCE","t":"def REDUCE[A](inline f: (A, A) => A): A","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_aggregate.html","n":"REDUCE_OPT","t":"def REDUCE_OPT[A](inline f: (A, A) => A): DEF[A]","d":"scalqa/val/stream/_use/_aggregate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"_calculate","t":"trait _calculate","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"min","t":"def min[A](using inline o: Ordering[A]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"minOpt","t":"def minOpt[A](using inline o: Ordering[A]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"max","t":"def max[A](using inline o: Ordering[A]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"maxOpt","t":"def maxOpt[A](using inline o: Ordering[A]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"range","t":"def range[A](using inline o: Ordering[A]): Range[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"rangeOpt","t":"def rangeOpt[A](using inline o: Ordering[A]): DEF[Range[A]]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"sum","t":"def sum[A](using inline v: Sum[A]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"sumOpt","t":"def sumOpt[A](using inline v: Sum[A]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"average","t":"def average[A](using inline v: Average[A]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"averageOpt","t":"def averageOpt[A](using inline v: Average[A]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"minBy","t":"def minBy[A](inline f: A => B)(using inline o: Ordering[B]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"maxBy","t":"def maxBy[A](inline f: A => B)(using inline o: Ordering[B]): A","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"minByOpt","t":"def minByOpt[A](inline f: A => B)(using inline o: Ordering[B]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"maxByOpt","t":"def maxByOpt[A](inline f: A => B)(using inline o: Ordering[B]): DEF[A]","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"averageFew","t":"def averageFew[A](inline fb: A => DEF[B], inline fc: A => DEF[C], inline fd: A => DEF[D], inline fe: A => DEF[E], inline ff: A => DEF[F])(using inline nb: Average[B], inline nc: Average[C], inline nd: Average[D], inline ne: Average[E], inline nf: Average[F]): (B, C) | (B, C, D) | (B, C, D, E) | (B, C, D, E, F)","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_calculate.html","n":"sumFew","t":"def sumFew[A](inline fb: A => DEF[B], inline fc: A => DEF[C], inline fd: A => DEF[D], inline fe: A => DEF[E], inline ff: A => DEF[F])(using inline nb: Sum[B], inline nc: Sum[C], inline nd: Sum[D], inline ne: Sum[E], inline nf: Sum[F]): (B, C) | (B, C, D) | (B, C, D, E) | (B, C, D, E, F)","d":"scalqa/val/stream/_use/_calculate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"_evaluate","t":"trait _evaluate","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"findOpt","t":"def findOpt[A](inline f: A => Boolean): DEF[A]","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"find","t":"def find[A](inline f: A => Boolean): A","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"findPositionOpt","t":"def findPositionOpt[A](inline f: A => Boolean): Opt","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"findSequencePositionOpt","t":"def findSequencePositionOpt[A](inline v: Stream[A]): Opt","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"count","t":"def count[A]: Int","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"count","t":"def count[A](inline f: A => Boolean): Int","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"countAndTime","t":"def countAndTime[A]: (Int, Length)","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"startsWithSequence","t":"def startsWithSequence[A](inline v: Stream[A]): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"startsWithSequenceResult","t":"def startsWithSequenceResult[A](inline v: Stream[A]): DEF[true]","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"equalsSequence","t":"def equalsSequence[A](inline v: Stream[A]): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"equalsSequenceResult","t":"def equalsSequenceResult[A](inline v: Stream[A]): DEF[true]","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"exists","t":"def exists[A](inline f: A => Boolean): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"isEvery","t":"def isEvery[A](inline f: A => Boolean): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"contains","t":"def contains[A](inline value: A): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"containsSequence","t":"def containsSequence[A](inline seq: Stream[A]): Boolean","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"last","t":"def last[A]: A","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"lastOpt","t":"def lastOpt[A]: DEF[A]","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_evaluate.html","n":"countFew","t":"def countFew[A](inline f1: A => Boolean, inline f2: A => Boolean, inline f3: A => Boolean, inline f4: A => Boolean, inline f5: A => Boolean): (Int, Int) | (Int, Int, Int) | (Int, Int, Int, Int) | (Int, Int, Int, Int, Int)","d":"scalqa/val/stream/_use/_evaluate"},
{"l":"api/scalqa/val/stream/_use/_metadata.html","n":"_metadata","t":"trait _metadata","d":"scalqa/val/stream/_use/_metadata"},
{"l":"api/scalqa/val/stream/_use/_metadata.html","n":"docTree","t":"def docTree[A]: Tree","d":"scalqa/val/stream/_use/_metadata"},
{"l":"api/scalqa/val/stream/_use/_metadata.html","n":"sizeOpt","t":"def sizeOpt[A]: Opt","d":"scalqa/val/stream/_use/_metadata"},
{"l":"api/scalqa/val/stream/_use/_metadata.html","n":"sizeLongOpt","t":"def sizeLongOpt[A]: Opt","d":"scalqa/val/stream/_use/_metadata"},
{"l":"api/scalqa/val/stream/_use/_print.html","n":"_print","t":"trait _print","d":"scalqa/val/stream/_use/_print"},
{"l":"api/scalqa/val/stream/_use/_print.html","n":"print","t":"def print[A](using inline t: Tag[A]): Unit","d":"scalqa/val/stream/_use/_print"},
{"l":"api/scalqa/val/stream/_use/_print.html","n":"printId","t":"def printId[A](using inline t: Tag[A]): Unit","d":"scalqa/val/stream/_use/_print"},
{"l":"api/scalqa/val/stream/_use/_print.html","n":"print_#","t":"def print_#[A](using inline t: Tag[A]): Unit","d":"scalqa/val/stream/_use/_print"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"_process","t":"trait _process","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"drain","t":"def drain[A]: Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"fornil","t":"def fornil[A](inline f: => U): Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"process","t":"def process[A](inline foreachFun: A => U, inline fornilFun: => W): Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"foreach","t":"def foreach[A](inline f: A => U): Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"FOREACH","t":"def FOREACH[A](inline f: A => U): Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_process.html","n":"foreachIndexed","t":"def foreachIndexed[A](inline f: (Int, A) => U, inline start: Int): Unit","d":"scalqa/val/stream/_use/_process"},
{"l":"api/scalqa/val/stream/_use/_read.html","n":"_read","t":"trait _read","d":"scalqa/val/stream/_use/_read"},
{"l":"api/scalqa/val/stream/_use/_read.html","n":"read","t":"def read[A]: A","d":"scalqa/val/stream/_use/_read"},
{"l":"api/scalqa/val/stream/_use/_read.html","n":"readOpt","t":"def readOpt[A]: DEF[A]","d":"scalqa/val/stream/_use/_read"},
{"l":"api/scalqa/val/stream/_use/_read.html","n":"readStream","t":"def readStream[A](inline cnt: Int): Stream[A] & Size","d":"scalqa/val/stream/_use/_read"},
{"l":"api/scalqa/val/stream/_use/_Transform.html","n":"_Transform","t":"trait _Transform extends _toCollections with _toString with _toJava with _toScala with _toTuple","d":"scalqa/val/stream/_use/_Transform"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_Transform","t":"object _Transform","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_toCollections","t":"type _toCollections = _toCollections","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_toString","t":"type _toString = _toString","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_toJava","t":"type _toJava = _toJava","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_toScala","t":"type _toScala = _toScala","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_Transform$.html","n":"_toTuple","t":"type _toTuple = _toTuple","d":"scalqa/val/stream/_use/_Transform$"},
{"l":"api/scalqa/val/stream/_use/_transform.html","n":"scalqa.val.stream._use._transform","t":"package scalqa.val.stream._use._transform","d":"scalqa/val/stream/_use/_transform"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"_toCollections","t":"trait _toCollections","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"pack","t":"def pack[A](using inline A: Specialized[A]): Pack","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toIdx","t":"def toIdx[A](using inline A: Specialized[A]): Idx","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toSet","t":"def toSet[A](using inline A: Specialized[A]): Set","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toBuffer","t":"def toBuffer[A](using inline A: Specialized[A]): Buffer","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toArray","t":"def toArray[A](using inline t: ClassTag[A], inline A: Specialized[A]): Array","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toLookupBy","t":"def toLookupBy[A](inline f: A => KEY)(using inline KEY: Specialized[KEY]): Lookup[A]","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toCollections.html","n":"toLookup","t":"def toLookup[KEY, VALUE](using inline KEY: Specialized[KEY]): Lookup[VALUE]","d":"scalqa/val/stream/_use/_transform/_toCollections"},
{"l":"api/scalqa/val/stream/_use/_transform/_toJava.html","n":"_toJava","t":"trait _toJava","d":"scalqa/val/stream/_use/_transform/_toJava"},
{"l":"api/scalqa/val/stream/_use/_transform/_toJava.html","n":"toJavaList","t":"def toJavaList[A]: List[A]","d":"scalqa/val/stream/_use/_transform/_toJava"},
{"l":"api/scalqa/val/stream/_use/_transform/_toJava.html","n":"toJavaIterator","t":"def toJavaIterator[A]: Iterator[A]","d":"scalqa/val/stream/_use/_transform/_toJava"},
{"l":"api/scalqa/val/stream/_use/_transform/_toJava.html","n":"toJavaSpliterator","t":"def toJavaSpliterator[A](inline splitSize: Int): Spliterator[A]","d":"scalqa/val/stream/_use/_transform/_toJava"},
{"l":"api/scalqa/val/stream/_use/_transform/_toJava.html","n":"toJavaStream","t":"def toJavaStream[A](inline parallel: Boolean): Stream[A]","d":"scalqa/val/stream/_use/_transform/_toJava"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"_toScala","t":"trait _toScala","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"iterator","t":"def iterator[A]: Iterator[A]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toList","t":"def toList[A]: List[A]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toVector","t":"def toVector[A]: Vector[A]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toSeq","t":"def toSeq[A]: IndexedSeq[A]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toMapBy","t":"def toMapBy[A](inline f: A => B): Map[B, A]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toProduct","t":"def toProduct[A]: Product","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toArray","t":"def toArray[A](using inline t: ClassTag[A], inline A: Specialized[A]): Array","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toScala.html","n":"toMap","t":"def toMap[KEY, VALUE]: Map[KEY, VALUE]","d":"scalqa/val/stream/_use/_transform/_toScala"},
{"l":"api/scalqa/val/stream/_use/_transform/_toString.html","n":"_toString","t":"trait _toString","d":"scalqa/val/stream/_use/_transform/_toString"},
{"l":"api/scalqa/val/stream/_use/_transform/_toString.html","n":"toText","t":"def toText[A](using inline t: Tag[A]): String","d":"scalqa/val/stream/_use/_transform/_toString"},
{"l":"api/scalqa/val/stream/_use/_transform/_toString.html","n":"makeString","t":"def makeString[A](inline separator: String)(using inline t: Tag[A]): String","d":"scalqa/val/stream/_use/_transform/_toString"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"_toTuple","t":"trait _toTuple","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple2","t":"def tuple2[A]: (A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple3","t":"def tuple3[A]: (A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple4","t":"def tuple4[A]: (A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple5","t":"def tuple5[A]: (A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple6","t":"def tuple6[A]: (A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple7","t":"def tuple7[A]: (A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple8","t":"def tuple8[A]: (A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple9","t":"def tuple9[A]: (A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple10","t":"def tuple10[A]: (A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple11","t":"def tuple11[A]: (A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple12","t":"def tuple12[A]: (A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple13","t":"def tuple13[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple14","t":"def tuple14[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple15","t":"def tuple15[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple16","t":"def tuple16[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple17","t":"def tuple17[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple18","t":"def tuple18[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple19","t":"def tuple19[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple20","t":"def tuple20[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple21","t":"def tuple21[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/_use/_transform/_toTuple.html","n":"tuple22","t":"def tuple22[A]: (A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)","d":"scalqa/val/stream/_use/_transform/_toTuple"},
{"l":"api/scalqa/val/stream/custom.html","n":"scalqa.val.stream.custom","t":"package scalqa.val.stream.custom","d":"scalqa/val/stream/custom"},
{"l":"api/scalqa/val/stream/custom/Discharge.html","n":"Discharge","t":"trait Discharge[A]","d":"scalqa/val/stream/custom/Discharge"},
{"l":"api/scalqa/val/stream/custom/Discharge.html","n":"dischargeTo","t":"def dischargeTo(v: Buffer[A]): Unit","d":"scalqa/val/stream/custom/Discharge"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"Event","t":"class Event extends Monitor","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"onBeforeFirst","t":"def onBeforeFirst[U](l: Time => U): Unit","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"onEvery","t":"def onEvery[U](c: Int, l: (Int, Length) => U): Unit","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"onEvery","t":"def onEvery[U](t: Length, l: (Int, Length) => U): Unit","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"onAfterLast","t":"def onAfterLast[U](l: (Int, Length) => U): Unit","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event.html","n":"onEmpty","t":"def onEmpty[U](l: () => U): Unit","d":"scalqa/val/stream/custom/Event"},
{"l":"api/scalqa/val/stream/custom/Event$.html","n":"Event","t":"object Event","d":"scalqa/val/stream/custom/Event$"},
{"l":"api/scalqa/val/stream/custom/Event$.html","n":"Monitor","t":"type Monitor = Monitor","d":"scalqa/val/stream/custom/Event$"},
{"l":"api/scalqa/val/stream/custom/Event$.html","n":"Monitor","t":"def Monitor: Monitor","d":"scalqa/val/stream/custom/Event$"},
{"l":"api/scalqa/val/stream/custom/Ordering.html","n":"Ordering","t":"trait Ordering[A]","d":"scalqa/val/stream/custom/Ordering"},
{"l":"api/scalqa/val/stream/custom/Ordering.html","n":"minOpt","t":"def minOpt(s: Stream[A]): DEF[A]","d":"scalqa/val/stream/custom/Ordering"},
{"l":"api/scalqa/val/stream/custom/Ordering.html","n":"maxOpt","t":"def maxOpt(s: Stream[A]): DEF[A]","d":"scalqa/val/stream/custom/Ordering"},
{"l":"api/scalqa/val/stream/custom/Ordering.html","n":"rangeOpt","t":"def rangeOpt(s: Stream[A]): DEF[Range[A]]","d":"scalqa/val/stream/custom/Ordering"},
{"l":"api/scalqa/val/stream/custom/Pipeline.html","n":"Pipeline","t":"trait Pipeline extends Tree","d":"scalqa/val/stream/custom/Pipeline"},
{"l":"api/scalqa/val/stream/custom/Pipeline.html","n":"docTree","t":"def docTree: Tree","d":"scalqa/val/stream/custom/Pipeline"},
{"l":"api/scalqa/val/stream/custom/Pipeline$.html","n":"Pipeline","t":"object Pipeline","d":"scalqa/val/stream/custom/Pipeline$"},
{"l":"api/scalqa/val/stream/custom/Pipeline$.html","n":"docTree","t":"def docTree[A](v: Tree | Stream[A] | Flow[A]): Tree","d":"scalqa/val/stream/custom/Pipeline$"},
{"l":"api/scalqa/val/stream/custom/Pipeline$.html","n":"ParallelFlow","t":"type ParallelFlow[A] = ParallelFlow[A]","d":"scalqa/val/stream/custom/Pipeline$"},
{"l":"api/scalqa/val/stream/custom/Pipeline$$Tree.html","n":"Tree","t":"trait Tree extends Doc","d":"scalqa/val/stream/custom/Pipeline$$Tree"},
{"l":"api/scalqa/val/stream/custom/Pipeline$$Tree.html","n":"docTree","t":"def docTree: Tree","d":"scalqa/val/stream/custom/Pipeline$$Tree"},
{"l":"api/scalqa/val/stream/custom/Pipeline$$Tree.html","n":"doc","t":"def doc: Doc","d":"scalqa/val/stream/custom/Pipeline$$Tree"},
{"l":"api/scalqa/val/stream/custom/event.html","n":"scalqa.val.stream.custom.event","t":"package scalqa.val.stream.custom.event","d":"scalqa/val/stream/custom/event"},
{"l":"api/scalqa/val/stream/custom/event/Monitor.html","n":"Monitor","t":"trait Monitor","d":"scalqa/val/stream/custom/event/Monitor"},
{"l":"api/scalqa/val/stream/custom/event/Monitor$.html","n":"Monitor","t":"object Monitor","d":"scalqa/val/stream/custom/event/Monitor$"},
{"l":"api/scalqa/val/stream/custom/event/Monitor$.html","n":"implicitRequest","t":"def implicitRequest(v: VOID): Monitor","d":"scalqa/val/stream/custom/event/Monitor$"},
{"l":"api/scalqa/val/stream/custom/event/Monitor$.html","n":"implicitRequest","t":"def implicitRequest(v: DEFAULT): Monitor","d":"scalqa/val/stream/custom/event/Monitor$"},
{"l":"api/scalqa/val/stream/custom/pipeline.html","n":"scalqa.val.stream.custom.pipeline","t":"package scalqa.val.stream.custom.pipeline","d":"scalqa/val/stream/custom/pipeline"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"ParallelFlow","t":"class ParallelFlow[A] extends Flow[A] with Tree","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"isParallel","t":"def isParallel: Boolean","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"name","t":"def name: String","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"takeType","t":"def takeType[B](using t: ClassTag[B]): Flow[B]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"collect","t":"def collect[B](f: PartialFunction[A, B]): Flow[B]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"mapOpt","t":"def mapOpt[B](f: A => DEF[B]): Flow[B]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"peekIndexed","t":"def peekIndexed[U](f: (Int, A) => U, start: Int): Flow[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"contains","t":"def contains[B >: A](value: B): Boolean","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"exists","t":"def exists(f: A => Boolean): Boolean","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"isEvery","t":"def isEvery(f: A => Boolean): Boolean","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"find","t":"def find(f: A => Boolean): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"findOpt","t":"def findOpt(f: A => Boolean): DEF[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"reduce","t":"def reduce(bf: (A, A) => A): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"fold","t":"def fold(start: A)(bf: (A, A) => A): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"sum","t":"def sum(using m: Sum[A]): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"range","t":"def range(using o: Ordering[A]): Range[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"min","t":"def min(using o: Ordering[A]): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"max","t":"def max(using o: Ordering[A]): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"minBy","t":"def minBy[B](f: A => B)(using o: Ordering[B]): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"maxBy","t":"def maxBy[B](f: A => B)(using o: Ordering[B]): A","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"minOpt","t":"def minOpt(using o: Ordering[A]): DEF[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"minByOpt","t":"def minByOpt[B](f: A => B)(using o: Ordering[B]): DEF[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"maxOpt","t":"def maxOpt(using o: Ordering[A]): DEF[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"maxByOpt","t":"def maxByOpt[B](f: A => B)(using o: Ordering[B]): DEF[A]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"rangeOpt","t":"def rangeOpt(using o: Ordering[A]): DEF[Range[A]]","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"process","t":"def process[U, W](f: A => U, fornil: => W): Unit","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"drain","t":"def drain: Unit","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/custom/pipeline/ParallelFlow.html","n":"countAndTime","t":"def countAndTime: (Int, Length)","d":"scalqa/val/stream/custom/pipeline/ParallelFlow"},
{"l":"api/scalqa/val/stream/flow.html","n":"scalqa.val.stream.flow","t":"package scalqa.val.stream.flow","d":"scalqa/val/stream/flow"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"_build","t":"trait _build[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"stream","t":"def stream: Stream[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"takeType","t":"def takeType[B](`evidence$1`: ClassTag[B]): Flow[B]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"mapOpt","t":"def mapOpt[B](f: A => DEF[B]): Flow[B]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"collect","t":"def collect[B](f: PartialFunction[A, B]): Flow[B]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"take","t":"def take(f: A => Boolean): Flow[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"drop","t":"def drop(f: A => Boolean): Flow[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"map","t":"def map[B](f: A => B): Flow[B]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"flatMap","t":"def flatMap[B](f: A => Stream[B]): Flow[B]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"peek","t":"def peek(c: A => Unit): Flow[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_build.html","n":"peekIndexed","t":"def peekIndexed[U](c: (Int, A) => U, start: Int): Flow[A]","d":"scalqa/val/stream/flow/_build"},
{"l":"api/scalqa/val/stream/flow/_metadata.html","n":"_metadata","t":"trait _metadata[A]","d":"scalqa/val/stream/flow/_metadata"},
{"l":"api/scalqa/val/stream/flow/_metadata.html","n":"isParallel","t":"def isParallel: Boolean","d":"scalqa/val/stream/flow/_metadata"},
{"l":"api/scalqa/val/stream/flow/_metadata.html","n":"docTree","t":"def docTree: Tree","d":"scalqa/val/stream/flow/_metadata"},
{"l":"api/scalqa/val/stream/flow/_metadata.html","n":"sizeOpt","t":"def sizeOpt: Opt","d":"scalqa/val/stream/flow/_metadata"},
{"l":"api/scalqa/val/stream/flow/_metadata.html","n":"sizeLongOpt","t":"def sizeLongOpt: Opt","d":"scalqa/val/stream/flow/_metadata"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"_use","t":"trait _use[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"findAnyOpt","t":"def findAnyOpt: DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"findOpt","t":"def findOpt(f: A => Boolean): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"find","t":"def find(f: A => Boolean): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"isEvery","t":"def isEvery(f: A => Boolean): Boolean","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"exists","t":"def exists(f: A => Boolean): Boolean","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"contains","t":"def contains[B >: A](value: B): Boolean","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"count","t":"def count: Int","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"countAndTime","t":"def countAndTime: (Int, Length)","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"reduce","t":"def reduce(bf: (A, A) => A): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"reduceOpt","t":"def reduceOpt(bf: (A, A) => A): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"fold","t":"def fold(start: A)(bf: (A, A) => A): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"foldAs","t":"def foldAs[B](start: B)(bf: (B, A) => B, cf: (B, B) => B): B","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"sum","t":"def sum(using Sum[A]): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"min","t":"def min(using Ordering[A]): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"minBy","t":"def minBy[B](f: A => B)(using Ordering[B]): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"max","t":"def max(using Ordering[A]): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"maxBy","t":"def maxBy[B](f: A => B)(using Ordering[B]): A","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"range","t":"def range(using Ordering[A]): Range[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"minOpt","t":"def minOpt(using Ordering[A]): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"minByOpt","t":"def minByOpt[B](f: A => B)(using Ordering[B]): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"maxOpt","t":"def maxOpt(using Ordering[A]): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"maxByOpt","t":"def maxByOpt[B](f: A => B)(using Ordering[B]): DEF[A]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"rangeOpt","t":"def rangeOpt(using Ordering[A]): DEF[Range[A]]","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"foreach","t":"def foreach[U](f: A => U): Unit","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/flow/_use.html","n":"drain","t":"def drain: Unit","d":"scalqa/val/stream/flow/_use"},
{"l":"api/scalqa/val/stream/preview.html","n":"scalqa.val.stream.preview","t":"package scalqa.val.stream.preview","d":"scalqa/val/stream/preview"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"LazySize","t":"class LazySize","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"preload","t":"def preload(i: Int): Int","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"==","t":"def ==(i: Int): Boolean","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"<","t":"def <(i: Int): Boolean","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":">","t":"def >(i: Int): Boolean","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"<=","t":"def <=(i: Int): Boolean","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":">=","t":"def >=(i: Int): Boolean","d":"scalqa/val/stream/preview/LazySize"},
{"l":"api/scalqa/val/stream/preview/LazySize.html","n":"size","t":"def size: Int","d":"scalqa/val/stream/preview/LazySize"}];